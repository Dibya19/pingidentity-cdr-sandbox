{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Quick Start Guide \u00b6 The CDR Sandbox is an all-encompassing \u201cblack-box\u201d environment created using Docker to deploy images in stable, network-enabled containers. The sandbox includes preconfigured Docker Compose YAML files for quick and easy deployment in a testing/lab scenario. For production deployments, a more comprehensive orchestration solution (eg. Kubernetes) is recommended. Prerequisites \u00b6 Root access to a Linux or MacOS machine with: Git Docker At least 12GB of RAM available to Docker A GitHub Account An active Ping Identity support account (Link) A working Ping Identity DevOps installation (Link) Step by Step Guide \u00b6 Clone the CDR Repository \u00b6 While installing Ping Identity devops, you should have created a project folder in your home directory. We\u2019re going to host the CDR sandbox here too: git clone \\ https://github.com/pingidentity/pingidentity-cdr-sandbox.git \\ ~/projects/cdr Note Using ~/projects/cdr will make it easier to follow this guide. It will also make it easier for us to help you if you encounter issues. Configure and Start the Stack \u00b6 Navigate to ~/projects/cdr/docker-compose and copy the cdr.env.template file to cdr.env cp \\ ~/projects/cdr/docker-compose/cdr.env.template \\ ~/projects/cdr/docker-compose/cdr.env Add the following entries to the /etc/hosts file 127 .0.0.1 sso-admin.data-holder.local 127 .0.0.1 sso.data-holder.local 127 .0.0.1 api.data-holder.local 127 .0.0.1 dr.data-recipient.local 127 .0.0.1 mockregister.data-holder.local 127 .0.0.1 pd.data-holder.local 127 .0.0.1 consent.data-holder.local 127 .0.0.1 spa.data-recipient.local Use docker-compose to bring the CDR Sandbox stack up: docker-compose \\ -f \\ ~/projects/cdr/docker-compose/docker-compose.yaml \\ up -d To display the server logs as the stack starts up, run the following command (ctrl-c to exit): docker-compose \\ -f \\ ~/projects/cdr/docker-compose/docker-compose.yaml \\ logs -f To display the status of each container, run one of the following commands: docker ps Run the Data Recipient Demonstration Application - DATA OUT for Data Holders \u00b6 The Data Recipient Demonstration Application (DR Client) has been provided for the purposes of demonstrating the basic Consumer Journey as detailed in the Consumer Standards Consumer Experience Guidelines . The DR Client is designed to demonstrate the Data Recipient and Data Holder interaction throughout a consent lifecycle; specifically it implements the Consent, Authenticate and Authorise stages of the Consumer Journey - The Consent Flow. The DR Client implements the three main roles as defined in the Consumer Data Rights standard: The Data Holder - AnyBank The Data Recipient - Account Link (ALink) The Customer - Alice Stone The following steps will demonstrate how: To establish a consent with Alice\u2019s bank: AnyBank To use the ALink application to access transaction data Alice can adjust and/or revoke her consent Throughout the content lifecycle Alice will be able to verify the consent is being enforced by refreshing the Alink application and confirming whether the balances for each shared transaction account are visible or not. The DR Client is already running as a service if you followed the steps detailed above. To confirm that the service is running enter: docker ps -f \"name=pingdirectory\" And verify that the value of STATUS is \u201chealthy\u201d Running the DR Client \u00b6 Open your web browser and goto http://dr.data-recipient.local:8080/ SSL Certificates The sandbox includes a self-signed SSL certificate. You will need to accept the security warning to access the DR Client. At the ALink Data Recipient login page provide the following: Username: astone Password: password You should now be logged into ALink as the CDR Consumer \u201castone\u201d Select the My Banks button (top right corner) From the drop down of Data Holders select \u201cAnyBank\u201d and click the Connect button Validate the Consent request and click Start. You will now be redirected to AnyBank to Authenticate and Authorise the consent. At the AnyBank Customer ID prompt enter in Alice\u2019s bank identifier: Customer ID: crn1 At the SMS OTP field provide the value: SMS OTP: 123456 Note The sandbox includes a mock SMS provider that will accept the OTP value of \u201c123456\u201d for testing purposes. AnyBank will present the Authorisation prompt. Review the authorisation and confirm that it matches the Consent requested by ALink. Note The right hand column is dynamic, being populated based upon scopes that are sent from the Data Recipient. For the brevity of the UI and demo the scopes are set to Basic Account Details and Transaction Details. Select the 1st the Transaction Account to share transaction data with ALink Click the Confirm button. Alison should be redirected back to ALink. On the Alink page the consent should be shown. The consent can be revoked from here. Click on the ALink logo to view the shared account balances. Repeat steps 5 to 13 specifying additional transaction accounts in step 10 to update the consent Note the extra Transaction Accounts and associated balances. Select the My Banks button and click the Revoke Consent button. You will receive an alert stating that the Consent has been revoked. To validate the revoked consent click on the ALink logo to view no more shared accounts. The DR Client uses the following DR users and DH Customer Numbers. Any combination of Username and Customer Number can be used however only one at a time. Run the Data Recipient SPA Application - DATA IN for Data Holders \u00b6 The Data Recipient SPA Application (SPA Appliction) is designed to demonstrate the interaction between a DH acting as a DR to \"consume\" shared data from 3rd party Data Holders. It implements the CDR consent lifecycle allowing customer to consnet a DH to obtain data from anothet DH. The SPA Appliction used 4 actors that implement the three main roles as defined in the Consumer Data Rights standard: The Data Holders - 3rd Party Data Holder and Any Bank The Data Recipient - SPA Application (spa.data-recipient.local) The Customer - 3rd Party Data Holder (CRN0), ANY Bank (CRN1) The following steps will demonstrate how: Access the 3rd Party Data Holder's DR application Authenticate to the 3rd Party Data Holder Initiate a sharing flow with Any Bank (Consent) Authenticate and Authorise the Consent with Any Bank Use the SPA Appliction to access transaction data The SPA Appliction is already running as a service if you followed the steps detailed above. To confirm that the service is running enter: docker ps -f \"name=pingdirectory\" And verify that the value of STATUS is \u201chealthy\u201d Running the SPA Appliction \u00b6 Open your web browser and goto https://spa.data-recipient.local/ SSL Certificates The sandbox includes a self-signed SSL certificate. You will need to accept the security warning to access the SPA Appliction. Select \"Any Bank\" from the drop down list and click Submit You will be asked to authenticate as a customer of the 3rd Party Data Holder Username: bhope Password: password You will now be redirected to AnyBank to Authenticate and Authorise the consent. At the AnyBank Customer ID prompt enter in Alice\u2019s bank identifier: Customer ID: crn0 At the SMS OTP field provide the value: SMS OTP: 123456 Note The sandbox includes a mock SMS provider that will accept the OTP value of \u201c123456\u201d for testing purposes. AnyBank will present the Authorisation prompt. Review the authorisation. Note The right hand column is dynamic, being populated based upon scopes that are sent from the Data Recipient. For the brevity of the UI and demo the scopes are set to Basic Account Details and Transaction Details. Select the 1st the Transaction Account to share transaction data with 3rd Party Data Holder Click the Confirm button. You should be redirected back to SPA Appliction. Click \"Exchange Code for Token Response\" to continue Click \"Get Accounts\" to retrieve the consented accounts from Any Bank for Customer CRN1. Accessing Account Data with Existing Arrangement ID \u00b6 Click \"Start Again\" Select \"...\" from the drop down list and click Submit Click \"Exchange Code for Token Response\" to continue Click \"Get Accounts\" to retrieve the consented accounts from Any Bank for Customer CRN1. Note You should not be prompted to reconsent. Shut Down the Stack \u00b6 When you no longer want to run the CDR Reference Sandbox, you can either stop the running stack, or bring the stack down. To stop the running stack without removing any of the containers or associated Docker networks: docker-compose \\ -f \\ ~/projects/cdr/docker-compose/docker-compose.yaml \\ stop To remove all of the containers and associated Docker networks: docker-compose \\ -f \\ ~/projects/cdr/docker-compose/docker-compose.yaml \\ down To completely remove the CDR Reference images and configuration: docker system prune --force docker image prune --all --force rm -rf ~/projects/cdr Other Considerations \u00b6 Environment Configuration (cdr.env) \u00b6 The CDR Sandbox configuration is driven by the parameters defined within the cdr.env file that is located in the ~/projects/cdr/docker-compose directory. Some of these parameters can be adjusted to support your environment. Tip You will need to restart the sandbox for these changes to apply. SERVER_PROFILE_BRANCH Default Value: [version of the CDR Sandbox to run. e.g. cdr-1.2-core-001] The SERVER_PROFILE_BRANCH value represents the version of the CDR Sandbox to download and execute. BASE_HOSTNAME Default Value: data-holder.local The BASE_HOSTNAME value represents the base DNS name used to access the Data Holder's web services and applications. You will need to ensure hosts files or DNS are updated to reflect the appropriate IP addresses for the containers once the sandbox is running if you change this value. BRAND1_BGCOLOR Default Value: rgb(50, 115, 220) BRAND2_BGCOLOR Default Value: #373C41 PF_BASE_PORT Default Value: 443 The PF_BASE_PORT value defines the listening port of PingFederate. BASE_URL Default Value: http://dr.data-recipient.local:8080 The BASE_URL value is the URL used to access the sample Data Recipient application. You will need to ensure hosts files or DNS are updated to reflect the appropriate IP addresses for the containers once the sandbox is running if you change this value. DR_CLIENT-authorization_endpoint Default Value: https://sso.data-holder.local/as/authorization.oauth2 The DR_CLIENT-authorization_endpoint value represents the OAUTH2 compliant end point that is required by the CDR Security profile to obtain a valid data sharing token. The end point is hosted by PingAccess to enforce MTLS as well as provide for the ability to capture the value of the minted refresh token. You will need to ensure hosts files or DNS are updated to reflect the appropriate IP addresses for the containers once the sandbox is running if you change this value. You will need to update this value if you update BASE_HOSTNAME. DR_CLIENT-ss_redirect_uri Default Value: http://dr.data-recipient.local:8080/* The DR_CLIENT-ss_redirect_uri value is the authorised value that the sample Data Recipient sets up during its Dynamic Client Registration process. This value is stored against the OAUTH Client within PingFederate. You will need to ensure hosts files or DNS are updated to reflect the appropriate IP addresses for the containers once the sandbox is running if you change this value. You will need to update this value if you update BASE_URL. Saving Server Configurations \u00b6 For your initial deployment of the sandbox, we recommend you make no changes to the docker-compose.yaml file to ensure you have a successful first-time deployment. Any configuration changes you make will not be saved when you bring down the stack. For subsequent deployments, see Saving your configuration changes .","title":"CDR Quick Start"},{"location":"#quick-start-guide","text":"The CDR Sandbox is an all-encompassing \u201cblack-box\u201d environment created using Docker to deploy images in stable, network-enabled containers. The sandbox includes preconfigured Docker Compose YAML files for quick and easy deployment in a testing/lab scenario. For production deployments, a more comprehensive orchestration solution (eg. Kubernetes) is recommended.","title":"Quick Start Guide"},{"location":"#prerequisites","text":"Root access to a Linux or MacOS machine with: Git Docker At least 12GB of RAM available to Docker A GitHub Account An active Ping Identity support account (Link) A working Ping Identity DevOps installation (Link)","title":"Prerequisites"},{"location":"#step-by-step-guide","text":"","title":"Step by Step Guide"},{"location":"#clone-the-cdr-repository","text":"While installing Ping Identity devops, you should have created a project folder in your home directory. We\u2019re going to host the CDR sandbox here too: git clone \\ https://github.com/pingidentity/pingidentity-cdr-sandbox.git \\ ~/projects/cdr Note Using ~/projects/cdr will make it easier to follow this guide. It will also make it easier for us to help you if you encounter issues.","title":"Clone the CDR Repository"},{"location":"#configure-and-start-the-stack","text":"Navigate to ~/projects/cdr/docker-compose and copy the cdr.env.template file to cdr.env cp \\ ~/projects/cdr/docker-compose/cdr.env.template \\ ~/projects/cdr/docker-compose/cdr.env Add the following entries to the /etc/hosts file 127 .0.0.1 sso-admin.data-holder.local 127 .0.0.1 sso.data-holder.local 127 .0.0.1 api.data-holder.local 127 .0.0.1 dr.data-recipient.local 127 .0.0.1 mockregister.data-holder.local 127 .0.0.1 pd.data-holder.local 127 .0.0.1 consent.data-holder.local 127 .0.0.1 spa.data-recipient.local Use docker-compose to bring the CDR Sandbox stack up: docker-compose \\ -f \\ ~/projects/cdr/docker-compose/docker-compose.yaml \\ up -d To display the server logs as the stack starts up, run the following command (ctrl-c to exit): docker-compose \\ -f \\ ~/projects/cdr/docker-compose/docker-compose.yaml \\ logs -f To display the status of each container, run one of the following commands: docker ps","title":"Configure and Start the Stack"},{"location":"#run-the-data-recipient-demonstration-application-data-out-for-data-holders","text":"The Data Recipient Demonstration Application (DR Client) has been provided for the purposes of demonstrating the basic Consumer Journey as detailed in the Consumer Standards Consumer Experience Guidelines . The DR Client is designed to demonstrate the Data Recipient and Data Holder interaction throughout a consent lifecycle; specifically it implements the Consent, Authenticate and Authorise stages of the Consumer Journey - The Consent Flow. The DR Client implements the three main roles as defined in the Consumer Data Rights standard: The Data Holder - AnyBank The Data Recipient - Account Link (ALink) The Customer - Alice Stone The following steps will demonstrate how: To establish a consent with Alice\u2019s bank: AnyBank To use the ALink application to access transaction data Alice can adjust and/or revoke her consent Throughout the content lifecycle Alice will be able to verify the consent is being enforced by refreshing the Alink application and confirming whether the balances for each shared transaction account are visible or not. The DR Client is already running as a service if you followed the steps detailed above. To confirm that the service is running enter: docker ps -f \"name=pingdirectory\" And verify that the value of STATUS is \u201chealthy\u201d","title":"Run the Data Recipient Demonstration Application - DATA OUT for Data Holders"},{"location":"#running-the-dr-client","text":"Open your web browser and goto http://dr.data-recipient.local:8080/ SSL Certificates The sandbox includes a self-signed SSL certificate. You will need to accept the security warning to access the DR Client. At the ALink Data Recipient login page provide the following: Username: astone Password: password You should now be logged into ALink as the CDR Consumer \u201castone\u201d Select the My Banks button (top right corner) From the drop down of Data Holders select \u201cAnyBank\u201d and click the Connect button Validate the Consent request and click Start. You will now be redirected to AnyBank to Authenticate and Authorise the consent. At the AnyBank Customer ID prompt enter in Alice\u2019s bank identifier: Customer ID: crn1 At the SMS OTP field provide the value: SMS OTP: 123456 Note The sandbox includes a mock SMS provider that will accept the OTP value of \u201c123456\u201d for testing purposes. AnyBank will present the Authorisation prompt. Review the authorisation and confirm that it matches the Consent requested by ALink. Note The right hand column is dynamic, being populated based upon scopes that are sent from the Data Recipient. For the brevity of the UI and demo the scopes are set to Basic Account Details and Transaction Details. Select the 1st the Transaction Account to share transaction data with ALink Click the Confirm button. Alison should be redirected back to ALink. On the Alink page the consent should be shown. The consent can be revoked from here. Click on the ALink logo to view the shared account balances. Repeat steps 5 to 13 specifying additional transaction accounts in step 10 to update the consent Note the extra Transaction Accounts and associated balances. Select the My Banks button and click the Revoke Consent button. You will receive an alert stating that the Consent has been revoked. To validate the revoked consent click on the ALink logo to view no more shared accounts. The DR Client uses the following DR users and DH Customer Numbers. Any combination of Username and Customer Number can be used however only one at a time.","title":"Running the DR Client"},{"location":"#run-the-data-recipient-spa-application-data-in-for-data-holders","text":"The Data Recipient SPA Application (SPA Appliction) is designed to demonstrate the interaction between a DH acting as a DR to \"consume\" shared data from 3rd party Data Holders. It implements the CDR consent lifecycle allowing customer to consnet a DH to obtain data from anothet DH. The SPA Appliction used 4 actors that implement the three main roles as defined in the Consumer Data Rights standard: The Data Holders - 3rd Party Data Holder and Any Bank The Data Recipient - SPA Application (spa.data-recipient.local) The Customer - 3rd Party Data Holder (CRN0), ANY Bank (CRN1) The following steps will demonstrate how: Access the 3rd Party Data Holder's DR application Authenticate to the 3rd Party Data Holder Initiate a sharing flow with Any Bank (Consent) Authenticate and Authorise the Consent with Any Bank Use the SPA Appliction to access transaction data The SPA Appliction is already running as a service if you followed the steps detailed above. To confirm that the service is running enter: docker ps -f \"name=pingdirectory\" And verify that the value of STATUS is \u201chealthy\u201d","title":"Run the Data Recipient SPA Application - DATA IN for Data Holders"},{"location":"#running-the-spa-appliction","text":"Open your web browser and goto https://spa.data-recipient.local/ SSL Certificates The sandbox includes a self-signed SSL certificate. You will need to accept the security warning to access the SPA Appliction. Select \"Any Bank\" from the drop down list and click Submit You will be asked to authenticate as a customer of the 3rd Party Data Holder Username: bhope Password: password You will now be redirected to AnyBank to Authenticate and Authorise the consent. At the AnyBank Customer ID prompt enter in Alice\u2019s bank identifier: Customer ID: crn0 At the SMS OTP field provide the value: SMS OTP: 123456 Note The sandbox includes a mock SMS provider that will accept the OTP value of \u201c123456\u201d for testing purposes. AnyBank will present the Authorisation prompt. Review the authorisation. Note The right hand column is dynamic, being populated based upon scopes that are sent from the Data Recipient. For the brevity of the UI and demo the scopes are set to Basic Account Details and Transaction Details. Select the 1st the Transaction Account to share transaction data with 3rd Party Data Holder Click the Confirm button. You should be redirected back to SPA Appliction. Click \"Exchange Code for Token Response\" to continue Click \"Get Accounts\" to retrieve the consented accounts from Any Bank for Customer CRN1.","title":"Running the SPA Appliction"},{"location":"#accessing-account-data-with-existing-arrangement-id","text":"Click \"Start Again\" Select \"...\" from the drop down list and click Submit Click \"Exchange Code for Token Response\" to continue Click \"Get Accounts\" to retrieve the consented accounts from Any Bank for Customer CRN1. Note You should not be prompted to reconsent.","title":"Accessing Account Data with Existing Arrangement ID"},{"location":"#shut-down-the-stack","text":"When you no longer want to run the CDR Reference Sandbox, you can either stop the running stack, or bring the stack down. To stop the running stack without removing any of the containers or associated Docker networks: docker-compose \\ -f \\ ~/projects/cdr/docker-compose/docker-compose.yaml \\ stop To remove all of the containers and associated Docker networks: docker-compose \\ -f \\ ~/projects/cdr/docker-compose/docker-compose.yaml \\ down To completely remove the CDR Reference images and configuration: docker system prune --force docker image prune --all --force rm -rf ~/projects/cdr","title":"Shut Down the Stack"},{"location":"#other-considerations","text":"","title":"Other Considerations"},{"location":"#environment-configuration-cdrenv","text":"The CDR Sandbox configuration is driven by the parameters defined within the cdr.env file that is located in the ~/projects/cdr/docker-compose directory. Some of these parameters can be adjusted to support your environment. Tip You will need to restart the sandbox for these changes to apply. SERVER_PROFILE_BRANCH Default Value: [version of the CDR Sandbox to run. e.g. cdr-1.2-core-001] The SERVER_PROFILE_BRANCH value represents the version of the CDR Sandbox to download and execute. BASE_HOSTNAME Default Value: data-holder.local The BASE_HOSTNAME value represents the base DNS name used to access the Data Holder's web services and applications. You will need to ensure hosts files or DNS are updated to reflect the appropriate IP addresses for the containers once the sandbox is running if you change this value. BRAND1_BGCOLOR Default Value: rgb(50, 115, 220) BRAND2_BGCOLOR Default Value: #373C41 PF_BASE_PORT Default Value: 443 The PF_BASE_PORT value defines the listening port of PingFederate. BASE_URL Default Value: http://dr.data-recipient.local:8080 The BASE_URL value is the URL used to access the sample Data Recipient application. You will need to ensure hosts files or DNS are updated to reflect the appropriate IP addresses for the containers once the sandbox is running if you change this value. DR_CLIENT-authorization_endpoint Default Value: https://sso.data-holder.local/as/authorization.oauth2 The DR_CLIENT-authorization_endpoint value represents the OAUTH2 compliant end point that is required by the CDR Security profile to obtain a valid data sharing token. The end point is hosted by PingAccess to enforce MTLS as well as provide for the ability to capture the value of the minted refresh token. You will need to ensure hosts files or DNS are updated to reflect the appropriate IP addresses for the containers once the sandbox is running if you change this value. You will need to update this value if you update BASE_HOSTNAME. DR_CLIENT-ss_redirect_uri Default Value: http://dr.data-recipient.local:8080/* The DR_CLIENT-ss_redirect_uri value is the authorised value that the sample Data Recipient sets up during its Dynamic Client Registration process. This value is stored against the OAUTH Client within PingFederate. You will need to ensure hosts files or DNS are updated to reflect the appropriate IP addresses for the containers once the sandbox is running if you change this value. You will need to update this value if you update BASE_URL.","title":"Environment Configuration (cdr.env)"},{"location":"#saving-server-configurations","text":"For your initial deployment of the sandbox, we recommend you make no changes to the docker-compose.yaml file to ensure you have a successful first-time deployment. Any configuration changes you make will not be saved when you bring down the stack. For subsequent deployments, see Saving your configuration changes .","title":"Saving Server Configurations"},{"location":"postman/","text":"Setup Postman to Run Consent Scripts \u00b6 The CDR Sandbox includes a Postman collection that includes all the REST calls, in order, that follows the Consumer user journey as implemented in the Data Recipient Demonstration Application (https://github.com/pingidentity/pingidentity-cdr-sandbox/blob/master/docs/quickstart.md#3-run-the-data-recipient-demonstration-application) Prerequisites \u00b6 Postman 7 or above Download Postman here MTLS Authentication keys. Generating Certs Tip Using ~/projects/cdr will make it easier to follow this guide. It will also make it easier for us to help you if you encounter issues. Update the Postman Configuration \u00b6 Open the Postman Settings page On the Certificates tab Add a Certificate with the following details Host: sso.data-holder.local PFX File: ~/projects/cdr/scripts/postman/cert/network.p12 Passphrase: P@ssword1 Add a 2nd Certificate with the following details Host: api.data-holder.local PFX File: ~/projects/cdr/scripts/postman/cert/network.p12 Passphrase: P@ssword1 Import the Consent Flow Postman Collection \u00b6 Click on the \"Import\" button Click \"Upload Files\" Click on the Import button Select the Consent Flow Postman Collection File location ~/projects/cdr/scripts/postman/cdr-au.consent.postman_collection.json Click the \"Import\" Button Execute a Consent Flow Runner Test \u00b6 Click the \"Runner\" button Select \"Consent Flow v1.1 - External Consent\" in the All Collections window Click the \"Run Consent Flow\" button Verify all tests passed Manually Execute Consent Requests \u00b6 Note To execute individual requests you must specify a Postman \"Environment\". If none exists please create an empty Environment and ensure its selected. Expand the \"Consent Flow v1.1 - External Consent\" collection in the left pane Expand S001 Create Client | S001.T001 Create Client Select each request and click \"Send\" in order Expand S002 Consent Flow - Happy Scenario Expand each section and select each request and click \"Send\" in order Verify each request result returns an expected result Check the response from request \"S002.T004.001 - Get account list\" and ensure representative data is returned.","title":"Postman Setup"},{"location":"postman/#setup-postman-to-run-consent-scripts","text":"The CDR Sandbox includes a Postman collection that includes all the REST calls, in order, that follows the Consumer user journey as implemented in the Data Recipient Demonstration Application (https://github.com/pingidentity/pingidentity-cdr-sandbox/blob/master/docs/quickstart.md#3-run-the-data-recipient-demonstration-application)","title":"Setup Postman to Run Consent Scripts"},{"location":"postman/#prerequisites","text":"Postman 7 or above Download Postman here MTLS Authentication keys. Generating Certs Tip Using ~/projects/cdr will make it easier to follow this guide. It will also make it easier for us to help you if you encounter issues.","title":"Prerequisites"},{"location":"postman/#update-the-postman-configuration","text":"Open the Postman Settings page On the Certificates tab Add a Certificate with the following details Host: sso.data-holder.local PFX File: ~/projects/cdr/scripts/postman/cert/network.p12 Passphrase: P@ssword1 Add a 2nd Certificate with the following details Host: api.data-holder.local PFX File: ~/projects/cdr/scripts/postman/cert/network.p12 Passphrase: P@ssword1","title":"Update the Postman Configuration"},{"location":"postman/#import-the-consent-flow-postman-collection","text":"Click on the \"Import\" button Click \"Upload Files\" Click on the Import button Select the Consent Flow Postman Collection File location ~/projects/cdr/scripts/postman/cdr-au.consent.postman_collection.json Click the \"Import\" Button","title":"Import the Consent Flow Postman Collection"},{"location":"postman/#execute-a-consent-flow-runner-test","text":"Click the \"Runner\" button Select \"Consent Flow v1.1 - External Consent\" in the All Collections window Click the \"Run Consent Flow\" button Verify all tests passed","title":"Execute a Consent Flow Runner Test"},{"location":"postman/#manually-execute-consent-requests","text":"Note To execute individual requests you must specify a Postman \"Environment\". If none exists please create an empty Environment and ensure its selected. Expand the \"Consent Flow v1.1 - External Consent\" collection in the left pane Expand S001 Create Client | S001.T001 Create Client Select each request and click \"Send\" in order Expand S002 Consent Flow - Happy Scenario Expand each section and select each request and click \"Send\" in order Verify each request result returns an expected result Check the response from request \"S002.T004.001 - Get account list\" and ensure representative data is returned.","title":"Manually Execute Consent Requests"},{"location":"howtos/howto_adminconsoles/","text":"Administration Consoles \u00b6 Once you see that the containers are healthy in docker ps PingFederate \u00b6 Go to https://localhost:9999/pingfederate/app Log in with `Administrator / 2FederateM0re' PingAccess \u00b6 Go to https://localhost:9000 Log in with 'Administrator / 2FederateM0re' Note: You may be asked to accept license agreement and change password PingDataGovernance Symphonic PAP \u00b6 Go to https://localhost:8443 Log in with 'Admin / password123' PingDirectory \u00b6 Go to https://localhost:8443/console Log in with: server: pingdirectory user: Administrator password: 2FederateM0re PingDirectory LDAPs Traffic \u00b6 PingDirectory exposes LDAP traffic via an LDAPS port 1636 Navigate to https://localhost:1636/dc=example,dc=com","title":"Access Administration Consoles"},{"location":"howtos/howto_adminconsoles/#administration-consoles","text":"Once you see that the containers are healthy in docker ps","title":"Administration Consoles"},{"location":"howtos/howto_adminconsoles/#pingfederate","text":"Go to https://localhost:9999/pingfederate/app Log in with `Administrator / 2FederateM0re'","title":"PingFederate"},{"location":"howtos/howto_adminconsoles/#pingaccess","text":"Go to https://localhost:9000 Log in with 'Administrator / 2FederateM0re' Note: You may be asked to accept license agreement and change password","title":"PingAccess"},{"location":"howtos/howto_adminconsoles/#pingdatagovernance-symphonic-pap","text":"Go to https://localhost:8443 Log in with 'Admin / password123'","title":"PingDataGovernance Symphonic PAP"},{"location":"howtos/howto_adminconsoles/#pingdirectory","text":"Go to https://localhost:8443/console Log in with: server: pingdirectory user: Administrator password: 2FederateM0re","title":"PingDirectory"},{"location":"howtos/howto_adminconsoles/#pingdirectory-ldaps-traffic","text":"PingDirectory exposes LDAP traffic via an LDAPS port 1636 Navigate to https://localhost:1636/dc=example,dc=com","title":"PingDirectory LDAPs Traffic"},{"location":"howtos/howto_generatecerts/","text":"Generating MTLS Authentication Keys \u00b6 The Consumer Data Rights requires that selected communication between the 3 parties, Data Holder, Data Recipient and Data Registry, be authenticated using a private/public key pair signed by the ACCC Registry. To allow the CDR Sandox to operate standalone Ping Identity has included a \"Mock Registry\" as well as a certificate authority to facilitate the generation of a network key for MTLS Authentication. Follow the instructions below to generate a network.p12 file. Tip Using ~/projects/cdr will make it easier to follow this guide. It will also make it easier for us to help you if you encounter issues. Generate Keys via Command Line (Recommended) \u00b6 Change to the postman scripts folder cd ~/projects/cdr/scripts/postman Execute the certificate generation script ./create-postman-certs.sh Note The script will output network.p12 in ~/projects/cdr/scripts/postman/cert folder Validate that the following files have been created ls -l ~/projects/cdr/scripts/postman/cert client.csr client.key csrresponse.p7b csrresponse.pem network.p12 public.cer Note The default password used to protect the network.p12 keystore is P@ssword1 Generate Keys via Web Browser \u00b6 Change to the postman cert folder cd ~/projects/cdr/scripts/postman/cert Generate a new private key openssl genrsa -out MyClient1.key 2048 Generate a Certificate Signing Request(CSR) openssl req \\ -new \\ -key MyClient1.key \\ -out MyClient1.csr \\ -subj \"/CN=sampleDR/O=My Company Name LTD./C=AU\" Browse to the Mock Registry Certificate Authority https://mockregister.data-holder.local/csrFlow Download CA Certificate Note The CA certificate will be provided in the signed response, however depending on your system, you may require the CA certificate to complete the chaining process. Click on the Download CA Certificate button Move the CA Certificate to the cert folder cp ~/Downloads/public.cer \\ ~/projects/cdr/scripts/postman/cert/public.cer Download the Signed Certificate Click \"Choose File\" Select the MyClient1.csr file to upload Click Download CSR Request Move the Signed Certificate to the cert folder cp ~/Downloads/csrresponse.p7b \\ ~/projects/cdr/scripts/postman/cert/csrresponse.p7b Convert the PKCS response to a PEM openssl pkcs7 \\ -print_certs \\ -in csrresponse.p7b \\ -out csrresponse.pem Create the PKCS12 Keystore openssl pkcs12 \\ -export \\ -out network.p12 \\ -inkey MyClient1.key \\ -in csrresponse.pem","title":"Generate MTLS Authentication Keys"},{"location":"howtos/howto_generatecerts/#generating-mtls-authentication-keys","text":"The Consumer Data Rights requires that selected communication between the 3 parties, Data Holder, Data Recipient and Data Registry, be authenticated using a private/public key pair signed by the ACCC Registry. To allow the CDR Sandox to operate standalone Ping Identity has included a \"Mock Registry\" as well as a certificate authority to facilitate the generation of a network key for MTLS Authentication. Follow the instructions below to generate a network.p12 file. Tip Using ~/projects/cdr will make it easier to follow this guide. It will also make it easier for us to help you if you encounter issues.","title":"Generating MTLS Authentication Keys"},{"location":"howtos/howto_generatecerts/#generate-keys-via-command-line-recommended","text":"Change to the postman scripts folder cd ~/projects/cdr/scripts/postman Execute the certificate generation script ./create-postman-certs.sh Note The script will output network.p12 in ~/projects/cdr/scripts/postman/cert folder Validate that the following files have been created ls -l ~/projects/cdr/scripts/postman/cert client.csr client.key csrresponse.p7b csrresponse.pem network.p12 public.cer Note The default password used to protect the network.p12 keystore is P@ssword1","title":"Generate Keys via Command Line (Recommended)"},{"location":"howtos/howto_generatecerts/#generate-keys-via-web-browser","text":"Change to the postman cert folder cd ~/projects/cdr/scripts/postman/cert Generate a new private key openssl genrsa -out MyClient1.key 2048 Generate a Certificate Signing Request(CSR) openssl req \\ -new \\ -key MyClient1.key \\ -out MyClient1.csr \\ -subj \"/CN=sampleDR/O=My Company Name LTD./C=AU\" Browse to the Mock Registry Certificate Authority https://mockregister.data-holder.local/csrFlow Download CA Certificate Note The CA certificate will be provided in the signed response, however depending on your system, you may require the CA certificate to complete the chaining process. Click on the Download CA Certificate button Move the CA Certificate to the cert folder cp ~/Downloads/public.cer \\ ~/projects/cdr/scripts/postman/cert/public.cer Download the Signed Certificate Click \"Choose File\" Select the MyClient1.csr file to upload Click Download CSR Request Move the Signed Certificate to the cert folder cp ~/Downloads/csrresponse.p7b \\ ~/projects/cdr/scripts/postman/cert/csrresponse.p7b Convert the PKCS response to a PEM openssl pkcs7 \\ -print_certs \\ -in csrresponse.p7b \\ -out csrresponse.pem Create the PKCS12 Keystore openssl pkcs12 \\ -export \\ -out network.p12 \\ -inkey MyClient1.key \\ -in csrresponse.pem","title":"Generate Keys via Web Browser"},{"location":"legal/3rdPartySoftware/","text":"Third-Party Software \u00b6 Ping Identity Docker Images bundle various third-party tools to enable product functionality. Review the list below for references. OpenJDK . GNU General Public License version 2.0. OpenSSH . Based on BSD licensing. Git . GNU General Public License version 2.0. Gettext . GNU General Public License version 2.0. Curl . Based on MIT/X license. ca-certificates . GNU General Public License version 2.0. Jq . MIT licensing. Gnupg . GNU general Public License.","title":"Third-Party Software"},{"location":"legal/3rdPartySoftware/#third-party-software","text":"Ping Identity Docker Images bundle various third-party tools to enable product functionality. Review the list below for references. OpenJDK . GNU General Public License version 2.0. OpenSSH . Based on BSD licensing. Git . GNU General Public License version 2.0. Gettext . GNU General Public License version 2.0. Curl . Based on MIT/X license. ca-certificates . GNU General Public License version 2.0. Jq . MIT licensing. Gnupg . GNU general Public License.","title":"Third-Party Software"},{"location":"legal/contributing/","text":"Contributing \u00b6 Thanks for taking the time to contribute! How can I contribute? \u00b6 Reporting bugs \u00b6 How do I submit a bug report? \u00b6 Bugs are tracked as GitHub issues . You can report a bug by submitting an issue in the Ping Identity DevOps issue tracker . To help the maintainers understand and reproduce the problem, please try to provide information like the following: A clear and descriptive title. A description of what happened and a description of what you expected to happen. An example with the exact steps needed to reproduce the problem. If relevant, sample code is helpful. Please understand that bug reports are reviewed and prioritized internally, and we may not be able to address all bug reports or provide an estimated time for resolution. Suggesting enhancements \u00b6 As with bugs, requests are tracked as GitHub issues . You can suggest an enhancement by submitting an issue in the Ping Identity DevOps issue tracker . Please understand that enhancement requests are reviewed and prioritized internally, and we may not be able to address all requests or provide an estimated time for resolution. Alternate routes for submitting bugs and suggesting enhancements \u00b6 If you would rather not have your issue discussed in public, you can email bug reports or enhancement requests to cdr_sandbox@pingidentity.com . Contributing Code Changes \u00b6 Ping Identity does not accept third-party code submissions.","title":"Contributing"},{"location":"legal/contributing/#contributing","text":"Thanks for taking the time to contribute!","title":"Contributing"},{"location":"legal/contributing/#how-can-i-contribute","text":"","title":"How can I contribute?"},{"location":"legal/contributing/#reporting-bugs","text":"","title":"Reporting bugs"},{"location":"legal/contributing/#how-do-i-submit-a-bug-report","text":"Bugs are tracked as GitHub issues . You can report a bug by submitting an issue in the Ping Identity DevOps issue tracker . To help the maintainers understand and reproduce the problem, please try to provide information like the following: A clear and descriptive title. A description of what happened and a description of what you expected to happen. An example with the exact steps needed to reproduce the problem. If relevant, sample code is helpful. Please understand that bug reports are reviewed and prioritized internally, and we may not be able to address all bug reports or provide an estimated time for resolution.","title":"How do I submit a bug report?"},{"location":"legal/contributing/#suggesting-enhancements","text":"As with bugs, requests are tracked as GitHub issues . You can suggest an enhancement by submitting an issue in the Ping Identity DevOps issue tracker . Please understand that enhancement requests are reviewed and prioritized internally, and we may not be able to address all requests or provide an estimated time for resolution.","title":"Suggesting enhancements"},{"location":"legal/contributing/#alternate-routes-for-submitting-bugs-and-suggesting-enhancements","text":"If you would rather not have your issue discussed in public, you can email bug reports or enhancement requests to cdr_sandbox@pingidentity.com .","title":"Alternate routes for submitting bugs and suggesting enhancements"},{"location":"legal/contributing/#contributing-code-changes","text":"Ping Identity does not accept third-party code submissions.","title":"Contributing Code Changes"},{"location":"legal/disclaimer/","text":"Disclaimer \u00b6 Copyright (C) 2020 Ping Identity Corporation All rights reserved. Ping Identity Corporation 1099 18th St Suite 2950 Denver, CO 80202 303.468.2900 http://www.pingidentity.com Disclaimer Of Warranties \u00b6 THE SOFTWARE PROVIDED HEREUNDER IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT ANY WARRANTIES OR REPRESENTATIONS EXPRESS, IMPLIED OR STATUTORY; INCLUDING, WITHOUT LIMITATION, WARRANTIES OF QUALITY, PERFORMANCE, NONINFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. NOR ARE THERE ANY WARRANTIES CREATED BY A COURSE OR DEALING, COURSE OF PERFORMANCE OR TRADE USAGE. FURTHERMORE, THERE ARE NO WARRANTIES THAT THE SOFTWARE WILL MEET YOUR NEEDS OR BE FREE FROM ERRORS, OR THAT THE OPERATION OF THE SOFTWARE WILL BE UNINTERRUPTED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"Disclaimer"},{"location":"legal/disclaimer/#disclaimer","text":"Copyright (C) 2020 Ping Identity Corporation All rights reserved. Ping Identity Corporation 1099 18th St Suite 2950 Denver, CO 80202 303.468.2900 http://www.pingidentity.com","title":"Disclaimer"},{"location":"legal/disclaimer/#disclaimer-of-warranties","text":"THE SOFTWARE PROVIDED HEREUNDER IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT ANY WARRANTIES OR REPRESENTATIONS EXPRESS, IMPLIED OR STATUTORY; INCLUDING, WITHOUT LIMITATION, WARRANTIES OF QUALITY, PERFORMANCE, NONINFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. NOR ARE THERE ANY WARRANTIES CREATED BY A COURSE OR DEALING, COURSE OF PERFORMANCE OR TRADE USAGE. FURTHERMORE, THERE ARE NO WARRANTIES THAT THE SOFTWARE WILL MEET YOUR NEEDS OR BE FREE FROM ERRORS, OR THAT THE OPERATION OF THE SOFTWARE WILL BE UNINTERRUPTED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"Disclaimer Of Warranties"},{"location":"legal/license/","text":"License \u00b6 Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright 2019 Ping Identity Corp. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"legal/license/#license","text":"Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright 2019 Ping Identity Corp. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"release-notes/relnotes_CDR-1.2-core-002/","text":"Release Notes \u00b6 CDR Sandbox for OpenBanking, version CDR-1.2-core-002 \u00b6 Release Date: June 16, 2020 New Features \u00b6 CDR-19: Update Users in DR app. CDR-33: Tag images inline with version releases. CDR-97: Update certificates to be self-signed and match documented hostname CDR-120: Add Postman DCR Test Scripts CDR-126: Create Release-specific docker-compose directories/files Compliance Alignment \u00b6 CDR-65: 12.1.004 and 12.1.009: s_hash in id_token CDR-66: 12.2.002: Configure access token validity between 2 and 10 minutes. CDR-72: 14. LoA's: Correct configuration to align with specifications CDR-81: 27.1 Restrict ID Token encryption algorithms CDR-86: 30.1.003: Return appropriate error message for invalid DCR data CDR-114: HoK validation should verify that there is only 1 Authorization header Security \u00b6 CDR-107: Review/Remediate Git Security Alerts CDR-111: Manage security vulnerabilities with docker images CDR-118: Fix Security Vulnerabilities in DeepThought images Documentation \u00b6 CDR-125: Add Mockregister hosts file entry to documentation Resolved defects \u00b6 CDR-109: PingAccess incorrectly enforcing MTLS CDR-112: Update Authoriation screen to reference ALink CDR-113: Fix \"I Confirm\" In Consent Screen CDR-121: cdr.env.template should not reference host.docker.internal CDR-123: Removing grant record did not revoke the AT CDR-26: Fix the footer in the DR client","title":"CDR 1.2 (core 002)"},{"location":"release-notes/relnotes_CDR-1.2-core-002/#release-notes","text":"","title":"Release Notes"},{"location":"release-notes/relnotes_CDR-1.2-core-002/#cdr-sandbox-for-openbanking-version-cdr-12-core-002","text":"Release Date: June 16, 2020","title":"CDR Sandbox for OpenBanking, version CDR-1.2-core-002"},{"location":"release-notes/relnotes_CDR-1.2-core-002/#new-features","text":"CDR-19: Update Users in DR app. CDR-33: Tag images inline with version releases. CDR-97: Update certificates to be self-signed and match documented hostname CDR-120: Add Postman DCR Test Scripts CDR-126: Create Release-specific docker-compose directories/files","title":"New Features"},{"location":"release-notes/relnotes_CDR-1.2-core-002/#compliance-alignment","text":"CDR-65: 12.1.004 and 12.1.009: s_hash in id_token CDR-66: 12.2.002: Configure access token validity between 2 and 10 minutes. CDR-72: 14. LoA's: Correct configuration to align with specifications CDR-81: 27.1 Restrict ID Token encryption algorithms CDR-86: 30.1.003: Return appropriate error message for invalid DCR data CDR-114: HoK validation should verify that there is only 1 Authorization header","title":"Compliance Alignment"},{"location":"release-notes/relnotes_CDR-1.2-core-002/#security","text":"CDR-107: Review/Remediate Git Security Alerts CDR-111: Manage security vulnerabilities with docker images CDR-118: Fix Security Vulnerabilities in DeepThought images","title":"Security"},{"location":"release-notes/relnotes_CDR-1.2-core-002/#documentation","text":"CDR-125: Add Mockregister hosts file entry to documentation","title":"Documentation"},{"location":"release-notes/relnotes_CDR-1.2-core-002/#resolved-defects","text":"CDR-109: PingAccess incorrectly enforcing MTLS CDR-112: Update Authoriation screen to reference ALink CDR-113: Fix \"I Confirm\" In Consent Screen CDR-121: cdr.env.template should not reference host.docker.internal CDR-123: Removing grant record did not revoke the AT CDR-26: Fix the footer in the DR client","title":"Resolved defects"},{"location":"release-notes/relnotes_CDR-1.2-core-003/","text":"Release Notes \u00b6 CDR Sandbox for OpenBanking, Version CDR-1.2-core-003 \u00b6 Release Date: July 06, 2020 New Features \u00b6 CDR-129: Create Postman scripts for consent flow and Dynamic Client Registration CDR-131: Upgrade PingFederate to 10.1 and PingAccess to 6.1 CDR-132: CDR Mock Registry CORS configuration to allow public host CDR-139: Create mockregister.data-holder.com.au DNS Compliance Alignment \u00b6 CDR-60: Consent Claims revisit: CDR-61: Consent Claims: refresh_token_expires_at CDR-62: Consent Claims: sharing_expires_at CDR-68: Refresh Token Duration CDR-73: Transport Security MTLS, HoK: CDR-76: Request Object: Sharing Duration CDR-78: End Points: Update openid-connect well-known CDR-87: ACCC DCR - Enforce cdr:registration scope for mgmt CDR-130: PingAccess to block introspect for access tokens CDR-136: Changes to auth_time CDR-134: ID Token must not contain PII Documentation \u00b6 CDR-128: Update Cert creation steps CDR-127: Document Postman Usage Resolved defects \u00b6 CDR-137: Persistent grant not extending on subsequent consent requests CDR-138: Showcase instance settings has incorrect domain CDR-141: 403 Error when accessing https://mockregister.data-holder.com.au/csrFlow","title":"CDR 1.2 (core 003)"},{"location":"release-notes/relnotes_CDR-1.2-core-003/#release-notes","text":"","title":"Release Notes"},{"location":"release-notes/relnotes_CDR-1.2-core-003/#cdr-sandbox-for-openbanking-version-cdr-12-core-003","text":"Release Date: July 06, 2020","title":"CDR Sandbox for OpenBanking, Version CDR-1.2-core-003"},{"location":"release-notes/relnotes_CDR-1.2-core-003/#new-features","text":"CDR-129: Create Postman scripts for consent flow and Dynamic Client Registration CDR-131: Upgrade PingFederate to 10.1 and PingAccess to 6.1 CDR-132: CDR Mock Registry CORS configuration to allow public host CDR-139: Create mockregister.data-holder.com.au DNS","title":"New Features"},{"location":"release-notes/relnotes_CDR-1.2-core-003/#compliance-alignment","text":"CDR-60: Consent Claims revisit: CDR-61: Consent Claims: refresh_token_expires_at CDR-62: Consent Claims: sharing_expires_at CDR-68: Refresh Token Duration CDR-73: Transport Security MTLS, HoK: CDR-76: Request Object: Sharing Duration CDR-78: End Points: Update openid-connect well-known CDR-87: ACCC DCR - Enforce cdr:registration scope for mgmt CDR-130: PingAccess to block introspect for access tokens CDR-136: Changes to auth_time CDR-134: ID Token must not contain PII","title":"Compliance Alignment"},{"location":"release-notes/relnotes_CDR-1.2-core-003/#documentation","text":"CDR-128: Update Cert creation steps CDR-127: Document Postman Usage","title":"Documentation"},{"location":"release-notes/relnotes_CDR-1.2-core-003/#resolved-defects","text":"CDR-137: Persistent grant not extending on subsequent consent requests CDR-138: Showcase instance settings has incorrect domain CDR-141: 403 Error when accessing https://mockregister.data-holder.com.au/csrFlow","title":"Resolved defects"},{"location":"release-notes/relnotes_CDR-1.3.1-core-001/","text":"Release notes \u00b6 CDR Sandbox for OpenBanking, version CDR-1.3.1-core-001 \u00b6 Release Date: Aug 04, 2020 New Features \u00b6 Added CDR 1.3.1 Compliance Requirements Concurrent Consent CDR-151: produce refresh_token with metadata CDR-152: Enrich introspection call with refresh token JWT metadata CDR-156: Manage historical consent records CDR-157: Verify CDR Arrangement ID is valid CDR-158: Update ADR sample app for CDR Arrangement ID capabilities CDR-159: Sample ADR app needs to display more context for concurrent requests Pushed Authorization Request CDR-153: Push Authorization Request CDR-160: Validate request_uri is not in the request object for a PAR request CDR-161: Enable client authentication for PAR \"cdr_arrangement_id\" Requirements CDR-154: CDR Arrangement Endpoint CDR-162: Change CDR Arrangement Endpoint to POST method CDR-163: rename CDR arrangement endpoint to revocation CDR-175: update refresh token metadata to obtain cdr_arrangement_id from AT Updated all images to latest Ping Products CDR-150: Upgrade PingDirectory docker image to latest CDR-170: Update images for PF, PA, and PD CDR-145: Move DCRM off servlets and onto DCRM interface in 10.1 CDR-147: Software_statement to only return on POST and PUT CDR-148: Enable DELETE for DCRM Kubernetes sample deployment CDR-165: Initial K8 sample commands Compliance Alignment \u00b6 CDR-63: 12.1 Tokens: ID Token CDR-69: 12.3 Tokens: Refresh Token CDR-70: 13.1 Identifier: sub value CDR-71: 13.2 CDR Arrangement ID CDR-77: 17.3 Request Object: Specifying an existing arrangement CDR-177: update test harness to provide id_token reflection CDR-178: update postman scripts Documentation \u00b6 CDR-166: Update Postman Docs to not validate certs Resolved Defects \u00b6 CDR-146: DCR clients created with \"validate against all ATMs\" configuration CDR-149: mock-register isn't persisting software-statement keystore instances. CDR-169: enable id_token encryption CDR-174: enforce id_token encryption algorithms in DCR CDR-176: update data recipient application to decrypt id_token for nonce validation CDR-179: update test harness to accept id token encryption algorithms for dcr","title":"CDR 1.3.1 (core 001)"},{"location":"release-notes/relnotes_CDR-1.3.1-core-001/#release-notes","text":"","title":"Release notes"},{"location":"release-notes/relnotes_CDR-1.3.1-core-001/#cdr-sandbox-for-openbanking-version-cdr-131-core-001","text":"Release Date: Aug 04, 2020","title":"CDR Sandbox for OpenBanking, version CDR-1.3.1-core-001"},{"location":"release-notes/relnotes_CDR-1.3.1-core-001/#new-features","text":"Added CDR 1.3.1 Compliance Requirements Concurrent Consent CDR-151: produce refresh_token with metadata CDR-152: Enrich introspection call with refresh token JWT metadata CDR-156: Manage historical consent records CDR-157: Verify CDR Arrangement ID is valid CDR-158: Update ADR sample app for CDR Arrangement ID capabilities CDR-159: Sample ADR app needs to display more context for concurrent requests Pushed Authorization Request CDR-153: Push Authorization Request CDR-160: Validate request_uri is not in the request object for a PAR request CDR-161: Enable client authentication for PAR \"cdr_arrangement_id\" Requirements CDR-154: CDR Arrangement Endpoint CDR-162: Change CDR Arrangement Endpoint to POST method CDR-163: rename CDR arrangement endpoint to revocation CDR-175: update refresh token metadata to obtain cdr_arrangement_id from AT Updated all images to latest Ping Products CDR-150: Upgrade PingDirectory docker image to latest CDR-170: Update images for PF, PA, and PD CDR-145: Move DCRM off servlets and onto DCRM interface in 10.1 CDR-147: Software_statement to only return on POST and PUT CDR-148: Enable DELETE for DCRM Kubernetes sample deployment CDR-165: Initial K8 sample commands","title":"New Features"},{"location":"release-notes/relnotes_CDR-1.3.1-core-001/#compliance-alignment","text":"CDR-63: 12.1 Tokens: ID Token CDR-69: 12.3 Tokens: Refresh Token CDR-70: 13.1 Identifier: sub value CDR-71: 13.2 CDR Arrangement ID CDR-77: 17.3 Request Object: Specifying an existing arrangement CDR-177: update test harness to provide id_token reflection CDR-178: update postman scripts","title":"Compliance Alignment"},{"location":"release-notes/relnotes_CDR-1.3.1-core-001/#documentation","text":"CDR-166: Update Postman Docs to not validate certs","title":"Documentation"},{"location":"release-notes/relnotes_CDR-1.3.1-core-001/#resolved-defects","text":"CDR-146: DCR clients created with \"validate against all ATMs\" configuration CDR-149: mock-register isn't persisting software-statement keystore instances. CDR-169: enable id_token encryption CDR-174: enforce id_token encryption algorithms in DCR CDR-176: update data recipient application to decrypt id_token for nonce validation CDR-179: update test harness to accept id token encryption algorithms for dcr","title":"Resolved Defects"},{"location":"release-notes/relnotes_CDR-1.4-core-001/","text":"Release Notes \u00b6 CDR Sandbox for OpenBanking, version CDR-1.4-core-001 \u00b6 Release Date: Aug 24, 2020 New Features \u00b6 Added CDR 1.4 Compliance Requirements CDR-198: Update OpenID Connect Metadata Discovery non-normative example CDR-247: Joint accounts demonstration CDR-248: Load bank account data with owner=false CDR-249: Update consent page in accordance to the CX guidelines for Joint Accounts Conformance Testing for FAPI Read/Write OPs - CDR Profile CDR-209: fapi-rw-id2-ensure-request-object-with-long-nonce CDR-210: fapi-rw-id2-ensure-request-object-with-long-state CDR-212: fapi-rw-id2-ensure-mtls-holder-of-key-required CDR-217: fapi-rw-id2-refresh-token CDR-218: fapi-rw-id2-par-attempt-invalid-redirect_uri CDR-219: fapi-rw-id2-par-attempt-reuse-request_uri CDR-220: fapi-rw-id2-par-attempt-to-use-expired-request_uri CDR-221: fapi-rw-id2-par-authorization-request-containing-request_uri CDR-222: fapi-rw-id2-par-attempt-to-use-request_uri-for-different-client CDR-223: fapi-rw-id2-par-pushed-authorization-url-as-audience-in-request-object CDR-224: fapi-rw-id2-ensure-request-object-without-exp-fails CDR-225: fapi-rw-id2-ensure-request-object-without-scope-fails CDR-226: fapi-rw-id2-ensure-expired-request-object-fails CDR-227: fapi-rw-id2-ensure-request-object-with-bad-aud-fails CDR-228: fapi-rw-id2-ensure-authorization-request-without-request-object-fails CDR-229: fapi-rw-id2-ensure-matching-key-in-authorization-request CDR-230: fapi-rw-id2-ensure-request-object-signature-algorithm-is-not-none CDR-231: fapi-rw-id2-ensure-signed-request-object-with-RS256-fails CDR-234: fapi-rw-id2-par-authorization-request-containing-request_uri-form-param New Consent Storage Model CDR-186: enable cdr-arrangement-id bound AT subject CDR-192: update consent adapter to revoke grants based on userId as primary key and arrangementId as secondary key CDR-193: update cdr arrangement id to search client_id as primary key and cdr_arrangement_id as secondary key CDR-238: Enable PF Grant Management Service CDR-240: Sample DR application change how it reads cdr_arrangement_id CDR-254: Create Consent API persistent grant storage Updated Product Images CDR-256: Updated PingFederate, PingAccess and PingDirectory to 20200824 Compliance Alignment CDR-197: Reduce available scopes CDR-199: Update OpenID Connect Metadata description for id_token_encryption_alg_values_supported CDR-200: Update the Authorisation endpoint non-normative example to align to FAPI R/W 5.2.2 CDR-203: userinfo_signing_alg_values_supported Missing in wellknown CDR-213: Allow configuration to alter PingAccess restriction for request parameter size CDR-233: validate client_id and response_type in Request Object CDR-235: PingFederate returning \"400\" errors instead of \"invalid_request\" or \"access_denied\" CDR-236: validate client_assertion has aud=token endpoint CDR-237: request_uri validation error code issue for par CDR-245: OIDC metadata returning \"request_uri_parameter_supported\": false Security \u00b6 CDR-239: able to send fictitious values when selecting accounts CDR-241: authentication flow not validating the same customer logged in when specifying an arrangement_id Documentation \u00b6 CDR-246: Remove requirement to set up Postman preferences Resolved defects \u00b6 CDR-183: Persisted mock register keys have incorrect public certs CDR-185: cdr_arrangement_id not persisted in grant CDR-190: PA certificate not being provisioned CDR-191: grant management site not working after concurrent request CDR-196: Fix the statement for CDR Arrangement ID incorrectly mentions the ID Token CDR-205: Obtain acr values from \"value\" member CDR-206: handle absent sharing duration CDR-207: JWKS needs to include encryption key CDR-208: Cancel button on user id screen not working CDR-232: Calling CDR Register API's should be over MTLS CDR-255: User info stopped returning givenName and sn","title":"CDR 1.4 (core 001)"},{"location":"release-notes/relnotes_CDR-1.4-core-001/#release-notes","text":"","title":"Release Notes"},{"location":"release-notes/relnotes_CDR-1.4-core-001/#cdr-sandbox-for-openbanking-version-cdr-14-core-001","text":"Release Date: Aug 24, 2020","title":"CDR Sandbox for OpenBanking, version CDR-1.4-core-001"},{"location":"release-notes/relnotes_CDR-1.4-core-001/#new-features","text":"Added CDR 1.4 Compliance Requirements CDR-198: Update OpenID Connect Metadata Discovery non-normative example CDR-247: Joint accounts demonstration CDR-248: Load bank account data with owner=false CDR-249: Update consent page in accordance to the CX guidelines for Joint Accounts Conformance Testing for FAPI Read/Write OPs - CDR Profile CDR-209: fapi-rw-id2-ensure-request-object-with-long-nonce CDR-210: fapi-rw-id2-ensure-request-object-with-long-state CDR-212: fapi-rw-id2-ensure-mtls-holder-of-key-required CDR-217: fapi-rw-id2-refresh-token CDR-218: fapi-rw-id2-par-attempt-invalid-redirect_uri CDR-219: fapi-rw-id2-par-attempt-reuse-request_uri CDR-220: fapi-rw-id2-par-attempt-to-use-expired-request_uri CDR-221: fapi-rw-id2-par-authorization-request-containing-request_uri CDR-222: fapi-rw-id2-par-attempt-to-use-request_uri-for-different-client CDR-223: fapi-rw-id2-par-pushed-authorization-url-as-audience-in-request-object CDR-224: fapi-rw-id2-ensure-request-object-without-exp-fails CDR-225: fapi-rw-id2-ensure-request-object-without-scope-fails CDR-226: fapi-rw-id2-ensure-expired-request-object-fails CDR-227: fapi-rw-id2-ensure-request-object-with-bad-aud-fails CDR-228: fapi-rw-id2-ensure-authorization-request-without-request-object-fails CDR-229: fapi-rw-id2-ensure-matching-key-in-authorization-request CDR-230: fapi-rw-id2-ensure-request-object-signature-algorithm-is-not-none CDR-231: fapi-rw-id2-ensure-signed-request-object-with-RS256-fails CDR-234: fapi-rw-id2-par-authorization-request-containing-request_uri-form-param New Consent Storage Model CDR-186: enable cdr-arrangement-id bound AT subject CDR-192: update consent adapter to revoke grants based on userId as primary key and arrangementId as secondary key CDR-193: update cdr arrangement id to search client_id as primary key and cdr_arrangement_id as secondary key CDR-238: Enable PF Grant Management Service CDR-240: Sample DR application change how it reads cdr_arrangement_id CDR-254: Create Consent API persistent grant storage Updated Product Images CDR-256: Updated PingFederate, PingAccess and PingDirectory to 20200824 Compliance Alignment CDR-197: Reduce available scopes CDR-199: Update OpenID Connect Metadata description for id_token_encryption_alg_values_supported CDR-200: Update the Authorisation endpoint non-normative example to align to FAPI R/W 5.2.2 CDR-203: userinfo_signing_alg_values_supported Missing in wellknown CDR-213: Allow configuration to alter PingAccess restriction for request parameter size CDR-233: validate client_id and response_type in Request Object CDR-235: PingFederate returning \"400\" errors instead of \"invalid_request\" or \"access_denied\" CDR-236: validate client_assertion has aud=token endpoint CDR-237: request_uri validation error code issue for par CDR-245: OIDC metadata returning \"request_uri_parameter_supported\": false","title":"New Features"},{"location":"release-notes/relnotes_CDR-1.4-core-001/#security","text":"CDR-239: able to send fictitious values when selecting accounts CDR-241: authentication flow not validating the same customer logged in when specifying an arrangement_id","title":"Security"},{"location":"release-notes/relnotes_CDR-1.4-core-001/#documentation","text":"CDR-246: Remove requirement to set up Postman preferences","title":"Documentation"},{"location":"release-notes/relnotes_CDR-1.4-core-001/#resolved-defects","text":"CDR-183: Persisted mock register keys have incorrect public certs CDR-185: cdr_arrangement_id not persisted in grant CDR-190: PA certificate not being provisioned CDR-191: grant management site not working after concurrent request CDR-196: Fix the statement for CDR Arrangement ID incorrectly mentions the ID Token CDR-205: Obtain acr values from \"value\" member CDR-206: handle absent sharing duration CDR-207: JWKS needs to include encryption key CDR-208: Cancel button on user id screen not working CDR-232: Calling CDR Register API's should be over MTLS CDR-255: User info stopped returning givenName and sn","title":"Resolved defects"},{"location":"release-notes/relnotes_CDR-1.4-core-002/","text":"Release Notes \u00b6 CDR Sandbox for OpenBanking, Version CDR-1.4-core-002 \u00b6 Release Date: Oct 12, 2020 New Features \u00b6 CDR-11: Configuration Injection method updated to API CDR-10: Replaced Grant Management to use PingDirectory Consent APIs directly CDR-189: Achieve FAPI RW Certification for new CDR testing profile (https://www.certification.openid.net/plan-detail.html?plan=KbvzUzkOkII3W&public=true) Compliance Alignment \u00b6 CDR-57: 9.3 Client Authentication: Data Recipients calling Data Holders CDR-58: 10. OIDC Client Types CDR-59: 11.1 Consent: OIDC Scopes CDR-67: 12.2 Tokens: Access Token CDR-251: Track FAPI compliance issue #820 CDR-261: fapi-rw-id2-ensure-valid-pkce-succeeds CDR-276: PKCE for PAR CDR-284: paragentless adapter set to 60 seconds, but PAR servlet indicating it is 30 seconds CDR-285: fapi-rw-id2-ensure-valid-pkce-succeeds CDR-289: PAR to return invalid_request_object for invalid request URI Documentation \u00b6 CDR-263: Update the Getting Started Guide w/ New Key Request Process Resolved defects \u00b6 CDR-173: cdr hooks are not leverage correct admin password CDR-194: not possible to retrieve arrangement_id's for a given user CDR-204: PF Requires \"Sector Identifier URI\" for Clients with Multiple redirectURLs CDR-242: PingDataConsole is not pulling from GCR CDR-259: iss missing in ACCC DCR Request JWT CDR-260: MTLS not enforced without client_id parameter CDR-265: DCR POST not enforcing MTLS CDR-266: Postman Code Exchange Fails CDR-269: Investigate resilient RT CDR-270: PERSISTENT GRANT IDLE TIMEOUT is not disabled CDR-275: Improve Refresh Token Expiry CDR-279: Consent API Access Grant Manager plugin not filtering out revoked consents CDR-282: PF Engines not pulling config over cluster CDR-286: Enforce PKCE CDR-287: Add response header indicating MTLS has been verified CDR-288: User info and CDR Arrangement Endpoints not enforcing MTLS CDR-290: Add idle timeout to consent api pooled connections CDR-291: PF Consent API Grants losing connections to PD Consent APIs","title":"CDR 1.4 (core 002)"},{"location":"release-notes/relnotes_CDR-1.4-core-002/#release-notes","text":"","title":"Release Notes"},{"location":"release-notes/relnotes_CDR-1.4-core-002/#cdr-sandbox-for-openbanking-version-cdr-14-core-002","text":"Release Date: Oct 12, 2020","title":"CDR Sandbox for OpenBanking, Version CDR-1.4-core-002"},{"location":"release-notes/relnotes_CDR-1.4-core-002/#new-features","text":"CDR-11: Configuration Injection method updated to API CDR-10: Replaced Grant Management to use PingDirectory Consent APIs directly CDR-189: Achieve FAPI RW Certification for new CDR testing profile (https://www.certification.openid.net/plan-detail.html?plan=KbvzUzkOkII3W&public=true)","title":"New Features"},{"location":"release-notes/relnotes_CDR-1.4-core-002/#compliance-alignment","text":"CDR-57: 9.3 Client Authentication: Data Recipients calling Data Holders CDR-58: 10. OIDC Client Types CDR-59: 11.1 Consent: OIDC Scopes CDR-67: 12.2 Tokens: Access Token CDR-251: Track FAPI compliance issue #820 CDR-261: fapi-rw-id2-ensure-valid-pkce-succeeds CDR-276: PKCE for PAR CDR-284: paragentless adapter set to 60 seconds, but PAR servlet indicating it is 30 seconds CDR-285: fapi-rw-id2-ensure-valid-pkce-succeeds CDR-289: PAR to return invalid_request_object for invalid request URI","title":"Compliance Alignment"},{"location":"release-notes/relnotes_CDR-1.4-core-002/#documentation","text":"CDR-263: Update the Getting Started Guide w/ New Key Request Process","title":"Documentation"},{"location":"release-notes/relnotes_CDR-1.4-core-002/#resolved-defects","text":"CDR-173: cdr hooks are not leverage correct admin password CDR-194: not possible to retrieve arrangement_id's for a given user CDR-204: PF Requires \"Sector Identifier URI\" for Clients with Multiple redirectURLs CDR-242: PingDataConsole is not pulling from GCR CDR-259: iss missing in ACCC DCR Request JWT CDR-260: MTLS not enforced without client_id parameter CDR-265: DCR POST not enforcing MTLS CDR-266: Postman Code Exchange Fails CDR-269: Investigate resilient RT CDR-270: PERSISTENT GRANT IDLE TIMEOUT is not disabled CDR-275: Improve Refresh Token Expiry CDR-279: Consent API Access Grant Manager plugin not filtering out revoked consents CDR-282: PF Engines not pulling config over cluster CDR-286: Enforce PKCE CDR-287: Add response header indicating MTLS has been verified CDR-288: User info and CDR Arrangement Endpoints not enforcing MTLS CDR-290: Add idle timeout to consent api pooled connections CDR-291: PF Consent API Grants losing connections to PD Consent APIs","title":"Resolved defects"},{"location":"release-notes/relnotes_CDR-1.4-core-003/","text":"Release Notes \u00b6 CDR Sandbox for OpenBanking, Version CDR-1.4-core-003 \u00b6 Release Date: Nov 5, 2020 New Features \u00b6 Sandbox Supports CDR Integration Kit CDR-292: Test PSE supported PA module CDR-298: Create Agentless Adapter sample consent application CDR-300: Update sandbox to use PS provided IK Simplified Configuration Management Between Pipeline Deployments CDR-299: Decommission custom config hooks in favor of new devops hooks Documentation \u00b6 CDR-302: Update Postman Instructions for new Consent UI flow Resolved Defects \u00b6 CDR-301: Sample Data Recipient does not register correct dh_host CDR-293: Class load timing issue for consent grant storage","title":"CDR 1.4 (core 003)"},{"location":"release-notes/relnotes_CDR-1.4-core-003/#release-notes","text":"","title":"Release Notes"},{"location":"release-notes/relnotes_CDR-1.4-core-003/#cdr-sandbox-for-openbanking-version-cdr-14-core-003","text":"Release Date: Nov 5, 2020","title":"CDR Sandbox for OpenBanking, Version CDR-1.4-core-003"},{"location":"release-notes/relnotes_CDR-1.4-core-003/#new-features","text":"Sandbox Supports CDR Integration Kit CDR-292: Test PSE supported PA module CDR-298: Create Agentless Adapter sample consent application CDR-300: Update sandbox to use PS provided IK Simplified Configuration Management Between Pipeline Deployments CDR-299: Decommission custom config hooks in favor of new devops hooks","title":"New Features"},{"location":"release-notes/relnotes_CDR-1.4-core-003/#documentation","text":"CDR-302: Update Postman Instructions for new Consent UI flow","title":"Documentation"},{"location":"release-notes/relnotes_CDR-1.4-core-003/#resolved-defects","text":"CDR-301: Sample Data Recipient does not register correct dh_host CDR-293: Class load timing issue for consent grant storage","title":"Resolved Defects"},{"location":"release-notes/relnotes_CDR-1.5-core-001/","text":"Release Notes \u00b6 CDR Sandbox for OpenBanking, Version CDR-1.5-core-001 \u00b6 Release Date: Nov 12, 2020 New Features \u00b6 Added Support for CDR v1.5 CDR-306 Added scope to response of Introspection call Added Ability to Externalise Consent UI CDR-303 Configuration for Consent Base URL CDR-304 Update k8 to have consent agentless app","title":"CDR 1.5 (core 001))"},{"location":"release-notes/relnotes_CDR-1.5-core-001/#release-notes","text":"","title":"Release Notes"},{"location":"release-notes/relnotes_CDR-1.5-core-001/#cdr-sandbox-for-openbanking-version-cdr-15-core-001","text":"Release Date: Nov 12, 2020","title":"CDR Sandbox for OpenBanking, Version CDR-1.5-core-001"},{"location":"release-notes/relnotes_CDR-1.5-core-001/#new-features","text":"Added Support for CDR v1.5 CDR-306 Added scope to response of Introspection call Added Ability to Externalise Consent UI CDR-303 Configuration for Consent Base URL CDR-304 Update k8 to have consent agentless app","title":"New Features"},{"location":"release-notes/relnotes_CDR-1.6-core-001/","text":"Release Notes \u00b6 CDR Sandbox for OpenBanking, version CDR-1.6-core-001 \u00b6 Release Date: Feb 19, 2021 New Features \u00b6 Added Meta Cache Management \u00b6 CDR-305: Poll Registry for DR Status CDR-321: Metadata Cache Retrieval CDR-322: PingAccess enforce inactive ADR status CDR-323: Create API to receive critical metadata update notification CDR-324: Update Metadata Cache sync process to handle Remove events Added Data Holder Initiated Consent Revocation \u00b6 CDR-36: Notification to DR CDR-313: Revocation - DataHolder to Data Recipient CDR-317: Create CDR Arrangements Endpoint for sample ADR client CDR-329: Create Access Token Manager for DH to DR scenarios Added Fine Grained Policy Enforcement and Decision Point (PEP/PDP) \u00b6 CDR-296: Add Ping Data Gov to the SandBox. Miscellaneous Improvements \u00b6 CDR-168: DataConsole needs image from GCR CDR-262: Monitor STAGING-11243 in Ping Jira CDR-280: Expose PingDirectory API's through PingAccess CDR-283: Configure PingFederate client authentication to PingDirectory for Consent API Grant Mgt CDR-312: Create and configure mock API's CDR-315: update cdr register test harness to v2 CDR-318: Persist data recipient data in mock register v2 CDR-319: Update config for PF 10.2 and PA 6.2 CDR-326: Separate TLS fqdn from MTLS CDR-330: HTTP Pooling eviction configuration for DataSync CDR-331: implement transactions mock api CDR-335: Update docker images CDR-336: GET software_statement member for DCRM request CDR-337: Optimise PA modules - AT retrieval Compliance Alignment \u00b6 CDR-83: 27. ACCC DCR - Request JWT consumption CDR-320: CDR Arrangement ID Validation for PAR for PF 10.2 CDR-316: Test client_assertion aud values for 1.6 compliance CDR-311: Add /register uri mapping to /as/clients.oauth2 CDR-310: CDR Register 1.2.3 changes Security \u00b6 NIL Documentation \u00b6 CDR-341: Updated Administration documentation to include Data Gov login Resolved Defects \u00b6 CDR-308: request_object_signing_alg optional and default to PS256 CDR-309: software_roles should be single value CDR-314: CDR IK fails in 10.2 with PAR CDR-325: Fix PingFederate configuration hardcoded entryUUID values CDR-327: Updating Consent via DR app removes consent CDR-328: Follow up IK request to fix CDR Grant Management HttpPatch CDR-333: DCR not updating all attributes CDR-334: AT Revocation not working CDR-339: S004.T009.002.004 - Initiate PAR is returning 403 and our tests expect 400. CDR-340: S002.T001.003 - Initiate Consent Request - is failing","title":"Current (CDR 1.6)"},{"location":"release-notes/relnotes_CDR-1.6-core-001/#release-notes","text":"","title":"Release Notes"},{"location":"release-notes/relnotes_CDR-1.6-core-001/#cdr-sandbox-for-openbanking-version-cdr-16-core-001","text":"Release Date: Feb 19, 2021","title":"CDR Sandbox for OpenBanking, version CDR-1.6-core-001"},{"location":"release-notes/relnotes_CDR-1.6-core-001/#new-features","text":"","title":"New Features"},{"location":"release-notes/relnotes_CDR-1.6-core-001/#added-meta-cache-management","text":"CDR-305: Poll Registry for DR Status CDR-321: Metadata Cache Retrieval CDR-322: PingAccess enforce inactive ADR status CDR-323: Create API to receive critical metadata update notification CDR-324: Update Metadata Cache sync process to handle Remove events","title":"Added Meta Cache Management"},{"location":"release-notes/relnotes_CDR-1.6-core-001/#added-data-holder-initiated-consent-revocation","text":"CDR-36: Notification to DR CDR-313: Revocation - DataHolder to Data Recipient CDR-317: Create CDR Arrangements Endpoint for sample ADR client CDR-329: Create Access Token Manager for DH to DR scenarios","title":"Added Data Holder Initiated Consent Revocation"},{"location":"release-notes/relnotes_CDR-1.6-core-001/#added-fine-grained-policy-enforcement-and-decision-point-peppdp","text":"CDR-296: Add Ping Data Gov to the SandBox.","title":"Added Fine Grained Policy Enforcement and Decision Point (PEP/PDP)"},{"location":"release-notes/relnotes_CDR-1.6-core-001/#miscellaneous-improvements","text":"CDR-168: DataConsole needs image from GCR CDR-262: Monitor STAGING-11243 in Ping Jira CDR-280: Expose PingDirectory API's through PingAccess CDR-283: Configure PingFederate client authentication to PingDirectory for Consent API Grant Mgt CDR-312: Create and configure mock API's CDR-315: update cdr register test harness to v2 CDR-318: Persist data recipient data in mock register v2 CDR-319: Update config for PF 10.2 and PA 6.2 CDR-326: Separate TLS fqdn from MTLS CDR-330: HTTP Pooling eviction configuration for DataSync CDR-331: implement transactions mock api CDR-335: Update docker images CDR-336: GET software_statement member for DCRM request CDR-337: Optimise PA modules - AT retrieval","title":"Miscellaneous Improvements"},{"location":"release-notes/relnotes_CDR-1.6-core-001/#compliance-alignment","text":"CDR-83: 27. ACCC DCR - Request JWT consumption CDR-320: CDR Arrangement ID Validation for PAR for PF 10.2 CDR-316: Test client_assertion aud values for 1.6 compliance CDR-311: Add /register uri mapping to /as/clients.oauth2 CDR-310: CDR Register 1.2.3 changes","title":"Compliance Alignment"},{"location":"release-notes/relnotes_CDR-1.6-core-001/#security","text":"NIL","title":"Security"},{"location":"release-notes/relnotes_CDR-1.6-core-001/#documentation","text":"CDR-341: Updated Administration documentation to include Data Gov login","title":"Documentation"},{"location":"release-notes/relnotes_CDR-1.6-core-001/#resolved-defects","text":"CDR-308: request_object_signing_alg optional and default to PS256 CDR-309: software_roles should be single value CDR-314: CDR IK fails in 10.2 with PAR CDR-325: Fix PingFederate configuration hardcoded entryUUID values CDR-327: Updating Consent via DR app removes consent CDR-328: Follow up IK request to fix CDR Grant Management HttpPatch CDR-333: DCR not updating all attributes CDR-334: AT Revocation not working CDR-339: S004.T009.002.004 - Initiate PAR is returning 403 and our tests expect 400. CDR-340: S002.T001.003 - Initiate Consent Request - is failing","title":"Resolved Defects"},{"location":"release-notes/relnotes_CDR-1.7-core-001/","text":"Release Notes \u00b6 CDR Sandbox for OpenBanking, version CDR-1.7-core-001 \u00b6 Release Date: March 15, 2021 New Features \u00b6 Added Support for CDR 1.7 \u00b6 CDR-344: Confirmation of handover Added Data Recipient Functionality \u00b6 CDR-346: Data-out and data-in convergence Miscellaneous Improvements \u00b6 CDR-350: Access Token retrieval management for Data In CDRInjectDataHolderTokenRule CDR-351: Default new 10.2 client options Compliance Alignment \u00b6 NIL Security \u00b6 CDR-355: Requested scopes require validation Documentation \u00b6 CDR-356: Update Quickstart with Data-In requirements and run through Resolved Defects \u00b6 CDR-345 incorrect placement of cdr_arrangement_id claim CDR-348 Data In PF Arrangements Endpoint not validating aud correctly CDR-349 Should not store Access Token JWT's for Data In CDR-352 Revocable JWT Bearer Token not compatible with 10.2 SDK","title":"Release Notes"},{"location":"release-notes/relnotes_CDR-1.7-core-001/#release-notes","text":"","title":"Release Notes"},{"location":"release-notes/relnotes_CDR-1.7-core-001/#cdr-sandbox-for-openbanking-version-cdr-17-core-001","text":"Release Date: March 15, 2021","title":"CDR Sandbox for OpenBanking, version CDR-1.7-core-001"},{"location":"release-notes/relnotes_CDR-1.7-core-001/#new-features","text":"","title":"New Features"},{"location":"release-notes/relnotes_CDR-1.7-core-001/#added-support-for-cdr-17","text":"CDR-344: Confirmation of handover","title":"Added Support for CDR 1.7"},{"location":"release-notes/relnotes_CDR-1.7-core-001/#added-data-recipient-functionality","text":"CDR-346: Data-out and data-in convergence","title":"Added Data Recipient Functionality"},{"location":"release-notes/relnotes_CDR-1.7-core-001/#miscellaneous-improvements","text":"CDR-350: Access Token retrieval management for Data In CDRInjectDataHolderTokenRule CDR-351: Default new 10.2 client options","title":"Miscellaneous Improvements"},{"location":"release-notes/relnotes_CDR-1.7-core-001/#compliance-alignment","text":"NIL","title":"Compliance Alignment"},{"location":"release-notes/relnotes_CDR-1.7-core-001/#security","text":"CDR-355: Requested scopes require validation","title":"Security"},{"location":"release-notes/relnotes_CDR-1.7-core-001/#documentation","text":"CDR-356: Update Quickstart with Data-In requirements and run through","title":"Documentation"},{"location":"release-notes/relnotes_CDR-1.7-core-001/#resolved-defects","text":"CDR-345 incorrect placement of cdr_arrangement_id claim CDR-348 Data In PF Arrangements Endpoint not validating aud correctly CDR-349 Should not store Access Token JWT's for Data In CDR-352 Revocable JWT Bearer Token not compatible with 10.2 SDK","title":"Resolved Defects"},{"location":"release-notes/relnotes_CDR-1.7-core-002/","text":"Release Notes \u00b6 CDR Sandbox for OpenBanking, version CDR-1.7-core-002 \u00b6 Release Date: April 22, 2021 New Features \u00b6 CDR-353: Developer scripts to launch the sandbox without Docker Added Support for CDR 1.7 \u00b6 NIL Added Data Recipient Functionality \u00b6 CDR-362: New Data Recipient application for Data In! Miscellaneous Improvements \u00b6 CDR-359: Configured the data-holder to support multiple brands CDR-361: Updated Integration Kit to expose cdr_arrangement_id when introspecting AT's internally Compliance Alignment \u00b6 NIL Security \u00b6 CDR-357: Docker images now run as non-root user \"ping\" CDR-360: Fixed issue where DCR audience validation was not performed for POST and PUT Documentation \u00b6 NIL Resolved Defects \u00b6 CDR-365: AdminAPI was not clearing","title":"Release Notes"},{"location":"release-notes/relnotes_CDR-1.7-core-002/#release-notes","text":"","title":"Release Notes"},{"location":"release-notes/relnotes_CDR-1.7-core-002/#cdr-sandbox-for-openbanking-version-cdr-17-core-002","text":"Release Date: April 22, 2021","title":"CDR Sandbox for OpenBanking, version CDR-1.7-core-002"},{"location":"release-notes/relnotes_CDR-1.7-core-002/#new-features","text":"CDR-353: Developer scripts to launch the sandbox without Docker","title":"New Features"},{"location":"release-notes/relnotes_CDR-1.7-core-002/#added-support-for-cdr-17","text":"NIL","title":"Added Support for CDR 1.7"},{"location":"release-notes/relnotes_CDR-1.7-core-002/#added-data-recipient-functionality","text":"CDR-362: New Data Recipient application for Data In!","title":"Added Data Recipient Functionality"},{"location":"release-notes/relnotes_CDR-1.7-core-002/#miscellaneous-improvements","text":"CDR-359: Configured the data-holder to support multiple brands CDR-361: Updated Integration Kit to expose cdr_arrangement_id when introspecting AT's internally","title":"Miscellaneous Improvements"},{"location":"release-notes/relnotes_CDR-1.7-core-002/#compliance-alignment","text":"NIL","title":"Compliance Alignment"},{"location":"release-notes/relnotes_CDR-1.7-core-002/#security","text":"CDR-357: Docker images now run as non-root user \"ping\" CDR-360: Fixed issue where DCR audience validation was not performed for POST and PUT","title":"Security"},{"location":"release-notes/relnotes_CDR-1.7-core-002/#documentation","text":"NIL","title":"Documentation"},{"location":"release-notes/relnotes_CDR-1.7-core-002/#resolved-defects","text":"CDR-365: AdminAPI was not clearing","title":"Resolved Defects"},{"location":"release-notes/relnotes_CDR-1.9-core-001/","text":"Release Notes \u00b6 <<<<<<< HEAD CDR Sandbox for OpenBanking, version CDR-1.9-core-001 \u00b6 Release Date: June 04, 2021 New Features \u00b6 cdr-359: Multi branding configuration for DataSync, PingAccess, and PingFederate configuration. The sandbox now has 2 ADHs/Banks configured in a single deployment. cdr-361: Expose cdr_arrangement_id when introspecting AT's. This can be useful for internal introspection of AT's. cdr-369: Add http header injected client authentication into MTLS and HoK policies. This allows load balances to terminate SSL whereas before it had to be terminated at PingAccess. cdr-371: Mock Register to add certificate extended key usage for client authentication and server authentication cdr-372: Enabling Access Token Encryption Added Support for CDR 1.7 \u00b6 NIL Added Data Recipient Functionality \u00b6 cdr-363: Add second data holder to data-in-application Miscellaneous Improvements \u00b6 cdr-364: Improvements to data structure to meet best practices and also align to P1AS deployments. Compliance Alignment \u00b6 NIL Security \u00b6 cdr-360: DCR PUT and POST not validating request JWT audience against incoming hostname Documentation \u00b6 NIL Resolved Defects \u00b6 cdr-365: CDR AdminAPI not patching Software Product metadata object","title":"Release Notes"},{"location":"release-notes/relnotes_CDR-1.9-core-001/#release-notes","text":"<<<<<<< HEAD","title":"Release Notes"},{"location":"release-notes/relnotes_CDR-1.9-core-001/#cdr-sandbox-for-openbanking-version-cdr-19-core-001","text":"Release Date: June 04, 2021","title":"CDR Sandbox for OpenBanking, version CDR-1.9-core-001"},{"location":"release-notes/relnotes_CDR-1.9-core-001/#new-features","text":"cdr-359: Multi branding configuration for DataSync, PingAccess, and PingFederate configuration. The sandbox now has 2 ADHs/Banks configured in a single deployment. cdr-361: Expose cdr_arrangement_id when introspecting AT's. This can be useful for internal introspection of AT's. cdr-369: Add http header injected client authentication into MTLS and HoK policies. This allows load balances to terminate SSL whereas before it had to be terminated at PingAccess. cdr-371: Mock Register to add certificate extended key usage for client authentication and server authentication cdr-372: Enabling Access Token Encryption","title":"New Features"},{"location":"release-notes/relnotes_CDR-1.9-core-001/#added-support-for-cdr-17","text":"NIL","title":"Added Support for CDR 1.7"},{"location":"release-notes/relnotes_CDR-1.9-core-001/#added-data-recipient-functionality","text":"cdr-363: Add second data holder to data-in-application","title":"Added Data Recipient Functionality"},{"location":"release-notes/relnotes_CDR-1.9-core-001/#miscellaneous-improvements","text":"cdr-364: Improvements to data structure to meet best practices and also align to P1AS deployments.","title":"Miscellaneous Improvements"},{"location":"release-notes/relnotes_CDR-1.9-core-001/#compliance-alignment","text":"NIL","title":"Compliance Alignment"},{"location":"release-notes/relnotes_CDR-1.9-core-001/#security","text":"cdr-360: DCR PUT and POST not validating request JWT audience against incoming hostname","title":"Security"},{"location":"release-notes/relnotes_CDR-1.9-core-001/#documentation","text":"NIL","title":"Documentation"},{"location":"release-notes/relnotes_CDR-1.9-core-001/#resolved-defects","text":"cdr-365: CDR AdminAPI not patching Software Product metadata object","title":"Resolved Defects"}]}