{"version":"6.1.0.3","data":{"acmeDefaultServer":{"id":"8572f98e-482e-41c2-8a3d-6a0b2fc99734","location":"https://localhost:9000/pa-admin-api/v3/acme/servers/8572f98e-482e-41c2-8a3d-6a0b2fc99734"},"acmeServers":[{"id":"08eb4cbc-20ed-409b-82c6-12fd0c92eb71","name":"Let's Encrypt","url":"https://acme-v02.api.letsencrypt.org/directory","acmeAccounts":[]},{"id":"8572f98e-482e-41c2-8a3d-6a0b2fc99734","name":"Let's Encrypt Staging Environment","url":"https://acme-staging-v02.api.letsencrypt.org/directory","acmeAccounts":[]}],"adminAuthBasic":{"enabled":true},"adminAuthWebSession":{"sessionPollIntervalInSeconds":10,"expirationWarningInMinutes":1,"audience":"PingAccessUI","cookieDomain":null,"cookieType":"Encrypted","idleTimeoutInMinutes":30,"sessionTimeoutInMinutes":240},"adminConfig":{"hostPort":"pingaccess-admin:9090","httpProxyId":0,"httpsProxyId":0},"applications":[{"id":1,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599527293807,"lastModified":1599526393807,"requireHTTPS":true,"name":"PingFederate-Application","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"Web","defaultAuthType":"Web","spaSupportEnabled":false,"destination":"Site","contextRoot":"/","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":1,"agentId":0,"virtualHostIds":[5,7,11,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":0,"policy":{"Web":[],"API":[]}},{"id":5,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599527293628,"lastModified":1599526393628,"requireHTTPS":false,"name":"Deepthought Product Admin Service","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"API","spaSupportEnabled":true,"destination":"Site","contextRoot":"/dio-au","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":4,"agentId":0,"virtualHostIds":[10,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":1,"policy":{"Web":[],"API":[{"type":"Rule","id":4}]}},{"id":6,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599527293712,"lastModified":1599526393712,"requireHTTPS":true,"name":"Deepthought Product API","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"API","spaSupportEnabled":true,"destination":"Site","contextRoot":"/cds-au/v1/banking/products","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":5,"agentId":0,"virtualHostIds":[10,11,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":1,"policy":{"Web":[],"API":[{"type":"Rule","id":3},{"type":"Rule","id":2}]}},{"id":7,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599527293736,"lastModified":1599526393736,"requireHTTPS":true,"name":"Deepthought Bank API","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"API","spaSupportEnabled":true,"destination":"Site","contextRoot":"/cds-au/v1/banking","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":6,"agentId":0,"virtualHostIds":[10,11,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":1,"policy":{"Web":[],"API":[{"type":"Rule","id":3},{"type":"Rule","id":2}]}},{"id":8,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599527293704,"lastModified":1599526393704,"requireHTTPS":true,"name":"CDR Register","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"Web","defaultAuthType":"Web","spaSupportEnabled":false,"destination":"Site","contextRoot":"/","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":7,"agentId":0,"virtualHostIds":[13],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":0,"policy":{"Web":[],"API":[]}},{"id":9,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599527293781,"lastModified":1599526393781,"requireHTTPS":true,"name":"PingDirectory-Web","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"Web","spaSupportEnabled":false,"destination":"Site","contextRoot":"/","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":8,"agentId":0,"virtualHostIds":[14],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":0,"policy":{"Web":[],"API":[]}}],"authTokenMgmt":{"keyRollEnabled":true,"keyRollPeriodInHours":24,"issuer":"PingAccessAuthToken","signingAlgorithm":"P-256"},"availabilityProfiles":[{"className":"com.pingidentity.pa.ha.availability.ondemand.OnDemandAvailabilityPlugin","id":1,"name":"Default Availability Profile","configuration":{"connectTimeout":10000,"pooledConnectionTimeout":-1,"readTimeout":-1,"maxRetries":2,"retryDelay":250,"failedRetryTimeout":60,"failureHttpStatusCodes":[]}}],"engineListeners":[{"id":2,"name":"Default Engine Listener","port":3000,"secure":true,"trustedCertificateGroupId":0},{"id":3,"name":"HTTP Engine Listener","port":7080,"secure":false,"trustedCertificateGroupId":0}],"globalUnprotectedResources":[{"id":"3a2b5451-00ec-40e3-9556-183452460586","name":"StandardATM JWKS endpoint","wildcardPath":"/ext/oauth/standardATM/jwks","auditLevel":"ON","enabled":true,"description":"JWKS endpoint"}],"httpHostSource":{"headerNameList":["X-Forwarded-Host","Host"],"listValueLocation":"LAST"},"httpIpSource":{"headerNameList":["X-Forwarded-For"],"listValueLocation":"LAST","fallbackToLastHopIp":true},"httpMonitoring":{"auditLevel":"OFF"},"httpProtocolSource":{"headerName":"X-Forwarded-Proto"},"httpsListeners":[{"id":1,"name":"ADMIN","keyPairId":10,"useServerCipherSuiteOrder":true,"restartRequired":false},{"id":2,"name":"ENGINE","keyPairId":10,"useServerCipherSuiteOrder":true,"restartRequired":false},{"id":3,"name":"AGENT","keyPairId":7,"useServerCipherSuiteOrder":true,"restartRequired":true}],"identityMappings":[{"className":"com.pingidentity.pa.identitymappings.HeaderIdentityMapping","id":1,"name":"Default Identity Mapping","configuration":{"attributeHeaderMappings":[{"subject":true,"attributeName":"sub","headerName":"X-SUB"}],"headerClientCertificateMappings":[]}}],"keyPairs":[{"id":5,"alias":"Generated: ADMIN","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uUkVIanVsTlQ5WnYyRXJfdWNNSFRYdy51YXVnd1c1MWJ5dnJraVZZOGs3NEZIZU15NzhpODdZVUUxSWFFSmNYd2xPN2RIUEdIS2VzcWlEVHJvQ3lDdjRUUmI0djdZT1otNDVERWUzaWdpSGJ1NUNFbUZNQkUtdmprLTZRNHdFcHczaVE4eVdDeE9rSF93WkJwZ3N4N3Q2bGFGUGp2V1lXQXdncElZN01BcXRYRWpWc2k5X1FMOU4ySG1NQ1pCczM2ZmNGTzQtUkI2RWpJVjc3TkM3eUFpNElPNm42Z3doZzBaSEd5a0pvNzNEWjZUUGwwUEVoUHN6a0VFVWlTcjRwWnFNckNBMkxRcDBXNWZJeTZNRHRSQ3VkUEpfSlpZNVowWGQ3Z1BRSmR5Y1hYZUQ1UXF2R0pJcndLcl9iczdTZ2dHWHByOW90OHVDUmQyQlVfT2FRdWdOaHQtUG85aV9qTFZtOEdQRXhvakU1YTc4ZnVtZFdNT3lRWHBYb3BSclE1SS1BNGVFd2hqR1F1Y2Y5OUVpX1RxamF0V241YUxVWl9uTnRYME4zdlRoU0FaWm04ekhXV2o1clFsazZUMUtTTDF0OG9RalktV1JIbW5LSGRsM2xSNVNLby04U19CZlJIV2pHaXR0b0xGNWd4RkV1TUxfaFpfdDl6OHhmbEFEajg5c2hNaGJxVVlTMlpXSkNCV0g1enBaeHhhRTBldjl3X1JrQ2tfaGxiMXRwbm45VFRVdnRwNGdwUGFUbTlqQ3hzQ1ZDV1E0Uk9NUTdlQllZakk5M3I1R3lkaUNSQnBaSmYwZFJDcnE3RFU4ZDQtVXhLWUY0T19Fb08wNU9wUkFVMjA0VU5LVDlDbm01czFtNmlZaVhNdEQwVEJ6dE1SM3NQcFE1Z21IZzd3bWJwM3N2RTFjRFFHLUV5VGROUXlBSDFRb2NqdWhiajhnb28tOTR1WnhBSUVzdlFTNlRfcTA0MHFEX18xUHB6dWo4bUhmTV81N1NuQzVjWV93NUJPSEs1LXNtMlczYUlRMGRwMzBINmhFbEt3OHNlak5ncVN4a0liR1FEWDkxQ3dNTjNmaGtPX01xWE93REh1RXpqQTNEZHFCTEZPVi1rQXpVUXByZkE1WVMzc01DcDE3TkR6ZmY1d3FQS21QWmNfWE50bzFZUUo4YUk3TDlPZ19aaVVueUVNNDJvQWVxa3VVVmhHWXNtajloTm1wWnVIcHVMSXctTmZ3WnoxMWNURXBpYUd2MG9nTTZZR1hCTDdJdFVvLU1rRUQ4ZWJPRGJfX0czR0ZtVTB6N2RRT0VEaFIwWWdfVUVvaDRoVjVuMXFvYjRIWDV3OHpOeUJfZ01SZ3RNUlhOS1o0bFFidXdGYlhWWUx5UDlqZTFLMEJkWlFtWmhxRVd1LXREcUVYd2hoRERWN01uX052SkFxNUl6dGRnZGpSZ3ItU1hlUlFmNTF2SmRlTzdYOFBfUGxoel9HY3FtQWhmeWl5VUY0TEVhNmN3czN2ZFA0WklFUkY0UWJWSGw2dm54UEVoQUFLTHR1MmktdEU0WGJ4R1plNnJnUEtpZENaNXJqZGxYOUlsUXQ5cUZ2VXIyS0stT295U0paZE5QeElmcG5TT3FvUmY4MkRHdW5ncWtFRjNOWDhOU192T0c3NlpSNlAwb3ctVENLNTAxTTd0Nmprb0hIaHgwdEhFZzlkNjJXenlzWURKY3VUTTc2bXRqV19Lcnl5a0o1cDlIdFZoQXRvMG5CQXFNU1NYeEg4Zk1TclNsZGp3OW4zdVROUHFLc1Y5U3Z2VmVqMGhDcElqeGZOQ2JsdnBaMG9VQjlEY2taOVJodGtELU1PSUdnUGdyNDJiSkhxV0cxY0piTE1mREJ3cjQ2N1BLWG5SLXhCSld1aWtTWHBhQlhXVnFQeE4yalBxR3JaSnJtV0x4WlQ0VTdVRXhmdmF4WFVwM0F5WkdEc1FNd3hOUVFpUlZ3WkRGbWQyblFBYklmNkNweGtnbnR0R2JZcE4yR1F3aXhLNzU3YTBkUHJCVVpPeGp0dkY5VnNIWE52eGlrZTNWUTNvelU0U1VCVkp4elVwcW55YVVpeHlQVWVVd05LTERoZnVfQ2R3d2pXTXhjcDVRZlh4clJ2SmdHQjRmaE9oYW9rQk1WbFZCWklxTHh4VlNtR1NlV3Rsdm4xdUJmUC1JR2szcVV4cVU5VGVqOUptVEhrS2lRMHZGZUp2bkF3VnlaYmpqNW5Yc3hHaVZQMHh2WWlvazl0UFVjUlVUZm9EUzIwUzQyTjA1YW5CNVBOblduY2o4ZzJsT08tNzlWM0RjXzA2Q1JtR2p6dlVCY2VpeHVaTGF2dlMwdm00bnBZbWx6YnI5MWRwTVBCWWZkTEF5YWxaVFZSM3lZTGZBSUVDcW02aUFLR2xWczdQQVV1eEtBTjFkM21mLW1DdXkzYlg0b1U0T3JrY3RCVkF6Wmh6WDVhaXg0MzR5S1o4cFU5ckhXQWtOWnROd09kVGR1WWlWTERvdkgzMXh0cF9JTl8xTU91aTZ0RTA0OFo4Zk9sb1JvbEI3a1gwNER3cDlITGZ2ZUk1Yk12Zk9xNlBwMUowb2hIQklHaUJyYl9lZGYwX3UzUF80Y1ZSTFg2cjU1UDJWRlExLTBRcktQQkU4NkZhZGx3akVxQ2F4d0pteENRcXdObkszZjZDTEVueWVkYmhMQWxCaU0ydjFxNFI2TzlGSnFzZWcxYWc4S3oyanhoWE5US3l6djdYeVJGU01WekdfeU5UTGRmamRMb0g4dTR6dk8xU2wzdlZSYkxZaE5BUF9tNkJkX2pQc1lTOV95VF8zWnBIbE1Sa3FoQTI2ZUhGeHJsNmpYRk1sTUhNaGlSS2hna2Ziblk3WHRNRE5pNm5DM1p6QU9kR0o1YWtlVkcyS1ltY3VRdXRvS3RGZmp4VzdocXpuVjlROGZWSGNuRG9tYTQ5RmNLQlpMWDBoVkEyY1RkU1Q5TVgzTVNRelBaaFZnVFhoYjVJRjF5SFFxX015YXFvNHpMNXRwUHBaeVl2b2JsRW0tdVRZdzZKcnN4RV9hSlJBOGlqTk1ZLTJsejFibHJxS2xmVk1jbkViOGZfQ2N1LXZ3RmNuc0E2Z0FlTEFLYk10SkluQ0UzXzBRSVh2ejUtLVZPY1p3dUdPbkY3a0NobnNxckxmdGNKWmNCeHJRR2JNNkwxN3dmOXN4Zl9wVzJmX3p1bXJia1h5N19CTDBRTW9FUnRmcktxSlhOUEJxTnBSX3YwdHY5WndFRU9EZkdxNkdWSHFEWmpUXzNYY2k4aEpqVFgxNDlXcXNQNnY1RHZTT3ROdkxLYjhWaUlTVnVKdUYxT1dycVJmX21rdWFTS09pOVNoMS1fSlVSZC1Bc3ZXYkVraGtYOTdYd01XY2JHZTY5V0ZhamVSek9mOVpMS0M3VTNkVUZ4a1RFcWR2bWljRTBFellocHhUOEhTYUN6OVR3NlJhMVBhOEtLNW5YaFhsTVI3cFZ3MC1xRGZmbDNHS1NBOElleU1aYnVkVU5zVHAzLXVick9rMFVITjRaZHBkRlpJN2tkeFJ0STAzTy1QaGNHWEJhN1NEVkZzYmRhTUs2SmN2UW14SEU0UGlhaWYzWW5OSUZKWXVOY0UxR1Y5S3d4UjlGMWFIdG9EcFcycnM5dkdMdG80TnViZVNpZXU0LW9VcFpCTGFvMzVqN0NWcWdCOTlQV3dxQmFBaEpUdkFMYVllYklZQ2ozM0pXeVRVMG9qdjNOTkxMaXBwbGVMWlNiaklCdFBJNGhNbF9qM3F3ajF1QzhOTFpXTUN6a25kRG91YTllSzN5UWhqWEFwdVpCTW1QM0Zpbi1nTzFGU3p6N0tVejN1WW4xdmZBdmdjb1ktM25RTVZrRnczYlBKRDUxMFpJa3ZYdXZfdzh5LWFZbmpOSWplTG1nZG16SjZ0Ujk1SVJrY2g1RGlWcTB1eXQ0a3lrNERrLXduUnhFX0VGTFRFVHNGNWdNeU4wa3VNeXctMGpiZzhleXdDcy1fTEgwR2JBcDVNcWJHU2c4WnhtUVk1V1o4NG4xVG0zVER3UHdKMFdpR2JfSEswaHFPTU5oN2x0YVNzdzlUb1pOX2Q4Vld5T2R6Q3c5OGl6dl9wVGpwMGhFamVsT0lsb1VOT3JfYXVoVlQzTzQ0cUptZk85QkZsbk1tSkUzNG90QjVXck5YMS1lT0FoNjJNX2V4cDl0WmJjSXNUS2JlMWZmbzdwQjR3UlpTN2I3bmk2NTk1cFZBZk1xQjl4ZTM4UlNVTFNuanR4ZVFLUFF2WERsOFpnV2dPaHZZV21QYXJKZGhvN0QwWHQydnA5ZnpZeEd3NTR3ZGhNMFNTRmRleGhMdUowaE5VLVdfTVhBVkNDOWFOSjlxMnFYTkxiUy1KSVlDamViT3pzU25ESHAtbmRyd2VyalFPY21uTDJUM05PVUhKaXo2VFpWcVVhUnlSdXJ4ZVpCN1B0WmhmeVJPZFA3MUMwMTc2X25ZOW40WnJQd1RtNXhOdEdEMG9hVC1rSVNqYkg4ZjR3NzQxZDlzU0g1OUhKUV9ib1FVQ0xiUnZONlNuc1ZRWDJ1ZkFEZEtRYmFTWDBVTGp4cW0teFVOaGE2LVNYNFd3ZFhqQkFLTmxmaDJ5RFZoS3lHTGlka0ZzbG1aNE5uTnN0U3hPUEJHbmdfdHMwQUFBbWNVZUdLODNoN2FiYTFBV09nVUdBb2plVUxteVNFVlZ3Q2VKOGlSUHN3Q2Y0cmhNa1R2TkNJSlZDQlg4bzg2NW9CNEFfNjlNRWRpNS1mSGgzczR3ckpLbUgxbngwd0ZGRWRRakdnSFEuNWV1UF9jaFFhbG51UlNwYXNWZU5Wdw==","password":null,"hsmProviderId":0},{"id":7,"alias":"Generated: AGENT","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uOG95bFFhbzJNYzlfTEstbWFtRXFSdy5sZV9CV29lelI2Wi1oRzF0N1Y2Y2hVazkxS1ladldwc05yX0xiV3g1cWZIYUQzN21uUlZ6X1BXMFNBSXZxdU0xY1Z2RFYzYjd6eXJKczZsdW4yd1VvLTJaNEZfdmZBQ1U5QVBRLUppZHlhMC1XT1pWb0hOb3dXUGFDOEJTLXI5NWMxWlZaRk8yYVNiSmFUcXB3dGU3LVlTdVI1S1BkX0hENWI4WGJHdUJJUUhzYW82ZEM0YmlibGVkcV9XaWhDaVRzTzF0LXV0TjVYVnE1d2hOSWo0ODZaa080RV9RMXdlWXZ0Q2hWc3N6bVNaVkFweVFoR2lKS3J3eVRjcmpwaVhOcm9wSnhSbl9OcC1HY2dQNHZrbXBfc1JyNUk4d0x4bS05RFVFcVU2OGRyc2hXX0VlX05jRVR2cjhJcDdPSTlCcDB2N1QzT1dxLVJtWjFXS0sxVU94ZkZIaFF4YTZudG5pM0lvMnBVcndUMlBnX0UwQ09MWU1LVDl4V2hiVzZETnk2WS00dGZ6TDBwejZOT1JiOWJEdEw4TG1ldmV0Qm15a2lqb0NQc0RsdjE0TTJhbmdJcHFCdlo1akcteWNXV0ZVblhrUFQybmc5ZVp3VDJod2RuUU9uRXN5VmFDbW1hd212SmdyQ19icXZVb2RBR3BUSnJsM3FEVy1fMHRJNmlvdjU3TXhhTHo2X3JwRHdJV21Jekd3OW4zWXVmR0Z5VzdMNW5rQ1F1UG5HRVdGQnROZ1dCZ0VVekFHSnZXSkFuX2p6eFJvSndTdlcwMkItMDlVaG16UlFVcmY2dERiUEJWZFR4RmdiUjlDb1d3TkFEV2NxcXVJdjkxS2wzNXp5VXA5eE5CN1Z1QW9VcWlheVJwanZOemNVSDJnM3FOX2N1ODUwTXlRTWxOdGJCbUNvMEV6X0doaWI5XzB6M05PQkNPSDZBLW1WQTN3S3ZBTXY3MVUwcVJMaW4zdXVJWHJ5RzJYVGVpcFI3MHVrdFVaYU5sczRpQXYtNVU3MTh3a2o1d0lBOEszY2hJX0paUkl0WHY2WUEtLThwTlJrdUpzLW1FQTdwcC1OLXRqcWR4MWdXYUZIam05Vk0zaVNXWWFmeHpWTm5BZmktbXBkRkZEeFZmZ0xJc25wSnJyb1k3NXRQQjdBTjRlcFZHem1ZSUR1ZDRidjAtcXdyV08ydmtsX2Jfd2dMeV90OU9mYVJ1N2k3dUxHZWp2ZXBmZlBHT0k3WmI0YTNmTWZSZlRaWXM2amUyV3V0Z2FjWEVaZE01cllaMXBmMjd2TnZTUjNfOWNGcFRHV01QZUpqQzFZU1k3REZXaWhCa3BaWWRVeE4wVnlzdE85cGE2cDBpVElhQWx1OHoxYm1qQWlUa0dyc29ONVctekV1VXAwSnhUX1UwNy1VVV95SEdrRTA3RmloVHVEMnowVE1OdVpEaERhelFyaFpEUDdPX1M3WDhHcVN0cEhPX185elRvVUs0VnlkTzdIaU1OYnJ0ZEloRDZOOHFZVE0zTllrcDVnVjR0c1AwQ0RPckhSVm5GbHV3bC1jWGRfMnZuSUZkSk95Mm5sNGlaa2E4eWY2UlpqTmFJLXRHWXhCZjg4eVlYejB6dk4taGZsZ1prWFlfMm9jWkhxclFwRXBDdUxxLTZ5SGo1X3NEV3NOMVhqbU81UFRXUmxFNnI3VXhMUzBvRmdJcm5DOE51MjFkNXUyVVF5aXczQnEydV9VT2R4dmFJZkN5cE9kRFZvRTZWa1lQakVyUXVCUll6dk5OWFNGbXNYTXlfbDNSMzE4dDlSTnVVNlpuREpMQmJmSkhyN29Eb2QtT2pXUHYzMjlSazhfUmYtblhWWEtmUlBrU2lYQzRVY2xIVFhjQ1lhWjFNVlg3SExfNEZtVU8wejMyNU41NW5LdnBJYjZ0RkpRS3pBei11ei1Dclk3cnV3NU9iTVI5UmJxQWFPR3VUT056ZklnTXFZUlBreDVBV2ZiSHBid3luYkhmWS01Rm1nWUluVHVManhZX0tZeXNQQVN4cU9sX0FIT3NtZXFxVko3bkdOeFBRNTJqMU1RQkh5NjROTERtbTZaVjBaNmFkc1BZUUhDSEoxYURBQlVFOHNCYWdKWWRDZGdPc3JXQ21hLVNTVzc1Tm5rTHNHVzZ6R3RqbjR4ajZMU09FcDVjTHBfeWMtcmpjd3V1ZUs5d1BYUmotc29IMzJHMnpqYkR2MDM4S2pMb3c1eFB5RVdmQURhTDhYSEhmUThENDNrZEFWdVZiVVJPRVB2bWVrZFh2dHdlc093d0ZRU29uZ0hNMzJXblJNc29HMWRTb3pHZFBHaS1oY3FHMENTVjBRM01VWjljMklZU3Z2OEdHbkNveU85Y0tDUXk5NXV1TU9JWWliWE1QUjd5aTJoaWdTUVJIX3gxaDFpTV8wbWlmNDQtUGJ6NnQwNUJrM2ZOQnh3NUd2N18tWk4tVjl6YTdhU0Z3MkRGR0MtaXFhWUFPR0dXdnZYR2dBcEdtVldWM040aVBtY2NONDJVN1RiOEY3dUZfWWFTM1ZrYXVPQ2s1NVB6bGZ3cFJ5eGh4bzdVWER4QkczUEFGTWZTNXd4UkhlbDJpOG9qakNKVTZNWVpIeFRrUHBycTZpa2xsU3pGNENmSS0wSER2eW4wUFc5TmQtZXE3MHVGYjN2T0htVnpzNGRDNDFlNk96dEtEZWUxTGY5ZWVmTExPNWdiNGlnWGdsMjhZTVg5d216akZ1dElqX0RNRDRGVHNFTEhjM2xmVC0wd1F2NndBX2gyVjZrUUlnUzJpYmJ0UkQ4QVdCY0NzOFdBYU9ORjlyb2FPSjZXaW9jZUZvTlRzeG1mSXlvZHJfTVRrbHQzeWpLcGRYWGZVZFhxRjBDMUlhT1ZtS0dLLTZ2b1ZDMDgtT0JmNTcyZ1Z2NXdRdjZITUYxcWRUcElrTUJoajBOQk5KMy11c3FpdGhoeWZRbmtfUlUxdGhaY3dZRVoySVd2VkZzSlhZcjdqOUd4cjJZNVpYQUs0azRabWF6Zmd2NXhWdG1XNFRDb2RBWjhUQTZTSXdSOUwzOENocmxJLVV6bVptR0Ftenk4Z1ZNTVFlRjdOVFlXQWJ3em11Umo3cjhvdWxzRUFOUGlrOWZYeW1NaWFmTjJmTXQ3MmRNZkU2dmV6aU9vZTVEbkpCdHE3Z1UydWhJdXZzYW9RUzVtYWhUM1hKV3BiTkNVT0VWRGxMZFdSRUhNeGhpR3VTRFYtNHFacHRQWEN1bkcxb0VUQ19FQjl5eFRuMXYtUmNWTm9sRzJ3b1AwMmN5MlpXLTZ1QlBVZl9IYjRRSUxFMjZOTjFad1NiNnBUWHFxTmRXenY4QnN4Z2JCSlNweFhMZTg2YnJxOVFLd3dqc1psazdyNElCX2U2eVhGYkhiaVVrT1VPc1MxSUhrMWlZMGpnSnpLeVVsVWZRa2VBWlcxSzJmYXIyZkxlOVlaY01mb19rbzRSMC1RZmNVQ0c0MGJHYVEzTWNZWWJnRWFHV1g5ZFJuUmtPRXM2SlpaMVlhQXRpUVBpMFpYVFpFZEIzSUZTelJRVFcxNU5fcWhqZWNXckJIdVFoZ2ZzYXNiQ3d6WFhmWTRGUkVaeXh3NXBpSFBwTEZRQlJwZ19SSFJ1YlhJTW9zNDhoejFiRWJIRzhSV0lfWDJsc3hIZGdLQWpZXzM3ZjRZRjhmVXA3Q1I4cVRuam1CZXZmRF9wdGRqblhHc0x5dFM2TXB4U1o2c0NpUnd5WHhtLXdqelNYY0dWTmtkbEp2ci1XcTVFLUw1anVIdGM3QlBPNlkwVF9RU0xVVzhkRU9kb3Q4eWNobVc2SlFQNkFxS2ZEbjl2ZXNid3hXb0twYmktUjlDUjlWWGtjdWtfekhIMG5oQkZYaVBSbHp0WUtDX09LVFRpSXJkWVcyLUp5SVRMUUZIQW8tZklPcnFvOWlhNDlFY1pKaFJwRnd0NUFBSmZJNGZCWUZyTFctVTRIdmc5S0ltZEVZV0VkMzVOU253Zk9IRmxBbHZiMTEtbG43TDJfMGFuZnBXOHNDTzl5UXhpM25KYTVhMDRyZGROWlNlb1l3R09sbWpYVFRpWGYwVm9tRHlQdkYxUDctNWtNdFVnNjJGaWtyd3daU2lwS2NxZDljUHppMVM2YVZsZkdlejU0NDUyMVNOcWdxSVJfM2NubW9TQ3dCa19CUkFMLV9ESHBTeDlVZi1nS2pwb3oyYUhKNU1JR0JtZHlsajBqaGlzTnVwSzZDR1pmcHFGeTRKb1FFaktzTHR5YWNWVXI0bzNoemZyUVlPQmxYaFl3Q3Y3QndjUXpyaHBJTHBEX3pQbVRqS2Z4M2ZlV05EX1NDcDNZSXJUMHFHMkEwbkNQcUYxbmJxVm5ORzg1RDJ4TzZ1bGVuVzFBbndRQnBtMy1aeVVPUk56YUlZd3BMUG1xVTZwYk1kY1I4eEp4aFgwQkFWbnREdUhqZHl0dkxtdEVnZXpzb3c1cXpyRC0zeWRKZ2UyUTBpdVFoLWtSdjhibkc5LUttd20yeTkxSUV2enZRQlZkOXdaMXlJVEVQMkhaUk5wYXpQZ3VPUkw5bTRBR3hTUDFaZEhNUk9pSUhsNWt0Q1h1N2hNbVdLeTlmVzE5OWlSS1A1MFF4SlBTaXJNdWFmaFQyeThWZ1hUWnR3elN2bW9wV01DNE9kbGxpWi1OaEhNN01BZm5Vd3hVQVRGMUZyM0dEUTNMLXlLeklZWHlwZHFqT0RZVDNqRkNocllMYzdhOEQ1REFQMlByUklEZXg5dmdYLTNUS1B6S1ViakRFMzJfUV9kYTNhYncuNFZyS2tWelFZeXdtamIwcUhWNkttZw==","password":null,"hsmProviderId":0},{"id":8,"alias":"Generated: ENGINE","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uZm5aMzh0a043eTh4WFhVWHVPbXlCUS5KTjdlN29ybTFVb0xHMThTUDRRVWNhNnJ3eW9DcmIxamhLMDh0Xy12RkQzYlBlbi10eXlEV2lhc0ljby1pVjNOb1IyaG1FeTI4c2Q4dmVLckdXbDVMek1za2RKZmZWckdQMUNmblc1MVhod19TdWZqM3BvWl9yWXBjNFFfWktVYUJRTU1hYWxITGt4Rk5mVy1mRk1NRGt5dnAzSDl6Qm1RS3F1cVQxVTZTZGlNZ0Qtc0VzZmhnUUp0QVd3RHEzYlpDLWNSVENJMF84WE1uMV9DekExTmxoNURkZm1VTjFtZUNWaWFVME84N05sTThvdmpLUFdBT1k2QUtkRlVla0pfOVBCQkJQaFBhcHc2U1lnT08xa3FsclZlNTZpS3NCbHdBV1pvcExpYmljRVhCWFR2WkE0WHdndmd4YmhQMVd4cU9wLWZiaUVwc0c3WmRFX2JHejJpVWtrN3VrWmJsVGhETFRrb0I5TjlkX29LdXYtVlNnMGhEc1FDWDV3b0dVemlXWmNiVXZPQW9OcHFybmU5VEppVEg4azVlRjItdzZZNmVkY2pFb19UT3gzT05ac1hleWMyVWlSYkhHbldZeUVWb1lrcGhoTTM2WlBScEczb3UwbE5POVNLLWhlVVVwWmNJV2gwYkhQalRObzd4VHdOXzV1QUE5V0dWS3J4VDBxSm42ZGpYY2ZJSGhidUd3RGZnN3JPQkdxVU11NHdhcEdKSGNlM2kyRTBlSkN3Uy04N2Yyd08xVGgtNE1OeHZpd2xZcWh4Q2tCVVhJeUtjU1RhUURmZkJuOWdXcXdSUXpwOGRnNnU1ajBtTlB3ZzRLSVVJVHFfUW5zRWJZaDZiM2I1ZWRwNndqNmJ5QlBFcHc0YkFIZHR2ck1QNFpGZUZ0QUZDcnV5UE9Tcjl3aVRCcWpVaWtnU2o1MTlYek5MVjR2azhRQXFlaHlza1I2cFlOSm5NYnpyNlhic0VKR1F3aWFmc0NhXzlqZFpncDFNSVk3Zlc5YVJUdVBVYnhuZFkyZjZiX1REUC13bVBnVENQWjVPLUFya3NYVElIRnU5aFJ2SkhXTjlRc1JnOUhJSVVKZkZsRWtNUGhmeV8xV1I0RW4zREN0S2NYMEtjel92cGVabHltRUVWVE5TNVlTaUdZcTFoeGRLb0ctN05GbEVyVDJBcERuRlFRclMzVGVsemZQSFRhZHhrQjlQOEJQYmxaaGQ5Q0V4OGlsWlBhRHpEM0Y1TGtPaTJOMHpCVTd6SUxlNXRoWkJCbkMtMG5RUk81bmJfd09KR3Bwd08wVWItMEJnYmh4aE9nU1NPWEJSTnUweTUyLTVvV0RSUzN4U3Bvc1pIek42ME5oVUFvUVpaaDY5azdaUEJnZkRmRjNDSWNSRHhWWTUzeTVBNlZRY01ZWko1TGkzRF9fdW1aeWlBdnpyYXNDOHdWUjZGdXZDRGlvajU2djdON3pJMHpYczBpNENrbENUZUNDcWhrY2E3amcxR0hKemp1clI4b2dJOXdBMEg2Ny1taWNTSnM4bU9RcVhoZ0dhYjR6M0dpSTExZHFhSThyUmtCQjhCSmNBWFFNMUN3MkpBWk1tUk05YUtQenpzRlN6Z2ExQ2N6WUZaZnZacUR0TWYtYjdSZDBtRW44a18wLXdqenlzUEtUck9QOEtRc1VVUXJTamNCSy1SaUE3QWNwSjhqbGpQX1dOSmlxelNuVlphejAzbG5yOFI0V1Q3UWxLSXlROXc0a0poTGh3MzlBOXVZRU5RYlYtS3NndEVJbEVhYWxFb2RPOEZNX24xaXJaVUZjU1B1M0pQdTRsVnhRdFF5UmNzSWp2ejVxc183V2ljSnMtQjhrMWpKWjNfZVZIRlZrT1JUWkE3Qk1CamxBYjduWXFjMDhNZzZpMk5nTTI2d3FEc2w3U1JfeXE2VWVOQVJITmFDb0R2UE1qbTN5dVZSRTJTX1R1MXROc1NYSjUzdEZtbTlEOWg4NWtiNDh0RTZ2WGRUcElCa3JtbUlvcVF4RnN4YW1pTUhUeGVrdjZDQlBrTlV1TUNkaEQ1OG9GOU9UQlpYY011MHhRRXl6M1k3eXMxX1B6bUFpay1OcmdZOWk0ck5GeXBtbDg0MzFBLXEycXpnU0p0SHZMQkJHTnB5a1JOcGZoSUhBQmNteGhtaHN4RVJJWGJicEdsaFRvNUJsNWtndDBoeXhzd2xpRHFCdUNCdXpfbWI1TUZMT3RaZHAyNlAzMk5RX1I3WG54OVFQalBGa0dsMDVJaFUySVJucFFKa3VIVVZQN2JXWDh2S0luQTVZRndmQUFvZkZyTUJETkh5eGpRVE95SVV5U0hWbXBmR1pnQk8wejNKMmR1TWFBM2RYMnduWXZTaWRKTDFGN0hCTjMxaTlGbUpIbk82MW42OG5paldBNnZ2NGhpNFhfUE1lYy02RE5hbHRaaTAxMGIwOVR4SHp0TlY5MlBDYzd3YVYtd1lvNkp3T3BxYTlVaENXRDRFcmtoYm5SQ0lmdnIwb3BlaG9Mb3QyVVJBSmtGQkZ1Rk9hTHlTUm1MSExxbnU5WWFidDI3eHZSQm42RkQ2WlczQXh6Mzl6dUhYNTFIMUF2bGdCSVNUekc5VTZ3ZVF6VlloRDNVVVdjbnNINE5kRUFxaGlPY3l5M3NKQ0NvV1NzWHBWVTNsdXlFbDZfbktaZldWcGVJZTc5STZPeGdzNnVQVkw4MUNpZzM4aE9hV3B1Rm1UWFBnMkxmNDltT0RCeEt4NzNmQmNmVUZwbEJWZEtIaTA4Mk9qMFBjOGNkZjFRQW5hdHd4ZG1BRjhxSU5obUViZDNlRTRicUYxemxnZUlCck9PY0FsVWVHcUh5YTdsREhQbnR0enpPNjZEa1VzbzhhZ25CR0M2M1BicUhRbm9RSV9wSl91eEdYS3Vac1lJWUk2NGlsdzRabF91NXdkVjBmQm5HamRXRTVoN0kya1VYQ3RodmEyYngwdm4wWFZfclByZ21VVmxnQlVQMElKU0FEd0QwczU1ZWc1ZE90VXdBWUxKTk96cmtOQXY4NXlIQ01HZEN6Mk93VUY3a193aG42UjBSbVB2NTJJcUJISWhDSENhU2xSUWFGRUNyRkJsQW1FZ0k5dVlDS0ZJRFZOOXVwLUF0YXh5a1F6QWNRYTZZZHgtWmgtS0VVTnh5bFdLNFZoblo5a2JuQUhwd1U1Y2MtUTFieDRidFB2bjFucHFELVJEbUVNeVFzYndrcjdKemxNZGNZYW9HbTlNenIzSXotclh4Qmg1UURyZWpaUzdkbndxVnlILWUtc2ZxdW54STVvdmRDWDgzLVlSR05FN1hDY3lNT1BQWWJiU1RGcXpRZ0hpYmZxeV9iOE4zX3YtZjNnczNjeExWSlhiQnVNdjVEckVYQ1NfUXp0cXhPSUNHWmt2dW9fWnFybVR0R3FnUU0zd2ZhaUpaSmhJMzVHdnk0U3Y3UUlCWFlQRTRiWWVySFkwVlliOGtEcnJYajhuX0MxRjY0dHJLU2QxWVNTV0hFRkthbTZsS0Y3WGllSHVVZ1FLdnZZUWlXZHZnZWdYOGZ1MlNSS2tOVk5rNEM4SnR5eGRjNmhQTlJ6RXFxVXYzMjNoaW0xa0dTbHNHOUhfVDJ0NnQ4djhQSG1KUGkzakNCcjl6SjU4TktmNGI4a3g2bTF6YmgwTUR1WEtLQ01tOUphbzVGN1ZITTZzTmstV1o0X21wX01oWW9kWHlaQ1E0MjFKSjBKd1VOX0ZUU3hfZ2VnYW43d1U3dG9ISzNBX0prTnBYcmlyQm41N2VRTnhzc01fQ3VCbUFvSkxEUlUxb0FPdUxLcThmLWx1TU5Wd1pzb19PckR0cGpMN0w3WG5CMjhJVTREc0t2WVBEWWNCNWdGdTFDZ2MtM3hRS2FONnZMc25OWFpSdHV3LXVtOWM5dTBTWDRfaWxjc211akpxUlp5alZLRlJMd2lIcndzaXhrWVJUdEptZmlSWmJ1QzFySkp2LVMyeEJ2NExNSXVRXzluUHNPZHVRelczSDZwV3lVcG1HcXFrOEZ4RklTVzRBcTNrdHhTaFJZWEFfVUNjcmtwMGIzVVc0bDRwSmY5dHp0YXRUYlQ3OVlYRF9VLUhIU3lfMG1tbXNGMXhpMHpJcHU2cklDb2FOaWRETTN4ZGdhYW9NSnJ0TVFEVHBqU3J1cF9GUS1rdFhRQ182RUVkSHhhZklfRkVRVjItWURUTW9GdHZuWkNJRFZzOUpQVzhHYUNHcEloNHZzVTc3d1E0MDNGTHA3YmtIVmUtYlNsOVNFX2F5QWpSWUszZndVWjExZ3JvM3FXLVR0aFN3WVowTmNhdFJXWk5sUWZTbVF0NGRSUXVKaU13bENVbjE2QjNXdFVSTnhzS1ByUUpKZTFPYmhFQTltdjhoeFpZX3lZYUlXOGZBaWlqWEtZNkdjOHN2VVI0Z0J5RDNZMlI5YWQxZGZXVE5JLVhMU1ZBUEs1NlBtS3R4OThmdlBwYnp3dEFRcjMyNExMNG9TY2h2ejZsaXdaYWh6bkp2bTdZRTZDNEJzSmV3MHo5M0Nudk1wZG1sZm5UVE1DcWMxc3pmblRjMjFYcV9iSWJSQ3Z6TWhVbnNmMEE5Rm5fZV9LcHVtcFQ3YWc5blNxWU1WU1c3SEcxVGl3QjJvZVliZGpDTjFENERuSUJKMU1TWFRSTUM2dmVPNHhsdnNGZndLazJGQnh6UW1NblF0RWczVnMyNUxDRlg0V0FxNTBtc2tzTlQ4d0RwdVFSd2Nza2U0SjJUSnZqRl9iWTd5ekVZUTNheFU4d1FWNmMzNE5FUlEuY2tTUExFTDBiVXJxcE9PVE9vV3Zldw==","password":null,"hsmProviderId":0},{"id":9,"alias":"pingaccess-console","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4ucElqTFNFdDFkMmJTYnhYYkJMZFdNUS5UeWN1MzNkMHZlcTZwcW03MVh2OGt4Rk1LeUhIZUV1SXo2NW54NnY2ZVh1UVJ2QnhqR092MFZNeGJuYVZYb25Ob3RSQzJDNFhybGVhOFJCelNEcTR5QW5CczF0VUJ0dmZTZ0ZwWkUwS25rU0hzWkdqOUtnRHhkaXB6ZndUV3FGWFFEdmYwR2YwdHRqUVVrMzd4TVRQcE04QXFQVjFzbDk5Z09OOEhOcUluR1RncDBoakw3LUVVZXk4OVdFYmdRejl1MndGcVZZZ1o1dEJxaDhKYllneFVmVTJTTXl1dllUTnp1VDFkVG1pT0tUbVZqUDFsQTJKTEdSb0pRR0JPYnQyVDRXRFItcDNlLVhsWWJaOTFMeWVyWGdPdWJRSFk3T25jYW5RTUl0UzJNYTFNbnNXMmNWeElmUDhMc1pQbl82NkstbWpxTUdxQm5RN1ZVUWllMnEtQWR6VEZwSzdDNGd3aU1PRTF5SkNJRUxFNmhacVBCY2ZDdnozSi1WcFQ4M3QteGlHU2dBYlhVLWJlSzdBd20tTEd1cnctcTVzZmRwVkNLUzhwbmktYjN6X2htMzhhdkRBUHduQ1F0SktHSDc0d0RaZ2drMGYzcjIzaDFpVzVwZWxUYk52akdlUHVtcW9IMXcydFJTOTQzckZ5SGVzV3NHZ1QxTE5UWkpGck13Zkg4VUdsbTVhZEdaeXhxbzRvcWtpT2llazBwVHlOWkpiTzh0eElEWEp1amx5b2Fyalg4anJyVmgxZHdTNVkzQ0locnRrM01oQjFVSGdHSGpWcC1yQTkyQVU0d0ItNFZHMlFwN2NYY1g1ZGd5YzhHLU91S21JX1BidHFLWWF3Vk93RlA2SVhnam1VRExqSHR0QUNJbkg1aEhhMnFlWFBObnhkbDF3ZG5QeVl2WEEzSUZjc25INm1aUVdlclNnN0NseV9TOFVLR2I1VllNaGZSaWFaLVRlSXR5dHp1TFRXd012UUdPS1Zta2JIQXhSWG5pd0w1eDdvTnZpdndrOW5GSjNDUzJBNFBiMUJnSEdpYk0tLWx4QnU5T3M1VnBYa09FVk1xX1BrT2tqMERyZ2paNnN2QjRTYk1zalk0aUxIRUtvZnZYSXhqMU9EWkttd1Uxem5BOTJjZEFYSTdNS2RNMF80eDlhUGxLOUZKcnAxT1NyUGI0ZDI2Tk15WkZSSDhQbllLY3ZWZjRpMzJYV0FqcEtiMGpHUDc1NmE2WUZ2MXVYZ3lmNUlIckdabXZmUmtUeU5aUW5ranFLZnlacWlzRVdnMmw0M1ZlYUJpa0hEeVh0dF9zMHNDaHF4VnVUc3JlTkZyS2VZVmxrRmw4MWc4SnlTbHotVG9iX1NESEl6MWlMQ0dFdmthbG50cUl4VXJ3b1dDdlZmRzY3T3NKZlNsOWJsREpYZUpid3NEOWtCVnkwdHBUQWxiX3pBbnEzVWlNbXBRZnhJVS1nc0ZSM2p0SEh4V3NBWXdBMTItdDFBd3pFR0owcDhSUE1CbVVkZWZDVmVzSW5xdG9LX2tHc21pZExwU180WDFRTzlOanNEY2w5azBSTXlwdHZGU005UVZtbWJJdkVESkEwVHhzMWctUjdRUGgxdVlEa3RTckNvVTNETVgtUEttT0tpTjI2aUYtOXE1MzNrQ0dWWEh0VVhOV0dqWjJ0enVPVS1TUmpYcWZSTzhncmdJbWQxcXBPOGZXSy12amFnOWNRYWFEQ1RuTVZlN2VEY214SUNZNmozSVlpeTVfRGRfQ01heW5aSXlxTlYxNU9YYWpWNTItWVNCbVZuT0dNQnR5YjIyWWtEWVRvZFF4dm50X1gxaTEyanlTSVV4QzZwZW1HbUJtVUZZaGlvQUlHYnBjMFE3MWlSRTNEVzg3RENwTVNFRUNnNTdqcy13UkZfX3RfYnlmX0xlYmF4UnZ3SG9xOTZsUHlBMS1YX0FraWwwRzhmVG1LUVBabzZxMmRHV1BlODF6eGdPQzMzbEtRZG5DZjRYM0hVVlpqdmtpR2NyMWJmdjhsV0t1VUdRXzhRV2ZqTlJ6NWdNYlpZN3g3OWNQeE9rdDRmUmU1QndTMWxId2RJSjFJNGIwQmM1WldwZVY5YkU3Q0F3cGwtZjZ1elRUS0UycmtvMkdGYmFiY1VtN0M5cko3VGNqZ3hIc0pPN29uN0JhUFVoN1BaT3doeUEwUXlwTmpUcFJJSTh0b3BEa1hNdElJNDN0aHhnSlRZYklQdS1Yam0tb1ROWEhQNmNGbi1FQmR4N0UzQUU4bzVKOUZ5V2pzMzR1dUY2RXBiQ1F6M0RvQnNpc0l2cDFSZ1JYWkZDbFJGT3V1dXFkVVZ2WWpmRllfMUc4RUJqTmVpdWtSZlBDUlpwLTBFWkdfemtyZnpreURHT21hMXFXNlJVQXdhZE5mU2ltWkt0MGc0dVY0anM5bHNOTjdFZEd4dXlWU1N4MHprOGJTd3pYV3prN0l2MmtUd2QyeWMxU2g1ZW5QVjhQaUUwbGYyU2VGSElEQ3lNSERaSUpYWHdOX1NuMy1ROEJudk5tOWFjc0prc1QtZWx1R1hhVVpGS2dLSHUteF95bnBkTGhYb21ZeWlqWllSTEp3VTdQcjAtNnJsQnJpNVlpdlFlUHBTWnpBN1BsdERyUWlzT0NnZVVtNllyTk5iUkhFWmo2dXJFOUhndTFmOFJyQ3hoZ0xlVW1sSjd6RUN2dktrZFdnR0wzdXFVeTlvbGI4MVpHSnFyYTE3VE5ORkNKVkpRTjJocThiQnJmdUFQVVRIYTVvRzNuTHU1MXdadFlWdE9yVlhvYmhHbTdlREJWMUxadG9ncTF5bWU0aGlJR3RVS0ZXc29sV2k5NDUycndaa1BJR09JbTRLUlI0VS14WWxRdFlieVdlWGV0Y1Y3Rm1xZ1h2cWNKNkRUU1lwWEZ6UG1xeDdwVFlMN3BpVEJWbmJSbHNYLU5YUWlIOWpwRXNzblhXQnNsUkNuQldoQXJhQVpxVEpIV3U5eE1uTFdRNDZmd1lfQ0t2azhCV0NoQlNPb09uS0JjUXB1OWI1eU5TQkpYaWRwOHZJWXY2X1pWZmJOb3h4Tm95OVI0S1ZfeVk4M0QxQXB1YWY0ZmVFMUt1YXlqdWNMcVVlSzA1SWFpendmYmh1ckprNC1YQktWdkU1U040bldNLUtIZUZwNlY2UVo5MjR5UXl4UEkzNUVMRE81VVh2MUdWX0FYcUhkcV9Tei1yenVDWFVVYWtlaFlMeFZlSC02azI2bUJiVFJGYV9yNEs3b3ZTMnlRbDRxX09YTVdyRHVmajdYNERTMXgzVHQtVmVMT0ZMRXFBQUxwb2JHTnNSeWtCUWpaS1ZDTkJZbG9YNUdSRXRFTzhncFFuV3drV2tKajFkQU1uMVlWMFA4LUhuV1BvZExIV1dXSjZUcGszem9KVGRTU1Q4NnRscV93RV9famRUTGl6d0JlSE9JeGN2NFBLX1Vmb2ZVemhRYzJQMW5aUHItdWJGblNQYXdaNVJRZnF2dW15NGFvdmFfWDRiSDkzdkc3OFBYSXBrUlIzNWdQQWxNUkhiVk1rQ3NwaHlrd1IxYXBwTTBXallXdzlQbWZwSVdWZ2c0S2lSVWRSbVJyM2dHenZldzFBMDJ0dzNHbThZdXJIMzJhSkhBbXJhejF1N2FRNjVaQ0pIRElkYTdHa19wODU1LWpNSTVfZDhBd1VJQ0lrQ19PcUJzV3gwcDZPLVhGZDJWd2J6aXFmSVpUY2t4RlBiVUxKN1BqZGI3TGNabkdrTG1FZVZsdUIzRmltcFZTUXlmc1poTlBQXzV0U2FwZFNuMmQ5NW8yVXdCOW1PM0tMSFhrVjgzVjg2Z1pnTHVXOU5BSWdlZnpSTkRuQlAtZFhkNGV1bmUzR0JnOEIzUGdfZGNMMFQ5TWtjN1FpUjhBbFBYWnhoRjlrYnNaMDhucTRpMWQ0NVdHRG9ac3JXSlBwWkZ0UnJnZW9xOHpzMXFNUjRwb0lUd1R4emJXTEVKaWdpQmhPeGN4UnVJYi04ckZsR2w3bTROWEdnd1NaQ3JzZUctcVhHbC1WODBCS0RyTDJ5QmxQOTl1bDRWM1FfWFNWQ21zdFVJa3JmNmJha0RhcGVzUDRLc1hrcEg1NFgxN1hxeVFLYV93NWpMWUlEOG9mYi1qbHJIdW5uSWpiSTZUUTEwWFBHQjl0UlRGclVQOG5IT0M3V250RVRSUVJ2amd6dWR4Z3BMN21RSHFVZlpQd1ktSUNRekZLamJpdWxXOFVjanNMZlp1eDVHVHFNNHVSdEstYUpuak81X0FmaW81eDRGMW1ad09vN3F4TnZTMFlfbEVQSEtUUHJULXhSSHJmTFRjOU51QUlSNldYdzFCZnZ3aFo4WmRVYmdiZ3lGZ3NwVVVLUlNPN1BtN2lsYW9hRkpmV1RzZWhMUHZ0LXpuc2xveVY5U2ZaWWJoVkRIXzRzMUJLdUxYeUZYbFdENjBtOHUwTEZPNlU1TGVBcmRxOENmWmdqaURBWGFvVU5KZzFybmNXR0szLTFLTGNxRWpPT192QW00MHd3TXpyUjY0Q1JSeXNUVlRmR0NES19ySS1OSFZ2VVYtWFRsWkZJLTV1cEVOSXNpTlRwQkhFNFlsLXNsV25nOFR3RzExajEzZW9qSG93NHhfbHhIN1gzdGIwd1dzYXJIUG5qcFJqQXc0TWJkR3lVUmc4U2V3QVY2SzN4b0VxdldoZHJZbGpReU56TTg5TUtNRzQtVjJSLW5ETmoteTctQzZLR1kyREVPdGpFSlFjM0JNLVdaeHgwU3QtemIxdkdVT1UwYjFtMjVoUnI3NFlVWFVteENYbDgwNHF0M0xUZ3JtNkVUcllhTk8tUWo2R3VtLTFMOVI1UDlTQ0ttcV85S25lUGdlZGtBLkZyZGk0c0ZUOVBNQmdkYkIwRlZXLXc=","password":null,"hsmProviderId":0},{"id":10,"alias":"ca-keypair-3115","fileData":"","password":null,"hsmProviderId":0}],"loadBalancingStrategies":[{"className":"com.pingidentity.pa.ha.lb.roundrobin.CookieBasedRoundRobinPlugin","id":2,"name":"Default Round Robin Strategy","configuration":{"stickySessionEnabled":false,"cookieName":"PA_S"}}],"oauthKeyMgmt":{"keyRollEnabled":true,"keyRollPeriodInHours":24,"signingAlgorithm":null},"pingFederate":{"targets":["pingfederate:9031"],"skipHostnameVerification":true,"expectedHostname":"","backChannelBasePath":null,"backChannelSecure":true,"useSlo":false,"host":"sso.data-holder.local","port":443,"basePath":null,"auditLevel":"OFF","secure":true,"trustedCertificateGroupId":4,"useProxy":false},"pingFederateOAuth":{"clientCredentials":{"clientId":"pingaccess_validator","clientSecret":{"encryptedValue":"OBF:JWE:eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2Iiwia2lkIjoiRzh3Zml0Y2t4RDNXNHl2VyJ9..Mi8AreL9aWqBMVuMk3iPtg.6-y6l0cyc_GVQXiz50WoPw.d0OVlYsYQ0efa4Ci5r0Njw"},"keyPairId":0,"credentialsType":"SECRET"},"cacheTokens":false,"tokenTimeToLiveSeconds":-1,"subjectAttributeName":"sub","sendAudience":false,"useTokenIntrospection":true,"accessValidatorId":1,"name":"PingFederate","clientId":"pingaccess_validator","clientSecret":{"encryptedValue":"OBF:JWE:eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2Iiwia2lkIjoiRzh3Zml0Y2t4RDNXNHl2VyJ9..Mi8AreL9aWqBMVuMk3iPtg.6-y6l0cyc_GVQXiz50WoPw.d0OVlYsYQ0efa4Ci5r0Njw"}},"rejectionHandlers":[{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":1,"name":"Default Web Rejection Handler","configuration":{"responseCode":403,"templateFile":"policy.error.page.template.html","contentType":"HTML"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":2,"name":"Default API Rejection Handler","configuration":{"responseCode":403,"templateFile":"oauth.error.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":3,"name":"Default Rate Limiting Rejection Handler","configuration":{"responseCode":429,"templateFile":"oauth.error.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":4,"name":"AccessDenied-InvalidHoK","configuration":{"responseCode":403,"templateFile":"oauth.error.invalidhok.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":5,"name":"AccessDenied-RequireMTLS","configuration":{"responseCode":400,"templateFile":"oauth.error.mtls.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":6,"name":"Introspect-EnforceFail","configuration":{"responseCode":200,"templateFile":"introspect.fail.json","contentType":"JSON"}}],"reservedApplication":{"contextRoot":"/pa"},"resources":[{"id":1,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":1},{"id":4,"name":"DCR Create Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/clients.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/clients.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":8}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":5,"name":"Revocation Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/revoke_token.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/revoke_token.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":6}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":6,"name":"Introspection Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/introspect.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/introspect.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":6},{"type":"Rule","id":5}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":7,"name":"UserInfo Service","methods":["*"],"pathPatterns":[{"pattern":"/idp/userinfo.openid","type":"WILDCARD"}],"pathPrefixes":["/idp/userinfo.openid"],"auditLevel":"ON","anonymous":false,"enabled":false,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":2}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":8,"name":"Token Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/token.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/token.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":1},{"type":"Rule","id":6}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":10,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":5},{"id":11,"name":"Well Known EndPoint","methods":["*"],"pathPatterns":[{"pattern":"/.well-known/openid-configuration","type":"WILDCARD"}],"pathPrefixes":["/.well-known/openid-configuration"],"auditLevel":"ON","anonymous":false,"enabled":false,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":12,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":6},{"id":13,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":7},{"id":14,"name":"DCR Management Endpoints","methods":["*"],"pathPatterns":[{"pattern":"/as/clients.oauth2/*","type":"WILDCARD"}],"pathPrefixes":["/as/clients.oauth2/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":2}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":15,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":8},{"id":16,"name":"PAR Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/par.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/par.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":17,"name":"Authorization Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/authorization.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/authorization.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":7}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":18,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":9}],"rules":[{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":1,"name":"MTLS-HoK--SendThumbprint","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"1","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import javax.xml.bind.DatatypeConverter;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.cert.CertificateEncodingException;\nimport java.security.cert.X509Certificate;\n\ndef HEADER_CERTIFICATETHUMBPRINT = \"X-CertificateThumbprint\";\n\nexc?.request?.header?.removeFields(HEADER_CERTIFICATETHUMBPRINT);\n\ndef certChain = exc?.sslData?.clientCertificateChain\nif(certChain && !certChain.isEmpty())\n{\n  exc?.request?.header?.add(HEADER_CERTIFICATETHUMBPRINT, getThumbprint(certChain));\n}\n\npass();\n\nString getThumbprint(def certList)\n        throws NoSuchAlgorithmException, CertificateEncodingException {\n\n    if(certList == null || certList.isEmpty())\n          return null;\n    \n    def cert = certList.get(0);\n          \n    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n    byte[] der = cert.getEncoded();\n    md.update(der);\n    byte[] digest = md.digest();\n    String digestHex = DatatypeConverter.printHexBinary(digest);\n    return digestHex.toLowerCase();\n\n}"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":2,"name":"MTLS-HoK-VerifyAccessToken","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"4","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import javax.xml.bind.DatatypeConverter;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.cert.CertificateEncodingException;\nimport java.security.cert.X509Certificate;\nimport java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\ndef authHeader = exc?.request?.header?.getValues(\"Authorization\");\n\ndef certChain = exc?.sslData?.clientCertificateChain\nif(certChain && !certChain.isEmpty())\n{\n  if(authHeader && authHeader?.size() == 1)\n  {\n    def token = exc?.request?.header?.getFirstValue(\"Authorization\");\n\n    if(validateThumbprint(token, certChain))\n      pass();\n    else\n      fail();\n  }\n  else\n    fail();\n}\nelse\n\tpass();\n\nboolean validateThumbprint(def token, def certList)\n{\n  if(token != null && token.startsWith(\"Bearer \"))\n  {\n    def accessToken = token.replace(\"Bearer \", \"\");\n    def cnfValue = getAccessTokenClaim(accessToken, \"cnf.x5t#S256\");\n    \n    if(cnfValue == null || cnfValue.equals(\"\"))\n    \treturn true;\n    \t\n\tdef expectedThumbprint = getThumbprint(certList);\n    \n    if(expectedThumbprint != null && cnfValue.equals(expectedThumbprint))\n      return true;\n    else\n      return false;\n  }\n  \n  return true;\n}\n\nString getThumbprint(def certList)\n        throws NoSuchAlgorithmException, CertificateEncodingException {\n\n    if(certList == null || certList.isEmpty())\n          return null;\n    \n    def cert = certList.get(0);\n          \n    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n    byte[] der = cert.getEncoded();\n    md.update(der);\n    byte[] digest = md.digest();\n    String digestHex = DatatypeConverter.printHexBinary(digest);\n    return digestHex.toLowerCase();\n\n}\n\nString getAccessTokenClaim(String accessToken, String claim)\n{\n    def accessTokenSplit = accessToken.split(\"\\\\.\");\n    def accessTokenBodyEncoded = accessTokenSplit[1];\n    def accessTokenBody = new String(Base64.getDecoder().decode(accessTokenBodyEncoded));\n  \n    return getClaimValue(accessTokenBody, claim);\n}\n\nString getClaimValue(String responseStr, String jsonPath)\n{\n    ObjectMapper mapper = new ObjectMapper();       \n    JsonNode resultObject = mapper.readTree(responseStr);\n\n    String [] splitJsonPath = jsonPath.split(\"\\\\.\");\n\n    for(String path : splitJsonPath)\n    {\n        resultObject = resultObject.findPath(path);\n    }\n\n    return resultObject.textValue();\n\n}"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":3,"name":"MTLS-RequireClientAuth","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"5","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\ndef host = exc?.request?.header?.host;\n\nif(host.equals(\"pingaccess:3000\"))\n{\n  pass();\n}\nelse\n{\n  def CDR_CLIENTID_PREFIX = \"dcr-\";\n\n  def token = exc?.request?.header?.getFirstValue(\"Authorization\");\n  def isPass = true;\n\n  def clientId = null;\n  \n  if(token)\n  \tclientId = getAccessTokenClaim(token, \"client_id\");\n\n  if(clientId == null)\n  {\n    def clientAssertion = getRequestParameter(exc?.request, \"client_assertion\");\n    if(clientAssertion != null)\n    \tclientId = getAccessTokenClaim(clientAssertion, \"sub\");\n  }\n\n  if(clientId == null)\n    clientId = getRequestParameter(exc?.request, \"client_id\");\n  \n  if(clientId == null)\n    clientId = \"\";\n\n  if(clientId.startsWith(CDR_CLIENTID_PREFIX))\n  {\n    def certChain = exc?.sslData?.clientCertificateChain;\n    if(!certChain || certChain.isEmpty())\n    isPass = false;\n  }\n\n  if(isPass)\n  pass();\n  else\n    fail();\n}\n\nString getRequestParameter(def request, def paramName)\n{\n  def postParams = request?.getPostParams();\n  if(postParams == null)\n    return null;\n  \n  if(!postParams.containsKey(paramName))\n    return null;\n  \n  return postParams.get(paramName)[0];\n}\n\nString getAccessTokenClaim(String accessToken, String claim)\n{\n    def accessTokenSplit = accessToken.split(\"\\\\.\");\n    if(accessTokenSplit.length != 3)\n      return null;\n  \n    def accessTokenBodyEncoded = accessTokenSplit[1];\n    def accessTokenBody = new String(Base64.getDecoder().decode(accessTokenBodyEncoded));\n  \n    return getClaimValue(accessTokenBody, claim);\n}\n\nString getClaimValue(String responseStr, String jsonPath)\n{\n    ObjectMapper mapper = new ObjectMapper();       \n    JsonNode resultObject = mapper.readTree(responseStr);\n\n    String [] splitJsonPath = jsonPath.split(\"\\\\.\");\n\n    for(String path : splitJsonPath)\n    {\n        resultObject = resultObject.findPath(path);\n    }\n\n    return resultObject.textValue();\n\n}"}},{"className":"com.pingidentity.pa.policy.cors.CrossOriginRequestPolicyInterceptor","id":4,"name":"CORS - Allow All","supportedDestinations":["Site","Agent"],"configuration":{"allowedOrigins":["*"],"allowCredentials":false,"allowedReqHeaders":["Authorization","Content-Type","Accept"],"exposedRespHeaders":[],"overriddenReqMethods":null,"cacheMaxAge":600}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":5,"name":"PingFederate-RestrictIntrospectRefreshToken","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"6","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"def request = exc?.request;\n\nif(\"post\".equalsIgnoreCase(request?.method?.methodName))\n{\n  def postParams = request?.getPostParams();\n  \n  if(postParams.containsKey(\"token\"))\n  {\n    def tokenValues = postParams?.get(\"token\");\n    \n    if(tokenValues.length != 1)\n    \tfail();\n    else\n    {\n      def tokenValue = tokenValues[0];\n\n      //assuming access token is a JWT\n      if(tokenValue.indexOf(\".\") > 0)\n        fail();\n      else\n      {\n        if(!postParams.containsKey(\"token_type_hint\"))\n        {\n          def bodyStr = new String(request?.body?.content);\n          bodyStr = bodyStr + \"&token_type_hint=refresh_token\";\n          request?.setBodyContent(bodyStr.getBytes());\n          pass();\n        }\n        pass();\n      }\n    }\n  }\n  else\n    anything();\n}\nelse\n  anything();"}},{"className":"com.pingidentity.pa.cdr.CDRRefreshTokenProcessor","id":6,"name":"CDR AU - Refresh Token Processor","supportedDestinations":["Site","Agent"],"configuration":{"issuer":"anybank","encryptionJWK":"{\"kty\":\"oct\",\"k\":\"Fdh9u8rINxfivbrianbbVT1u232VQBZYKx1HGAGPt2I\"}","retainAttributeList":["cdr_arrangement_id"],"tokenEndpoint":"/as/token.oauth2","introspectionEndpoint":"/as/introspect.oauth2","revocationEndpoint":"/as/revoke_token.oauth2"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":7,"name":"FAPI Conformance - Fix PKCE","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"1","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\n\nif(!exc?.response && getRequestParameter(exc?.request, \"request\") != null)\n{\n  def requestJwt = getRequestParameter(exc?.request, \"request\");\n  \n  copyRequestObjectParameters(exc?.request, requestJwt, \"code_challenge\");\n  copyRequestObjectParameters(exc?.request, requestJwt, \"code_challenge_method\");\n  \n}\n\nanything();\n\nvoid copyRequestObjectParameters(def request, def requestJwt, def paramName)\n{\n  def delimiter = '?';\n  if(request?.uri.contains('?'))\n  \tdelimiter = '&';\n  \n  if(getJwtTokenClaim(requestJwt, paramName) != null)\n  {\n    def newUri = request?.uri.replaceAll(paramName + \"=\", paramName + \"_old=\");    \n    request?.setUri(newUri + delimiter + paramName + \"=\" + getJwtTokenClaim(requestJwt, paramName));\n  }\n}\n\nString getRequestParameter(def request, def paramName)\n{\n  def paramValue = getQueryParameter(request, paramName);\n  \n  if(!paramValue)\n  \tparamValue = getPostParameter(request, paramName);\n  \n  return paramValue;\n}\n\nString getQueryParameter(def request, def paramName)\n{\n  def params = request?.getQueryStringParams();\n  \n  if(params == null)\n    return null;\n  \n  if(!params.containsKey(paramName))\n    return null;\n  \n  return params.get(paramName)[0];\n}\n\nString getPostParameter(def request, def paramName)\n{\n  def params = request?.getQueryStringParams();\n  \n  if(params == null)\n    return null;\n  \n  if(!params.containsKey(paramName))\n    return null;\n  \n  return params.get(paramName)[0];\n}\n\nString getJwtTokenClaim(String jwt, String claim)\n{\n    def jwtSplit = jwt.split(\"\\\\.\");\n    if(jwtSplit.length != 3)\n      return null;\n  \n    def jwtBodyEncoded = jwtSplit[1];\n    def jwtBody = new String(Base64.getDecoder().decode(jwtBodyEncoded));\n  \n    return getClaimValue(jwtBody, claim);\n}\n\nString getClaimValue(String responseStr, String jsonPath)\n{\n    ObjectMapper mapper = new ObjectMapper();       \n    JsonNode resultObject = mapper.readTree(responseStr);\n\n    String [] splitJsonPath = jsonPath.split(\"\\\\.\");\n\n    for(String path : splitJsonPath)\n    {\n        resultObject = resultObject.findPath(path);\n    }\n\n    return resultObject.textValue();\n\n}"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":8,"name":"MTLS-RequireClientAuthAlways","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"5","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\ndef host = exc?.request?.header?.host;\n\nif(host.equals(\"pingaccess:3000\"))\n{\n  pass();\n}\nelse\n{\n  def certChain = exc?.sslData?.clientCertificateChain;\n  if(!certChain || certChain.isEmpty())\n    fail();\n  else\n    pass();\n}\n"}}],"sites":[{"id":1,"name":"pingfederate","targets":["pingfederate:9031"],"secure":true,"trustedCertificateGroupId":2,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":true,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":4,"name":"Deepthought Product Admin Service Site","targets":["deepthought-admin-service:8080"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":5,"name":"Deepthought Product Service","targets":["deepthought-product-api:8081"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":6,"name":"Deepthought Banking API","targets":["deepthought-bank-api:8081"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":7,"name":"cdr-register","targets":["cdrregister:8084"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":true,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":8,"name":"pingdirectory","targets":["pingdirectory:443"],"secure":true,"trustedCertificateGroupId":2,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":true,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false}],"tokenProvider":{"useThirdParty":false,"type":"PingFederate"},"trustedCertGroups":[{"id":3,"name":"MTLS Certificate Group","useJavaTrustStore":false,"systemGroup":false,"ignoreAllCertificateErrors":false,"skipCertificateDateCheck":true,"revocationChecking":{"crlChecking":false,"ocsp":false,"denyRevocationStatusUnknown":false},"certIds":[17]},{"id":4,"name":"PingFederate-Trust","useJavaTrustStore":false,"systemGroup":false,"ignoreAllCertificateErrors":false,"skipCertificateDateCheck":true,"revocationChecking":{"crlChecking":false,"ocsp":false,"denyRevocationStatusUnknown":false},"certIds":[3]}],"trustedCerts":[{"id":3,"alias":"pingfederate-service","fileData":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lHQVc2MU51NDFNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1Hd3hDekFKQmdOVkJBWVRBbFZUTVFzd0NRWUQNClZRUUlFd0pEVHpFUE1BMEdBMVVFQnhNR1JHVnVkbVZ5TVJVd0V3WURWUVFLRXd4UWFXNW5TV1JsYm5ScGRIa3hGREFTQmdOVkJBc1QNCkMwUmxkbVZzYjNCdFpXNTBNUkl3RUFZRFZRUURFd2xzYjJOaGJHaHZjM1F3SGhjTk1Ua3hNVEk1TURNek1UUTJXaGNOTWpreE1USTUNCk1ETXpNVFEyV2pCc01Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQk1DUTA4eER6QU5CZ05WQkFjVEJrUmxiblpsY2pFVk1CTUcNCkExVUVDaE1NVUdsdVowbGtaVzUwYVhSNU1SUXdFZ1lEVlFRTEV3dEVaWFpsYkc5d2JXVnVkREVTTUJBR0ExVUVBeE1KYkc5allXeG8NCmIzTjBNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQWx5dVV4YWR3MFltSnc4U0QyS0NyakI3aVB6bncNCnNxVkxGOFBNNHhhL0xCUVNFUmVxZFZZaGpIeGFLU2t2RXZyVmJCd1ZEbnpZTjM4QVFDNlRaOWhIaHp3eXpTc2hqSUlmd0hzcm5TQWsNCjI3V2RMY2RGNDZtZFdRZCtzWkhnRzd5MHZmZVJ6Tm9sUy8xcFlDYTlkcDc0MGJrKy82dW5DcG9jc3VFL2dvdGZqQjF0cThPL1A3VmQNCkRTQ3ZzdHRXU3lyK290N1FUNUJWdlZONWt1dDcvL2ZiREdpM2VtMDBzUXdzNnRLNE5rTkxXY0NaYXNEL1E1N2tWcnp2UmFjT1M2aUcNCitzcFFPcVhuWnVoNlVaZDgxbTFSUHFBVE9qdW0yUklNSXdEWmZTR29Yd1ZUY0RGVG1tTDBGTDFFK2d2NU5ka09SdXhVdkJ6aWlHZGENCkJRcUR0ZGFpR1FJREFRQUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJ0c295OXBVZ1JrZDd2OEEyelQ1Tmc3bFFDVlQ2bHprWEINCk10UGtFRkd6VHNkaDdvYWMwYU9qaFZvM0FiSXBiVE0yYTMxVWNEc1NkZlNNZjVNdi9ZM1ovaUQ4d1c5czBTeXhQUFhZdVhCSWgwVTMNCk1CM25GK1hsc1ZkS1g0eS8zQVVUZGdnek9CTGV2THBSNjhwa1pOcjYxR1UzNllOWHRCUzhxQW1sZHVyTXN4U2J1VllrZWdQU2d5RmwNCnNqWWpTYnM2b3M5WFpuOEFwL09jWkxmU3lGM1JtaXo2K1R3aHlleVFPKzMrMitiaDVOamtaZ0JHUW5CbDh6SVZZNEhPQjdPVGpnVEcNCnI1cTNvOW5xMzhwTjFtZ0pnV3dQS2JDeWxiWlczR0hHMVdKRXVxWG8yMG8zOGg1Qk1EaUJLeENxNTF3NjREakQyOUZqZzA5U1pmU1ENCm03OE0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ=="},{"id":17,"alias":"cdr_trustcert_default","fileData":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZmRENDQTJTZ0F3SUJBZ0lKQU5INjA1UkhEYW5yTUEwR0NTcUdTSWIzRFFFQkN3VUFNSE14Q3pBSkJnTlZCQVlUQWtGVk1Rd3cNCkNnWURWUVFJRXdOV1NVTXhFakFRQmdOVkJBY1RDVTFsYkdKdmRYSnVaVEVOTUFzR0ExVUVDaE1FUVZCQlF6RVdNQlFHQTFVRUN4TU4NClVHbHVaeUJKWkdWdWRHbDBlVEViTUJrR0ExVUVBeE1TWTJSeUxYSmxaMmx6ZEdWeUxteHZZMkZzTUI0WERUSXdNRGd3TkRJek5EZzENCk0xb1hEVE13TURnd01qSXpORGcxTTFvd2N6RUxNQWtHQTFVRUJoTUNRVlV4RERBS0JnTlZCQWdUQTFaSlF6RVNNQkFHQTFVRUJ4TUoNClRXVnNZbTkxY201bE1RMHdDd1lEVlFRS0V3UkJVRUZETVJZd0ZBWURWUVFMRXcxUWFXNW5JRWxrWlc1MGFYUjVNUnN3R1FZRFZRUUQNCkV4SmpaSEl0Y21WbmFYTjBaWEl1Ykc5allXd3dnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFDcEpPTmwNCkRzeHVSbUJaY0FUR1RpUnFqa1JqV0xOa3psTTluamZjU3ZJSTBJNWhXemtDOEF5dEx4WHRYQnEyOEpSSzdRbXRHK0J0MEpqdFZ4bjMNClgyUWc2T3B1d2tidXlUVUw0RHMxNElSRFNPLzFrVW5xem9Uck1uUkJ1VmdiWVBHc3JYWnM0Qys5MkNZekhxVVozL0ExSC9xSkxhK2kNCmd6SkZYcmVWMGxEcHlhdWNEMnZubFo1U2FtV1JVRnNnSjZneFhzSjhlY1BoNTFNOHJvRFQ4cXhMRnBrYVVEVmYzL0xmcUIzYmZzUFgNClZUTzBqR3JBbGF5eFhMRjQzMzFuRjh0RlpCLzNBdEJDK0lrQUZnWVZEMTBxU2o5SjV4M2x3UzcxQXV3ZlFLd3ptODdhWk9uWDU3RUsNCmdaakxlcm1BV0NaTzBNOGRlZGJaSlN6NWs1U1Rja2tKWUcyaUtwbFZKdFVEMStmVVpGOHBqeDRxSGZuUFozVWhlUzNNV05SdjJPaVYNCm56RWFkZE01eUEyNkowb043WlEvR2JyZnlYelk5R2dZcUY1eUZQR0o5dTNhR3g2SlZTSWFjNDcrUnhtMEhnaEJJRm16a0JLTVVxelUNCjRwMGE2bWYvWlNTdVJweHIrZlRQUHNxa3B4anRJZkIyWXRIZHZ2Z2c0QUMyMTFHQUo0Q3Rjb0RyTGlGMjloRTQyWW9lbGRLcDB3REUNCjNoYUs2YitBODhnalhDRjRWQWRGb2c1MTFCWURXSGwxSm1SRVo1SDJLdHIzQTFuRXgxQk9SRzhvZWFxS0xxVGJ0WkcvTTlhYXZIZzYNCklhdlY0Q0M0MG5qSFFWWUpCL1hUSVNNdmZ0dG9wUldsc29tQkJIRmhTZjNuRmcrVWM1eDUrd1g3UktxUGo3RUM1SWJWNndJREFRQUINCm94TXdFVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUI5N0FTWmwwYkxudXpsR2o4dFBtRnkNCm1RZFdGSmovUS9MWlNIa2t5UVg4TCtUZndYU0ZTVjdDMHc3b0ZSY2t1bkkzTFJPQUg2dkJUcnE2V2MxL1pSWlo1SnhYVmwzelhiTksNClVMaCtoMlBUTmM2OUFtOHFwcUZrNTk5dmd2QTljTEM3VUpYK1YxWkFhM2pUNG9xL1hxdEp5ZURXbzVDOUY2K2Y2Z2sraTlGRHIzYkINClQyNWVwanRHN2tzUkRoeEF4T1JLbm9MS1FqTmhVM1U5Y3Q2RjB0VmFpTWtMQzNoejFUSHk1U1pPU294ZitpaUdXcThpOGU4MjRGcTcNCmFIckdMa1A5aUlrTzQzZXlNMk85ZHpqMXIrVEZYSnkwUVVNWFNkbUlrYjVjS1hzL3k2cDBEZFZzSmFxRGdiUnVrNmFCekhvdFU3KzENCk1EelN0ZVJJd25OdFl3MTFaRTNkbndwakhPbTk0eWpjOWFTbHRSR0tDNmo4SFByMEUxWWpzRVBaM2lnYm5PWlVCNzVXblRvTDdNOVoNClA4UjhieXd4UFk5QTlqVnRVb28yZkZaNzRJQlVvUkRUUFdyYzh3SHV3T0tldGszTXhUc0k4S3NobzkxZysvb3loSm9JMkFVR0lwQzMNCnJRZmhBcVJoYzZqSFUyU2xwQmV1aWdCQ3VKa0tQREdKdHRDMEtOK0lJRXNYMTZlSGMzZDZRMGY1RVAxMUpPSjVJNGMwaXpLRy96VXgNCnFvZzBQcG5NbEhMR2xyQU4wd3oyU0J1TWt3ZDVvKzB0aUNLVGs0UCtPdGhpYkcweWhHVDIyY050NHl1ck5rM294Mi9RTThYOGZKbnANCmIxMVVSY3REd1VNb0pDTngySHhLSUJ6QzZoUWpidE1WNVVGcXVpalA1cDQ4bXZkT29KeGZrQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0="}],"unknownResources":{"errorStatusCode":403,"errorTemplateFile":"general.error.page.template.html","errorContentType":"HTML","agentDefaultMode":"DENY","agentDefaultCacheTTL":900,"auditLevel":"OFF"},"virtualHosts":[{"id":5,"host":"sso.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":3},{"id":7,"host":"sso-admin.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0},{"id":10,"host":"api.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":3},{"id":11,"host":"pingaccess","port":3000,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0},{"id":12,"host":"host.docker.internal","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":3},{"id":13,"host":"mockregister.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0},{"id":14,"host":"pd.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0}],"webSessionMgmt":{"keyRollEnabled":true,"keyRollPeriodInHours":24,"issuer":"PingAccess","signingAlgorithm":"P-256","cookieName":"PA","sessionStateCookieName":"PA_STATE","updateTokenWindowInSeconds":60,"encryptionAlgorithm":"A128CBC-HS256","nonceCookieTimeToLiveInMinutes":5}}}