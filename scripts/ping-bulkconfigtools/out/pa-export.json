{"version":"6.1.0.3","data":{"acmeDefaultServer":{"id":"8572f98e-482e-41c2-8a3d-6a0b2fc99734","location":"https://localhost:9000/pa-admin-api/v3/acme/servers/8572f98e-482e-41c2-8a3d-6a0b2fc99734"},"acmeServers":[{"id":"08eb4cbc-20ed-409b-82c6-12fd0c92eb71","name":"Let's Encrypt","url":"https://acme-v02.api.letsencrypt.org/directory","acmeAccounts":[]},{"id":"8572f98e-482e-41c2-8a3d-6a0b2fc99734","name":"Let's Encrypt Staging Environment","url":"https://acme-staging-v02.api.letsencrypt.org/directory","acmeAccounts":[]}],"adminAuthBasic":{"enabled":true},"adminAuthWebSession":{"sessionPollIntervalInSeconds":10,"expirationWarningInMinutes":1,"audience":"PingAccessUI","cookieDomain":null,"cookieType":"Encrypted","idleTimeoutInMinutes":30,"sessionTimeoutInMinutes":240},"adminConfig":{"hostPort":"pingaccess-admin:9090","httpProxyId":0,"httpsProxyId":0},"applications":[{"id":1,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599524204201,"lastModified":1599523304201,"requireHTTPS":true,"name":"PingFederate-Application","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"Web","defaultAuthType":"Web","spaSupportEnabled":false,"destination":"Site","contextRoot":"/","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":1,"agentId":0,"virtualHostIds":[5,7,11,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":0,"policy":{"Web":[],"API":[]}},{"id":5,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599524204042,"lastModified":1599523304042,"requireHTTPS":false,"name":"Deepthought Product Admin Service","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"API","spaSupportEnabled":true,"destination":"Site","contextRoot":"/dio-au","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":4,"agentId":0,"virtualHostIds":[10,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":1,"policy":{"Web":[],"API":[{"type":"Rule","id":4}]}},{"id":6,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599524204129,"lastModified":1599523304129,"requireHTTPS":true,"name":"Deepthought Product API","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"API","spaSupportEnabled":true,"destination":"Site","contextRoot":"/cds-au/v1/banking/products","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":5,"agentId":0,"virtualHostIds":[10,11,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":1,"policy":{"Web":[],"API":[{"type":"Rule","id":3},{"type":"Rule","id":2}]}},{"id":7,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599524204133,"lastModified":1599523304133,"requireHTTPS":true,"name":"Deepthought Bank API","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"API","spaSupportEnabled":true,"destination":"Site","contextRoot":"/cds-au/v1/banking","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":6,"agentId":0,"virtualHostIds":[10,11,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":1,"policy":{"Web":[],"API":[{"type":"Rule","id":3},{"type":"Rule","id":2}]}},{"id":8,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599524204113,"lastModified":1599523304113,"requireHTTPS":true,"name":"CDR Register","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"Web","defaultAuthType":"Web","spaSupportEnabled":false,"destination":"Site","contextRoot":"/","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":7,"agentId":0,"virtualHostIds":[13],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":0,"policy":{"Web":[],"API":[]}},{"id":9,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599524204150,"lastModified":1599523304150,"requireHTTPS":true,"name":"PingDirectory-Web","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"Web","spaSupportEnabled":false,"destination":"Site","contextRoot":"/","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":8,"agentId":0,"virtualHostIds":[14],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":0,"policy":{"Web":[],"API":[]}}],"authTokenMgmt":{"keyRollEnabled":true,"keyRollPeriodInHours":24,"issuer":"PingAccessAuthToken","signingAlgorithm":"P-256"},"availabilityProfiles":[{"className":"com.pingidentity.pa.ha.availability.ondemand.OnDemandAvailabilityPlugin","id":1,"name":"Default Availability Profile","configuration":{"connectTimeout":10000,"pooledConnectionTimeout":-1,"readTimeout":-1,"maxRetries":2,"retryDelay":250,"failedRetryTimeout":60,"failureHttpStatusCodes":[]}}],"engineListeners":[{"id":2,"name":"Default Engine Listener","port":3000,"secure":true,"trustedCertificateGroupId":0},{"id":3,"name":"HTTP Engine Listener","port":7080,"secure":false,"trustedCertificateGroupId":0}],"globalUnprotectedResources":[{"id":"3a2b5451-00ec-40e3-9556-183452460586","name":"StandardATM JWKS endpoint","wildcardPath":"/ext/oauth/standardATM/jwks","auditLevel":"ON","enabled":true,"description":"JWKS endpoint"}],"httpHostSource":{"headerNameList":["X-Forwarded-Host","Host"],"listValueLocation":"LAST"},"httpIpSource":{"headerNameList":["X-Forwarded-For"],"listValueLocation":"LAST","fallbackToLastHopIp":true},"httpMonitoring":{"auditLevel":"OFF"},"httpProtocolSource":{"headerName":"X-Forwarded-Proto"},"httpsListeners":[{"id":1,"name":"ADMIN","keyPairId":10,"useServerCipherSuiteOrder":true,"restartRequired":false},{"id":2,"name":"ENGINE","keyPairId":10,"useServerCipherSuiteOrder":true,"restartRequired":false},{"id":3,"name":"AGENT","keyPairId":7,"useServerCipherSuiteOrder":true,"restartRequired":true}],"identityMappings":[{"className":"com.pingidentity.pa.identitymappings.HeaderIdentityMapping","id":1,"name":"Default Identity Mapping","configuration":{"attributeHeaderMappings":[{"subject":true,"attributeName":"sub","headerName":"X-SUB"}],"headerClientCertificateMappings":[]}}],"keyPairs":[{"id":5,"alias":"Generated: ADMIN","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uMXl4YjNTZ3BnWURWVHlnd0s1OVFrdy5CQy1lcU1pcDljRkR2b3RHZUI2cGFXVWplbUhNRlB0RU9HR25RaGFvdGdfTjRYbWtCSVowLUdBYm9HcTgwbkg0SUM0cXZvdGxKa3NRc3BxREluaDd0OUVUdjMyV0FmNy0tOXdjUXhidVpvbGJXeW5HY1ZUcWdYYVRrdWw3Mk5JY0RRZWprQWVtRUtjbklJUUNKYU9hemJ2NmxxeEZpQTE5Z0FaYWF0allmVFN3SEs2MGkxREc4VTlNMjRDSTB6dGJOZjREeW0wU2R5bjlHNVVwaTJGb2lwb3p2eHRsMV9yS1NZYXVjZGg4NEFtc1hNSzZHajJxREMtaUtVaF8zQkpWbE9GbFdaeVdhRGxtSWVaQlQ2MjJQU1U0bnRNdFg3cU5TSHU3SmlLQms3NzZ4QXFab0JqbXNXSlBnQy1IQlpEV1VRWGU3VllBU2FDWTVWZmxaSjJvWFpqRTlyS1VvckxuWGl3Si16S3M1RzdnMFVoMkRaMV82WkF4SmszNGlLYW1UY2h6d09ia3VpcFZtMlRlUEkxT3V3Rkk2TmJKLWVXRTFnMzVqa1VmQ2V3U2U0eTl4Qm1Dbl94eXVpQVhqV2VXcmRsVWhNQ0JHSVdTdFFydEp1V2x2WFJKZ09WQXdiVjUycFM0blljQ0psRmNvZUNITFMtMFplN1d0VXpUdTlhVVNSTmstSG1xc3hDeEIxeC1aYk5qMW1FUnVES3pDU3V3V1FTOXFYNDA0RlYxTUNCT0Y2ZzJLcHhBQk1PcWFUYTBLV3N0ZzJwWk1wVkRyRXRxVWY0RVJSTV9BaG82Z0ZPeGNsTkx6UC1tazBrRThMek5idTdXTUM2a25IT3IwMHA2ZS1qWERrSmRWZXFpdjRVcHpfRWwybzNsQzUxU09ad1lja3pEbHU2QUlLczhZT0JKR3FjZ3RPcVNPbmY1Q0g3TXc0ZDJYZXA1cmFZRGQ0VXRxWDBrQWY0aFNCX1NpVXkxeGc4eFhUOVdzbzVpemJuOVZNRGRTa0wzTkkwZzRSTk5CTzZXaXVoYzhtT2U4c00zMnNUZ2JWNC1rTkx2c1I1RDM5WlpFdE5zVXAyN3BNUjNOeUJHdTlxNFVCZ2FWYnl2NkloWUtMTHJRRS1JQkM3UC1Od0k2aVAzVUNjaFAybXo1T2JwVlo1UEhtMHlKblU1TV9sRUVSV2R0dXNyOG1McE9mR3FEdWxQRm5jMjNWRGtrV251MklsaXRBLW8xZ1puaFVweEF0OEg2NFlyTWhZTVJ4NjBUWDZWMVplbHFhOGdxU0s1Z1FCRlJ2dEhHMjBsTmpUQlNYNXJQT3ZqZldCUnRUdng1SVJxVF85bHdnZ1Zta1NPVTJZVzNtRkV4NzV0cVpHX2VRSXlCaGxOMWRDZGZnVXEyNFozcXNxYTZuNDZndVZZMV9STzRtbmNRMkRZNUVSTG1JeWFDT0Zzd1J2S3FaZHlDWW1fUXJtNUpXQ190cHhNMFZhcGs4SmFObnBUUEtIU1VjSGdndFFMMHprU3pmWWM4d0Z0REZDUWExQXk1U2hnQXZ4Yk1NdmtJQ01lelBtOENOajJQTUVoQVltczVMZGlacE1rOXZJN3hVZC1ScWJDVWVCS01jcVBrTG9GX2lqQnZ6WEM0YmNsaFRSSGFXUF95dEhYVHhxVW1MazdoN19pbDZURWdUV0c2UXV6Q1lmVlB0V0cteUt3Q2hENl9qNnE5dW43Y3ZvV3RPS25ydGdweDdZVFl6MzI2dDRWUk9GYWIwUnFaazJjNkNSYmdtdHBjVzljWkhYVlRuYXVjakF6TzF2RmZfN0l3X19zUGNCanhqWVFUZXZXSjl6YXhiU3RBNFhHZG54WVAyZmNVSHVaU3Z6Q2FxQVg1RnRIT2x6OFlfQVU2cEpLNUlDX1ByLXMxQ3NCM1hKelhjRVk5UWdaeVBVS0VLSWxEQVpnY2lxXzc2MGRkc3dDSGpNUVlpR0I0dEhwLWtRS1VIZGxEZnoyTk9VbzFUb08wMXBzRHdsazJiMkdQNXpWbF83ekhORkZDY3pwZ2Fjdkh1MGYwRzJHTmsyVEVKMktUeXJzMk5GYVV5dEttbUpyQkJ1V01aMjFidUFRek5paFZMTWRXS0d4NXllU1Azdy1WSFlPNTNEUU5EbDQwaVR1ZjkwVjcyYUwwSjFFRWFPNVZnRUlZbGpTRnN1MHBTbWlzZlVhOGxBWWhNNjVjM21OcUlESVkyR0w2cmZibjQxSm1mTXlIT01lUnNlMzB0RVhkWDEtOUpsMGdtVjVtT3VadUk0ZnFlckM4TERaa0NYcS10MS1OTWpEcnJHcHJCVUlHYTR3ZThiYVVxRi1fbWs2bVQwYm5fR21EWm5mZ2pKUDdfRGhWei1Vb092b3ZLRnU1YjR5TTRJazlmTDF0NHFHQnplVUIwUFNUNnhNa3dBQmF6RExfY0txenBVWmtOaVpaRHJoLVlqYzZjVC0ycnhKSGVfbUV3dkFEZS1kdzd5X0NWaTlEcFNuejZrNTRPRlJCOEdsV0ZpZnlzWjVzYzRuSTFQcHpYVFdzNjBndHJYVVBiTEdSeWdLOUFlSFozNlJMQWNPNWl0WjNLUFhJbkxtTk14cUNsWWtNRTMyeS1wV25fVmlucXk2dDgxX0NBQ1pnN0pZRWNjVzR6TnRSNDF5U3FRX0pUVDlCWW9VTVdVV1BBZkhSWHJ5dHJ2ZFF5S2JBaDl3RTBJblc4dzRQSUJPTGZRWmljOG9LWG5EUTNFaTYzT1NYcDhPZVZsZy1FOUF6QW9WQmhMN2pCVXVLZEN1ekdYTHo1Sm5YRTRhb0RIR09fQ3N5MFFFbl9oNmNMTFJaTUhONVVQQ1Q5T0g2T19INEdxdEdvMEd5NWVkaWV6YzdQTW5IdFNEcFRyMnFDVjZlWHY2Zm8wMHBIbUJlZFJ2bmlIT0dNUThZbjFXTVZydXp1c2d4TjR2VGlZdXJNSU5LSG5EU0hKYXd3dUtCVW5KbXdpTER5YXFWLVh4dzVwWnpNSzJsNDdZcG80ZkJCdzBWcDJ6WkRQSkc4M3Z6dE43cm1QMnIxWGhzZ0IxZmFNcXZERGJ2WDBSemRjMWd3cUhXRlN3aDh2b0JQSENSTDMySzVzOVU1T3ViUE5SR3FvWXVaTzZmdkVlZE41Yk1WVWZvLXVjTjRmRjFVVUY1YUxZMGNQZllJT1BObWx2Znh5VHBUNjFVeXp4M2RvN1pySjluXzlobmloNXlRX2ZRSzBFdTBpYmsxZ29rYVA1aUE4N1YzdTZENV80N0lyamdKZElSaFNxV2lGa29oc0hDak5iZjB4ZVowclppdHRxcnVlakdlVEowMUJPNXRISGF4UnZuQmd3UkdhUFFTTjZzcUlFSXNidDEtakRsM2t3QXdfeUdqeHRidEJLVVA1aTM0eWFCclB6UlV0WVR2b1JDeGpocjFjTFlxZEtjeC1RZ0F1dmhsS29PemN4dndtYWkyTTFiNVdLU21qd1hINDJWdDRwZ2FfX1dxVzVrMlNaQV9QLUVVZ3ZBRmwwQ0xPMm1tQTZyU3JvWTd2UzhIVEh3elMxbDQ4Vk1hQXZWelhmYW8xRllxUVM1UUFLS1I5WXlhOE1DdFhvT1lIVUJ3anVldjF5OXZpNUJnbXFXU2FtQnA2eUQzQ1VBNTFORDdiQjF5dm9mVlQ5enZRWC1aTGVidXNLSlFZczJXbXcteXd2c3p0WWdNQ1VPZG9KVUVyZEUtZUpTOFJfSFJUb01IT1JsYXV2NzlnVXRuZ0xMZXZHSGpwLWg5R1hQd2hyT0FQQlVNbGs4TmNLUDBONGNRNzVncTVVc1dhb2duc09neHFXNmJCYlZhYTItdTgxSTRGX3hMS05MUzNzNmMxWHJ6Zk5fSm05dUtmaUVhVmhWMDJ5bWVCQVVBclNaZUdyWk8xUnI4SUJGWmpLU0hGNno3WUJRblp5RFlsZEQwdXhZU21IbS15bGY2TGY4WHdHZ0M0N0R6S05hZ1VCSVl3UjY5SVVKU2pmTFY4QjF4V2N5ZUFXdElIcGIwUG12bVJ3VnZlYVV5OU1zZGJpbVJYM2EycXlIU0RKcW9ZUmpZZ213bmEzbTN5Q2huLS0ydjRDSTNhZ21BVjFMN3ViVXhEb2QzNFd6QVlBazVjX3BzSjRuZDhuOEhyVW1WNlBoT09SeWY2SmxsRE1zT1BRTnNiUXQ3X0pSSXJ4dDRZbEJYZ2ZzUHByUm5GbFM2WHFXTXRUUHN2WXJqQ1NDZjFmbUxTcTl1MkRvNVZqbjBISThTbzZKODBPSkVBMzhXWTBrdGFsVnNQMTY1WlJKRm1PWXFOQzN2S2tGNmNRd1FDd2NPakZ3eWtLOXN2OFJxVVNiN01UdEtZZk1ncUpXUjBOV3lnblJfU1FybHNaSVRqN0lqVFM3bGhoeUx4TjJLX29Sd1hxTWV1UDlmUHR4enNQTGd5TDhaMVVpalFqbzdaMFFGVWs3eldWZDd3VEIwbWFidW5DY3NJdGN3d1A2RmNzdjh2R1JZUG8wWTM4UGYzS29pTFJjOEVmdXpDYXNDeG81NVpUYWllZmFjWmZQV2c2TmNKZHR1NFBFalNCZkV0WFBGSFhJNndqbERyMGRKeFhmMXNld2tvYVdzZzY5UHRDUGwzZC1aWVFxMjY0QmZ3VFIyWU9fUnRqMXYyX2N2LTFjeDl3eXlOME9wUzM3QmU5ZHlXMWJ0XzNna0l1NWU4T2dSQVczOGdKSGFxZFdQbVRrQVNFc2J0WDJnMVZGVmpKWGJQcUt2R2YtTElqQzh3amJfQmJxTkluc2dfdUNJazR3TDlMNEEuUnVGcXhfMGVTSUl4NVpYT3NtQTlFZw==","password":null,"hsmProviderId":0},{"id":7,"alias":"Generated: AGENT","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uRlZsSF95UUxtNnNrZVh2eFFfNG5idy5lYkdtdk9zUWdaRUFpc2phUW44aUJnQ0NTSUZjU1Rzem9jUjRJMHBkSHU1dFo0RFFSN3pMamRnd05xeWlXWEtuWHZsQWRrbGVOQ18xaFdjakdPRHRkaG1hT1FEMUV1b3dMMGY1S2hxbWstX1FMekZCa05jVDlBYjE2c2lOZ1JGSXdBeUNOMFhtaEpJTXZvZktsOU8yQXMzVUtMZkd2ekExbi1FR1pNSmJtdmNaMDhYdHZFRzQ2V0J3cTZPaEdVUVV0cXpPaTkyOUZrd2huWkhqeFRWMWs1SmJTdWQ2b3AtMEhCVW5VbmxvQ09Lb0xZQkRrWTE1c04zam1jcjJsZWFpOFRhQnJzdHRSdng1ZE1jXzViZUtXLXRfVTBQREpQaFpRdE1GaVM2a1RtbW5Ba3dqd1Z0d1l1d01YVURjS2JtNER0Z2tKQTdSRmMwaXZMM19QVGVVcHRmbVFyT2Jhb2dNemlJcTNZLXhMMTNwdzlJaUU4VVhCQUI0bzlPRGN2NkUtNEVlZ1V6bWxTSmE2YW1rYUFORmtabDFLakFJU0RzZkRrNFNMTERUVDVlZVZldVM4ZFE0X1drV3ByZjF1REZkWWdZTDViXzFRODdXQy0tZEdvTzZzeVQ0blBKdEczSS1zMHNSVGxqWk1yNFlwQndub19Sd1Zud2VnbER1YmpobWVuYW9TMVRSTXAtdlBla0ZCWWE3TnhOT1Rsa2JxbmVzVEZ5QjFYa0xFRGRZM051YUl4dHBZamlVNGEzenFiNUh6aWl5cWx5YU5jbVR3X3BZX21pLVQ5bThadVhxbUFuR0s3MkVabVdDVmVlQTQzTTByWldsZHFvSzJSZlRkaDlIbjcySDU4MWJvVUlTUXdMaUtSTXBoZExNbDE5QUVvbU91R0pnSEo0N09QbWtUYWtiai03Ulg4NXZDd0hqQkMtaUxWVGhpVXk2Y1YzSHZ2ajF6YlphMmg3T05QMlZhSXc0SzRqWW5LQ09LTWZSVGhPMWNNYllCUFlKdE9yTl9XdkVLX1kzVzczdmxjcUs4Ry0wSmxTdUlpVFIxMDVXY3FiYmthbXRGNlJHbEdBUVJqT0ZERUotZTh3emdncUVrVWRNQ1NIb295bDBrSTVjb0RNRXZJTW9Hc2RKcUMtZUJGN0hqaDhrS0RQdlExckZ2bWg1aHZUMHIyNUdyMHROeTZyQVJZUURYUVlCeVYxWnd5TEZNZkxrMDFkY05peEVNUFpQTnN5dm1Ha0U3VFJmSHA5bGdxOTNJUDRFRE1ZTXctUVJCMjU3eEJPeFF3VTZTa3hLeEhKMk40OWI0ZkRyWTRUamxZS2NPdTFXbVdFNjJGUUxDbnB4djRZU2dlNmwyaUhuNUxsemtSbE91eU14TEN6MTNMZlRTcWlMc2JYd0xSSEN5QzV3UkcyMTYtOE56S1JiNmU3TlNJaThNRVFZQ05kQ3JSQ1V2Q1Q3RHhFaWYzVDNnQlI3eFlKb2tVM0xYRTAtdl9fUW5vcy0tUlp2OC05NmJVU0kzLU9WckJQX1ZkdHR2S0R5X1FGQTNualVqOGthdnJEUUdqdWZjWVA2ZEp6UmFpNko3RWZfNUV5ODdMTDk1R0VvQ0duTUREclplMUtjMGtiZW5nZGlpMF9BOWVCWW1lVVFfQ2FIZFozOHB3TnRHcHRseWlNaldITUx1OHpvdUVBUmJtLWJTTjl6ZVZ5enl3MHRpRElVUWQ1OFlZcnFZQW12bGFaRm5XSFpyUTNWQWJqSVFEb1FydEZRc3JmWWRVVXZUcF8zM0xSZDNsS0VGYXBncklHNVVjWllsR3Y4RWdwWnducXJUS21JSWpQUjRWWUhLVVVMMWlOV3A1MUZmT21sV204VjlZbDNWTXBURms3QV9RQ1F2UUZNbmZMYWgxMUptUE9xMFFqZTJEQkFScEpTUkc4bm1nZ1FTSDA0QmJGRFQwSERia183SGtKSnFDbnQ2bHdPeUZPU1RpVDJCdDQydWM3aHdGRUVINjlZVUNZRDdWNHhEbm1NMTAwMHRfMHctQTZUbllNTmdQTGRuZXFMWVFFRmRwUUh1cTZjU3VweE1uTl9KcjdUeWJKQlNsM3ZKWnRSSXd3dkQtc2J0ZGt0Q1VCRmRHUExmaURoQUw3eVhjczJYdE9pWHhiRlczdWViUDd5ZEhSbDE0QzlnQm9ONTVhS1YybG53V183NFZTVWRrUGNjc0RjLVlVX3dSU0tDNUNiZE4yamF5dVc1MTVzSFFYNTZwc1pIaEljSDVxb1BqbkFLd0JRLVdLZTJJYjlvNF9ZdUZicndMRXJKX0pFeGFLMWMtSjZKTV80b1pwUXhzQldHTDdXQlVxbXB0NFBjM3drdW9ENHVmSHJ6VHlmcmZDc2IxZUZBQ0FFRDZ3UkJzY0VMWUNtMndaTlI1SXVYZmZtMDVkODJ5bFRkQ2hYNWZtck14RXozTC1UdnZzT2JYbFdjT2VPQWFmcy1kcjhrOXNCMm94b090WlNEYzJERnAyRUNLTTh1N1R5dExKNzB2RkxyNXhPSHJPa1ROZG9TNHBTdzZVWEx0WXljeUY3XzBjWk9sOGp0a1JnSDRjRFZ0WkJHS2ZMZUQzSkhpMkZ4Y2plWlRMSi05dmttdGxlcjdabDY4Nlc0cGxuY01qTlJmZ3NwOVZJaE51OVhBRmlyM1k3dzRYd0ZfMmxleWV4S0lvZGQ1Ny1wUnRYeE9ybnNVSzBrMzNqSkR2NWhLTzFfM0E0b3QxSzJOcTFjZzVvM0RfdDhrZWdnM25BNkdGRDRnSnA4TWxVUmtiVi1GNTYtb0RlOWU0TzFVX1hVanF3dWk0Vm1GZHVFNjd5TnVUc3NSdE1hWWkwRUdtTUtfUDNIYndqanZoR2lueGZHT3FGSTNBRzRjNHpPOXlXTVVTWHNDejFnRWhSMHo1MkZYRHNsMGZ3dEctUzNrOEh1YnhFN0t4NGUwTlBnX1VIcU41NUpfSlRNazFCUVczang1ZDRNU2NMcWJWaUczRUY2b2F4d1FnMjNPT2tTWG1sRzcxZk5PRzlQZWY2TDVmcERVN1NnQ2FOMk1rb2xmbVVPYUVSV2lNNmZPU1RqcUN6aU1nbDUxZ21LcHhMZTc4YnBPeTNyWGJ6eHItY25vaWQ1MHR6VFBQYzloTUVsdWNJcXhTbVZGMXdyTEhWZWNTRGVhcVRDWTVuck9NMFBhc2xyckJKZGlQQXNzQUtaV1VKa0l6SEZqT1owdkRmZEVaYWd2MlQ2REQ4Um1IVHRqeVh4aURabDU4WXM5ZTk3UTItOUVhWVcxeGhkbVVkQzNXeUdCSEZWeWEtLWpHY2gzNDM0S1RPUTZkcHFwZ0pFd0VMZmVvNzZaYnN4MHJYTjV5TWVBS2xwZmhlZGt2cURxcjBJUHFPaVRFdTNMWml3blhkQjF0UXM5ZVpQcXdTc1BPSjFkbVU4dmZSc2g0NjBZbUxUWUJHQ29GY2xUMm5SaVVnMUU4VjhpRWM3NmI5cG1taThWYnJfWmhJU3hnbks2VnlIQnZUQWZMN1d6WDVUcHQzMjluWGpYWlRLWWZPX0dULWhjcndMTkVYOTI0Z3haOUhBVEFBTFFwWG9LdGZQcm1ZVkRQSnVNem85dkJBYnJySmRJRjJtaVZ3UlRMMWRkNG5weVVmSUlnSnBQVDdkVmo2bEJDbWZ4eG43RkVuUTE5dWFGcF9na2I0UUx0VkhNWml0ZV83YmpWMDNfb0IxRGg1MFgyNG1zdERJd1ZLS3B3bkRFMmdyVzlnYkU5NVhObWJMSVdtMGpqUVhNUjJDcXZydlBtbWpzdU51Rlltc0VzeGZybEFGY1VtZVdHVlRiMkdlSE1CaWdnY2lQcDJhUS1SaU1jNWk0MW1QMXZNQjR0ZjZpaThkZmFFSzVfTThUN2d2d1VzNG5uUURlQWt1SXQyWF95Zm1mMVFYWm53TDYxVnlOWnhaa3FtSlFnTUVSOUpTOElFRlBCTzJPajdhdGVfX3J5RV81Ymt6YlJwaTd3TFhITm1EdW05bWRQSmtIVHpQZ2dQbXhZZ1BuQTlPdURhYlJjdl9nV3JvdExweUFOSEJfem0za0lQY1FBMU9hMUNKUGgzbzFoWW56OUpfWnBPNlRiMjVLNVVtaWZhWUd4STk1aHR3ZTV1aThYQVdrS0Z0VjNTcnJBTXdkUUdyR05QZWNsd3cwNWxBemZQTHdkWjZUR2ZhbnBPZVE5c0txc21PNFhISTlVNkZkOWhsLXRaREVDdWdEN0RmUl92bDh5cFF3aHN2U0tOcjFaSXRiWFIwNWtXZmFmUHBLeHM2c1RvdUcwVkpHckxxbnhDMVpGYVhRbU5Hc0ZIb1hud0FQcVdhd1FEa2FmNzNnN19vUmVaaktXdXZSUkVaY2ZIRGF4OUhwNnl6M2JCTTJ1eUxBaEpOb0NyeERYSE52OFp0SUtTUmhCX19kaGxaak9qQWU0QURkMU00S21BRmtUMThFaXVNb3RmeXRWOWdlLU5LSFJGcHFabDRnaWpoNGFKa1ZtWlhqQWs0SEFOYWJuM0dpeS1MbWlvZUU0RjgtUjJZYld0bk96bjYyTzUxOFFFQzVLQWtWMTdGd1c4N3BUS3ZySjh3azJTa2RvRUt0dVptanZBeVZNQjFSYUt5RlhUWHAxRzV6NnNpaWV4bS0ta2UwNWFEWGpZcDk0OGlnZ1NGVjF1SFhDTzZHZzEwcW1HVnN2bmhseEZCVHNpZ2o2RmFhTEdGOXpRdFNaeUxQeldYRjhfZ1lzd21TNUVUalRwVGpaR0JsMGtMbS14aXVOTXQ1Nll0eG9PX0EuTG1OeHRqTzEzM29iSnBQa2s5TG5sUQ==","password":null,"hsmProviderId":0},{"id":8,"alias":"Generated: ENGINE","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uM1ZmUkRiMVV1azAtQV9LNlN0TXJ2dy5yRHc0VFJNVlk1VEZtdVY2Y3NOdm9NNmUwNEpMRlVlazRaUmZlNGczSTlOakYtUU44U2JSMjA4TWZWZ0NOZHdMZE9XZGxEaUo0bDQwZ1N3bU14c0Rycll5QnZ0cldjM3R1VDl3SUpJNjNyeEdXTWlIdXFiX19obTBJMXlHeTFteVAyNWVjUmtRRW9ObWs1eFVEUjlvZ3lSb2MtSlVzdGdGTE5vVHBhWDhHdFFHY044dURaQ3BiQmV2Q2ZkUnNId281anRsVXdLRTRWUmQydEZqVnpRZXQwak9vZVdBR0pNR01Vc2hxZDNYWGhMampfMXA2N01QU0NvNzFoX1M2eXpscldlZGZOc2h3YW16VlNzb2JhbFE3NjlKNWtEczlIcXNUN0h1cjhYTlRvRldqQTduVFRfM1hoTms1ZnEtSmxfX0E4c0o1a1NZeDBjOVk3VTY1d0ZzSUktYkZ6T3RBajdOZWRGZzFpZUlQbmNCR3hjd2pKMWJsV1VJVjliRjJ0Y1dGcVBXOThuQTRIclpfUW9BUjhtZ2tWQm9GQ2xzRTV4M0dQWm1VQTFuaXRvZWdwb3RQOEJMVUZjUU1GSXo5czZfX0ZmWVcyZWVCQkRNRnRGQ05TbFZDLXlPMmRuVG0xYlFpSUNNdkJPOEtUOE4zQjloOExfZWRhQl9EVHR0WjVmd1NDQVhabHJzUmdfZXo4cWZtYnpSamRoeHZmOTJ1QXhLc213ZEpmNGx1MFNmSWdnazFvenNhN2VBNGVfQ0l2ZEwxTlp4enptYzl5UGRHTkVwOHhLWTVsYUg0am1ma1BXZGdsWW5sZHI0Q2cta1cyNE5iRndlMm1lMzFsUm9Wa3BGN3hfLW5xOFhqbElwb19BWWxiRWp1Zy1HVExxOWsyb0g3Y2JVRldsVS1zQlZpYWFkRGVpX19xU2hYZUNTMEVKcjRJT3VlTkUtOGpkU25WSk9Pd3ZHbkFmaFNVYlZ4bFVBSWVhcnJIUkxLeFNCOXlhOHh3TlItREVSa2YtaWZwd2RQcURkNGd5bk0tVTVPVm5jUy1qeXRXcVNudmV2X1hIZ01qUW9paDFWOGlfOHRFOHJQVWJ2cHh6MFNRcVVOcmRoNlRwWURnRVl5c1I1LThGZTR1OE1TaEROYlNiangyQ254VjdDelJybnNVUlAyQkc1a3Q5OUFyZl82aW1PakxQTHV1dTdrWU9rV3hXaEg2bVQ5Ynl2blhQOUpuS3pVekJibkJJOWhiUWVjTFNBRTA2RmFoYUZpVndWMjY2NUt1ZEtQNFJsQ3hpanZ6TkFQWExPd2daVUJfM1FGMVBPTHRRc2wySjBkMURmYUNvSHlQV290VVhReDdxZ0lKUlJUOUFjcFBMZ09zZ2hRS3JjbU8yRzF5dExHQTl2UzIwM3JJcDF0ZFo2Q2thZGpTTUh3eW1FeVVlS1FWSXM3bXVhVmdIQnRocXpTQkM0b0JVQk5SVW9ZSC1PUHZGMUgwbGFJZ1R2XzFkcnRwR3FmNk92VWNSdllZWnQyNjlvOUwwcVNDUHlKY05EWnZVa0RaV2tFQllERmNVazhGSUpmOVJKVDNOV0l1dF9VT1haVFR2MTVfYXprTlpwdTBaYmwyV3E0ek16U1lIZmYtUWxMTDN2d25Fc3ZvcmZlNTZtMUlpcE9DX1A2N1hRVkdDdkxFWC10aGNqZ2p2SzgzMVdLUksyRGNGQzJfRExPU2lDQTlZVS00cGU4M1JNVHpUdlZES3AySU1oRVVaTzU5WUNmVmRfa2VRaEdFazlLS1o0bDQzdUk0ZktRVVBrSHdHMUlENXNqaGUwVzJsckEwczIxbUFKRG9wRUpjZm53ZTVPeVc2YzBqRWJsd2VaMzd6Q1loOTg0UzREN19rSTBZNUNMNGdHZHRhbGZDcGhlNUZTQll2dXpsR0laSzhmVWtsREVXbFhNTEFHZFhLcWFfd090bFVENkY1NlZEckFaUXgyb3l1M2VpdFEzdXdHOHlJaS1BYW9IanBoLXRZSnZ6MmxFSmUtSFJ4VDhPWnB1OW5CbGpWUjM5YjVRcjZiYTVNOU9PWnQ0Z0N3R3ktZ0ZHVFZCOFBCSERLb0JscElfYVhnYUtxNkdXR3EtMnFWMzdySmxVRVhPTnU2dE1KeHdORFUybHFVOFNIQUV6WWkwTWZzajNPWFNGYVhjY3JTTnYwVHdVMWNCWHFiNDJseTZEUms5OFB4enBPOFNoZlAwY2tjeE1PcnU5VHppRHV0djRhNWh1bGNLYi1ZTjZkOWdUNmlaYzA2YU5UWGVoTjFRTGRLZ0ZBMnpsX3h5T3VmQklJYkt4U1ZGLW9FZHRsZjhTXzBsMFJrcFVVRjlSWEhwR2NDWFI1UnBLblhfdERwVFVZaXNRR0o4eG1jbTVBM0ptZTBDWFMybHh0Y3VyZ2lXX3JiSjVSNTloNFhpTzZRdUhXWWZDM1BHVTF0TlZZN0tzUVdFcWtXbWtndFNQbzZtbUdFODZGbG45YlAtSWZmSTdjc3gtdm16SnhnZmNESkkxZ0d4QVg0ZG0zUG5UWDZQWlRtcnNacDR5bVZhU1lPZWJrMHZsTkszbVZVUGZoQzJjZ0tyajVVRTEzeEozYklFM0FQN0pBWEc4STZaM2l0N0ZpY3NTdmw2aUxtUjQtWmktdDdwUmtHdlptbUJZTW53b2E3MUhYRGVkRWUtZHFJendPa05tdldfbjRrUEdQOTFuQl9qZjdwdjFOekYxVDNCTnR1azYwWXV1azAwVkNnZ3FjREhYMFV5MkRrR0VHNUc1d1hVN3NBdEdSLWZrR3NpVmh2ejVNSVJnNEpWenFlTkN6R1NTSGtlQ0g4SFBOMHRVSW1fR2FIajJCV2g2R2JDeGdjTEF2cERLZ2JZbUJ6NTNKTm55c1hlLVRRa2tGeUlrOUlqSFRUVTloRjc4YmxxcmxNbFQ5OWJqN0VaRHE0UU5wYlBXZ3o3eGlOSHF3MHNXZ281QUhKWFZhM3dRXzVnMzV2ZkRERlMxcnk4RDZBUXBkZ2owbDdIOWRCRHdwa1lOcnhEV2FBSEx0SG9BZ3JMWi1IX3BPeDR6M0hrUTNhNlpueC1SUFFaQmlPLXlTLTVzM1BOd0hVVF8yNU5KVWZ4WFpuUnc1OGgxTHl3V2xxb1NNaS1GLXhYUTJOSzR5MTZWTmJnWUlRNGEteG5lX0lJTlp0aElaeE15WnV2TFFCS1hkUDdtMThfQkk3OXQtTkJFRnJjTE4tTjQ4N1JTZlF5TU1JMVRCajFrSWlFUmw3WGdNUUpaSXFnMFpNU2p1bV9CR0dEdWJ6NGo5QV9rSG5hVHNsRTB5WUZ0a2lpTl96ZmRYYnpSV1hVR01MeHVmTWcwYUhFZlFBV3RWUW9JX2lVeE1BSjdKazhNUk9kYm5Ed3EzM0k4SWN6SnJhOFdzNElEdndMZjBIb0pyejd2d3l4YjdKVjNDUFVzVjByQW5CZmZ1ZmdBbFRuTDFPWUREcV9aVXFzYlNFdm9fT2JfMDN2R0ZHYXc5TGdyd2hsTzJibzBaWnhSYTRKWG5aeFdoc29qUGt3cWo0VDlZSUpnMUZEUm1pYU9lTEgyZHYzYklOUnV2ZVNMQlY0ZVc5ZnplSEEtTGdFLUl6YUtsR09lWE5uV0JPNWlIT2hMTThaWTljRDRTY19TTlB2WVE0NW05TkZrZlZYZzFOeFJKdHFfdGwzMjFvbEdQbnU3Z1hCSVdnRkJVTDFkdWRxRzd2eUZZVUdGTmxHd0FnT3NsSVhNYTNEU1hKZlBsUzNtWW5HZWhKZ3d0NzZzOU5pd1lHNTI2dUZpXy1FZEVqX0FfTEFaUWNxODdHNEVONWVEcmxXeFd3Y3E1bDZwLWZnaW1Jazh5dzdaM21RWFR4MDZLUEtnZVhqcllfRmFBOVZzTU9oelh2ZzVScGVsb3hKTlRLTGdrbXdsYlduY196Q3RlTjVZazNOblhfMTBZZDFXZ2JhZ1ZjSUNnUGMxOGJIVVlocHBtVFg5eVZZN1k2NU13STZoeFJicVpCSU1iTjBaR3lBb3k3ZDEyMkl4a0dYZTNkTl95blNVYTFZaXVhTTdORXZCRWIzT2JjTVBFWWNpZXJSTUQyWVJiOGt5cGlINjRqOFhNeDVEY1lYMlpfUjZGNXNKV0pON05OcjhKY1AxTF9uNGRzV0tJSXhwWVp6dGJ1YUNoM2dsT2lERW42WXYzRndFd09uSXVmTEZUNXlQWk5DVnExckNvaUYzckMwX2podmhnVXhJcjNtZGVNSW1YR2w5c3JuOU9kZUhUUjFtZV9MSXQySXFrTlU5aHVqRHVqNy1SV3hrMXhnTE5fTzY4djVHeUVzalFtU2NOaGhCRHlVU0JhLUtFMnU1VW54dklIMzJKb0phSzlkSTBINFlhWElrUFhjNjhrUXh0T3drTHJ6T0xNZGk3RWI0ZDM2TDNlSTRUTU1uTWxoUzMwNkJvRURBTWdIdVh6UktSM3ZiRU1sQ240QnNjY2Z1RzZCcE10VzFaTVVoeU9QaDhBeWJKTkpEUU9HT0FJbDRNODNCR05OSWxyZzg4WDBlOTNkMklMbE9BTk5JNGg1UHNBYm9TaWk0OEF3M2lydUVyRkFaT01lLS16ckR2cEJXOWpJSWc3SWVUT2VYeEhiMzh1blIwc2N5bEU3X0JMWEg5WlNoZEtFNkpLczZpejVRYm0zWTljRE0zUGsyR0k0cEM0YXZQSUZxMFZxX1RHNjU0MjRiSW9FaDZFNGREY01qMEFuS3NacnVzS1NUeHV1Mlo1MXdXWk1LMW5mYU14ZDlBRTB2WUdzcHpEZ0Euanh5N3VvNmxLek9TdzQybldWV2JLUQ==","password":null,"hsmProviderId":0},{"id":9,"alias":"pingaccess-console","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uNk0xRmpUd1lHSElCX0h5eEVwY0lXZy5KRVRhaXVQSDJyR0lFYXhsTjZnOWVnZWdBZUFValVMN3lGN3h0MlUtWkxCeFBRTW5HbUUtY2VUd3k4RnRYS2R2Rng3dUhKcnNPTER2eEoyUm4tZ045c1FWT2UyamtQVXRULUdtUEozdmxya0Z3b3FiaFhmMjZjRVA0bFRWZnltcUFTVWh2Y3ZlNUFmNGV1SnpibkF6eWxKTURKTmpUM1J4ekg2d2lXcFNRdEx1ZGh1OXVjQTZEb2h5eHdHbXVuTUZWYXduSDc3LVBIdDRoUndPTlFIMk00Z2hGdGJOTllqaWlGY1gtcmV0ckZ1MW9NbHluUW9Ba1F2X0FHbUxoa2s0dVltcHpINHZjWWlVQzl4LUplalkyc28xM2dqRXU4dXdONVVidDhTRjROYlltQVJpX3gtTkVyZDF6QnNGQ0RjQ0RWYkdmVmNaZ3J4U1o2VE9XVTJRWFdkZldMVDMwV25aY0stbWQyS0pvQlMtcHpXWlU3bTU2bFo1UWRPcDdqTUhueWwwRVhlbmQ4d0hON3VKVXpEU210b2NRS2lTX1RKTXp6WlpiSnF4YlExTjN4YlQwVGpMWGQ0b1JyTVpHbkRGMEd1TXRwZVRVQ21QamJYWjZqRG5fM3NKdU80R2V2VDJLTUxIb0lQMGFYRGk0d0YwZ2xrNHg0S0JENU1seXZsa292MUlBVVNKU3M1Z2ZtM0hyZmUzdFloODRVbGZ6TjJfN3M3NlhUTFRZUE9VRVE3aWMwVng2eXFaQUdsOHA4RTZZNDJuZnA5Zlk2WkVreWdJZUd6X3pUaFFUYU1OVTBuYTNoTU5OOWdZR0dhVWU5cWUzZmVXdXNEYVlwR3ByazJKaFFZLXVRSjZfOVQ0YkJfUE41Z3pPLTdJZ01Tam5pVHJLaG8tQ1F2UkdYdzdFX21ETU9zQ2psSkQzY3dabE9mY1dKVGt4SE5PWC1XVmxmQmFNdGc3cEdkNmVRTzNFYXM3R19yWHFCZWltbi1EdjBZcXhoYm84alRjenlXbVVnaFVaZHpGQjN5WVd1ZTJTRjl4RURMV2NWLUdIWGRtR2dDdllESk13Tm1XS3c2ek1vTHhaMmE4SlBQbDg3T0RyaGFhazN0MnBGeE5Gc1ZhUi1lMC10NGZ1OXMxcWkyWnZvdnlYSzUtOU9Ob0JHUjl1aFlfeDU2eGFrX1VuVEg3cXBQNEIxaTZTeklpMFlic09EeFE3VVdNeS1xdWRrWXFNVGFsMVFjcnlfQjBaLUxJdWZ1V1JMbWFTRjlxSEtweUhBX0FtMV9RVFBkVHhJMzUzQ0JBbG1ocGlHbmZ2VGRYeEdHeV82N1VMVEU2QThmWnB6ajlwcXYzQlZaQk5CTE5DNkdyUG4xNkQtLWtBU2cwX0FweWVHa21aWGpOcHBscFVMUXRhLW5UcGhuOXdRWHVyY19UYXAzWmZfbXNWQnEtN0ZZeFp4QS14SHZsa05takUwblhBTFhmQTZKWDdVSTFOeWQ5Q0xhRndPb2U3U2dKS0ZhWi1IeGpiMzUwMXNHRHBmbk85TDQ5bHlNdDB2RmF6SXg4MVlxZHl0RTNaVlVHcDlJazRFMlpfRWZaeExxdm8tMnhMX1daOVJEOEhkdFdZa0Q0UkZMd01zMlBVVGx3ZkMwYlNRN1FJbmI3dHh4eU5PQUNNcndrUE5YdV96VTBqWXotQjlKV0lsX3ZsWDFobVpyVjFZcnFFYzRFRnpDYVpqNmZFdHBHMDBYeEZkQ1VVSFkzOTRwaGVkQTRVcHotOUkwS1JKR29OM3ZyZldMcWYxNVBQSUUxVDJSeTF6eFZid1RiYWdrN2NLSWxKSXVQS1djcTgwblNkYklQTHkzWll4YjhZZlMtX0ktU2s4d0F5d1VjenkwRlVFb0RidGxyaG0yXzlMYjhtdVB4a01qb1prWDR4c1JZWWpnVTFXNHZKZlRRYmNLdnFSZHM4X0hsVVMwb1FkYTRZWXNEak9yQXRrdHVtUWF4cWpzU0xqN3RwekwydzlsUExmVEF2RWZIOTN0TzRXM29qdnVPeVUzbUhrWHVwNHprTjhFUS0xdnY4c3BzSDlTWkRITzBTSHhldFpiTHlVS2ZBdk5odUUxdmgyWmZTY1RKUXFEMHZTeFY0N0pKeDdoVnByS2NuelNOWU5PTWZGMFdXMnFGRE1lbGRvZ0NPRFlhbzV6XzJaRzgxTTVtSjZRY3RBUnpfVlg0a012aVNIZTA0dXZWNU1TRkVIMWNIc2REcG1hUUVxbjZZOC12Ni1aR0txVVAyWEljcmNYZFZuUklIUUh0VnFORlQ4Rk8wLTMtVVltZEVNTnZyemdERXFrNmdMd045WTRUbjhnV2xkcndpVll3YU1rOVk4MUdWQzV5Y2ZIMWZZeFlHU2lXc1ZfXzY5RGxMM3hjalhWQWhsTml4ZC04ejR6Y0tnUmRob0dLTU12aDYwZlVZUmtXeUpxVEd4WmUzVGFQWm5qSFllMjZMQXdVdVZLRFNUeVZLRGMwZWVENnlEb0RTTkdJeE50Q3M0ZGpYRkhtX25tN3V3WFdsRkQ5T1ZyWFZFUmFmOXBzSzY4Yzg1RkdkU1MwYTFxYlluLTBGOXRwSzluaGViXzNqblJSblZBaG94bW9fSVpZYmo3X2FIUXI0S3gySFVyMXktemtRMzJXdFhRbktrY1k4QUp2M2pnSUNFN09ENjNfTG0xZmtNWmR0Z0dGanA3ZXQteEgtc3lORy1paE5PRnJaR1MycndjSE8zaUxFQVl3TmdIVk1GQTB4X3Y2bnQwTFYwbWozVVpSWkxMS2djcFdKdTFKdTNCS2h4M3VfdUd6VWNrYUJoemFUZ1FzaDJpTC1KaGFldzBsOEdUeWQ0WFVFc0RYVlhKTkNvbnJYbS1HSTM2WVFVbGZWbzRBNFFvWWc5NklvcFItblRnaTJnakZuUFdnRGNYenc3d2RhQzNOaDJ4TV9XeUJQSjZtb3Zoc1o3NHgxZ0FYX2JVY3F4Mm1JdWNLdWhGNkpBQmllQ0dJS3NsZ3E4cmZDcGh4MWxLQWFnbEdGRV8xRk9hemNMczhhUkhrbDVyNWVkRFdrMkx3d3VEcmxhS3A2cS1RdDd1aUNZTVh5ckpoMmZ6TFpwYVdtS0txQlM2c2cwTlotbjhfVmJSRVRxZkxGZDgxY3REWFVScVEzdFdkMVczblNIOW9veWFETVQ5UjBGZ21FTVVJcGtlUXNXQV9JSEhFZHpsXzkyT1h5V2xPejV3Qk15alA4c0JHWGtaUTJKLTNiSTc4NHR0aUZkcXp5aVA0MTN5VXdIeXY0U0Y3eWcwRFRtdkQxWUhOVDBfYlFpR0p4dktRWVdXcVJCWFY5ckpwREhNdlJUWERQZGlPLXRjeWNOQ2RxRU5RSmlJcXZnSWEySXg5NXRJWlNkRFNUMTR2NnNuTUJiN0pRY1N0WEVjNnFEekVZTUswZS1WZnIxTkxmemRqUThPeDh6THRQaVJ5LVRRUDU3bnBtbmJ0cGxrdXhhQm5YdVFjSm51MEMtcWFtTWd1dTdQZVRPLXN4bXdINzNiNmd5elBKUXdVQjZJYy1NbngzcUxQMGdidXFhaGtWMUlpM1k2MnpCYlVoM3ptaVJ3Rzl6OXJjMEhOWHNPcTB1d0VNcnlGNk9VUFlVamk1TGhtZzlDbFpLMWRobWgwYzBfN3YzNjBLSVQ0SzBnemdUcVZaMUFrSzR2VnZCNVlHWXVOa2g5Z2JUYTIyeGFaTGxQWDQ5TXJNd2cyVDdET19VSkV6YjBsbFF0NWszei1DUkZjS2RrLWxXNEljeVFRY0RsUU9xa0dZTVNYZG9tQnN1bGwtdGN0eExQaTVpS3R2TEVSRUhJNTEwZ0pBTk9CaWRVdlJqUENqdVo2bVpKSHN5Ni1qdktIQ0xIaTJnMm1yZy1Yb3AwcFYxc2VuaWswVlVSX0NkNGlPdmQ3Qjk0aEU5aFlZanhIeU5yQWJtVWgzVVlOWVNHSmtOSnJlaGRoOWg4YThJbW5HSUxSUmhxSjNjbDNWQm0yMVVQcEY5bURXLVB1WGlHc0NLOWFodHZJcWVLVTJ2Wkx3MlZZYmF3eU5JSzh0ZWVrSXJxUzR5SF9KTWZSSVBjTzBvNGhpUzBvd3FZc1ZuU2RmSVR6WU0zQU90RGxwMGJ6QlJHOU94bHlMSDQ1OGJtVzB1MHZBN0Fyb2g4eloxcWdBVnpWVkxCWVNHNG9FQWgzaFBBcFRoRXBMNWpqZU9leEFpZk1TU3hpelA5N2xHSHNFWjJDQUZ3Vi0xZ2F4Q2V3RmE4RUNKeXotWEZ5cFZDVkluOGdhSkNKVy1XYU9RWlJrazh3aEtDZEk0ejRxZEw2TE9nT2poSjd5WUY3VVdFU0JVMGtZZC1ZR09CTUJVajRDY3F4RkZXbXcyZ1NkaVRGT2tkQ3pid21vR2N3MlZGR2RGMWhvNlVDYlY4NW16a3pmV0pvRUMxUll2MHBJZ1BWclZXLWJKRWN2a0s3alV4b1I2X2ktaW9uTHprMlRyekZSN1FjWWFwMHZPSnloSEJySmZpeUYzU1d1QUwtX2toV3hoNTUyUk5tX0NjbDM4LW9FUDRsS09SOVV2eDhWT2NHYmVqYW93QklFRjliR3V6cGhQSVlsU01lZEd0NldOWWxoV0VEVzg3MFM1UGdJY3A0ci1WWXM3cy1ZLXlPbkxVVU5IclV1blVVUGtkOWZWR2g3RDF3dDQtZ3YzZHlRM3kwWHdFTmR3ckppdjZYcEtqTXJBRU04WXllMkhUNG1uSnZpUjNxZWp0WjVDYjdac3ZDb3VvWFRqRy1iSDFHYmFrSS00cVFNNHRZVTdxQkFjNUJVNGhoX1k5bWx2dkRJTFdOMHNDT2JlSXFnWmUzNnhvQzc0c3ROYV82eDZKV0hRLmtqOW9YcFNDLXF5VkNkT0w3MGl2SlE=","password":null,"hsmProviderId":0},{"id":10,"alias":"ca-keypair-8963","fileData":"","password":null,"hsmProviderId":0}],"loadBalancingStrategies":[{"className":"com.pingidentity.pa.ha.lb.roundrobin.CookieBasedRoundRobinPlugin","id":2,"name":"Default Round Robin Strategy","configuration":{"stickySessionEnabled":false,"cookieName":"PA_S"}}],"oauthKeyMgmt":{"keyRollEnabled":true,"keyRollPeriodInHours":24,"signingAlgorithm":null},"pingFederate":{"targets":["pingfederate:9031"],"skipHostnameVerification":true,"expectedHostname":"","backChannelBasePath":null,"backChannelSecure":true,"useSlo":false,"host":"sso.data-holder.local","port":443,"basePath":null,"secure":true,"trustedCertificateGroupId":4,"useProxy":false,"auditLevel":"OFF"},"pingFederateOAuth":{"clientCredentials":{"clientId":"pingaccess_validator","clientSecret":{"encryptedValue":"OBF:JWE:eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2Iiwia2lkIjoiRzh3Zml0Y2t4RDNXNHl2VyJ9..DKQJykrFmkl2cNTKF_nm5Q.iltEIdfb3fbkA59Hvy8BKw.AiVfrYJgRvpjoTBfJIRglg"},"keyPairId":0,"credentialsType":"SECRET"},"cacheTokens":false,"tokenTimeToLiveSeconds":-1,"subjectAttributeName":"sub","sendAudience":false,"useTokenIntrospection":true,"accessValidatorId":1,"name":"PingFederate","clientId":"pingaccess_validator","clientSecret":{"encryptedValue":"OBF:JWE:eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2Iiwia2lkIjoiRzh3Zml0Y2t4RDNXNHl2VyJ9..DKQJykrFmkl2cNTKF_nm5Q.iltEIdfb3fbkA59Hvy8BKw.AiVfrYJgRvpjoTBfJIRglg"}},"rejectionHandlers":[{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":1,"name":"Default Web Rejection Handler","configuration":{"responseCode":403,"templateFile":"policy.error.page.template.html","contentType":"HTML"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":2,"name":"Default API Rejection Handler","configuration":{"responseCode":403,"templateFile":"oauth.error.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":3,"name":"Default Rate Limiting Rejection Handler","configuration":{"responseCode":429,"templateFile":"oauth.error.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":4,"name":"AccessDenied-InvalidHoK","configuration":{"responseCode":403,"templateFile":"oauth.error.invalidhok.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":5,"name":"AccessDenied-RequireMTLS","configuration":{"responseCode":400,"templateFile":"oauth.error.mtls.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":6,"name":"Introspect-EnforceFail","configuration":{"responseCode":200,"templateFile":"introspect.fail.json","contentType":"JSON"}}],"reservedApplication":{"contextRoot":"/pa"},"resources":[{"id":1,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":1},{"id":4,"name":"DCR Create Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/clients.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/clients.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":8}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":5,"name":"Revocation Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/revoke_token.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/revoke_token.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":6}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":6,"name":"Introspection Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/introspect.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/introspect.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":6},{"type":"Rule","id":5}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":7,"name":"UserInfo Service","methods":["*"],"pathPatterns":[{"pattern":"/idp/userinfo.openid","type":"WILDCARD"}],"pathPrefixes":["/idp/userinfo.openid"],"auditLevel":"ON","anonymous":false,"enabled":false,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":2}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":8,"name":"Token Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/token.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/token.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":1},{"type":"Rule","id":6}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":10,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":5},{"id":11,"name":"Well Known EndPoint","methods":["*"],"pathPatterns":[{"pattern":"/.well-known/openid-configuration","type":"WILDCARD"}],"pathPrefixes":["/.well-known/openid-configuration"],"auditLevel":"ON","anonymous":false,"enabled":false,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":12,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":6},{"id":13,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":7},{"id":14,"name":"DCR Management Endpoints","methods":["*"],"pathPatterns":[{"pattern":"/as/clients.oauth2/*","type":"WILDCARD"}],"pathPrefixes":["/as/clients.oauth2/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":2}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":15,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":8},{"id":16,"name":"PAR Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/par.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/par.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":17,"name":"Authorization Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/authorization.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/authorization.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":7}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":18,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":9}],"rules":[{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":1,"name":"MTLS-HoK--SendThumbprint","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"1","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import javax.xml.bind.DatatypeConverter;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.cert.CertificateEncodingException;\nimport java.security.cert.X509Certificate;\n\ndef HEADER_CERTIFICATETHUMBPRINT = \"X-CertificateThumbprint\";\n\nexc?.request?.header?.removeFields(HEADER_CERTIFICATETHUMBPRINT);\n\ndef certChain = exc?.sslData?.clientCertificateChain\nif(certChain && !certChain.isEmpty())\n{\n  exc?.request?.header?.add(HEADER_CERTIFICATETHUMBPRINT, getThumbprint(certChain));\n}\n\npass();\n\nString getThumbprint(def certList)\n        throws NoSuchAlgorithmException, CertificateEncodingException {\n\n    if(certList == null || certList.isEmpty())\n          return null;\n    \n    def cert = certList.get(0);\n          \n    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n    byte[] der = cert.getEncoded();\n    md.update(der);\n    byte[] digest = md.digest();\n    String digestHex = DatatypeConverter.printHexBinary(digest);\n    return digestHex.toLowerCase();\n\n}"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":2,"name":"MTLS-HoK-VerifyAccessToken","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"4","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import javax.xml.bind.DatatypeConverter;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.cert.CertificateEncodingException;\nimport java.security.cert.X509Certificate;\nimport java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\ndef authHeader = exc?.request?.header?.getValues(\"Authorization\");\n\ndef certChain = exc?.sslData?.clientCertificateChain\nif(certChain && !certChain.isEmpty())\n{\n  if(authHeader && authHeader?.size() == 1)\n  {\n    def token = exc?.request?.header?.getFirstValue(\"Authorization\");\n\n    if(validateThumbprint(token, certChain))\n      pass();\n    else\n      fail();\n  }\n  else\n    fail();\n}\nelse\n\tpass();\n\nboolean validateThumbprint(def token, def certList)\n{\n  if(token != null && token.startsWith(\"Bearer \"))\n  {\n    def accessToken = token.replace(\"Bearer \", \"\");\n    def cnfValue = getAccessTokenClaim(accessToken, \"cnf.x5t#S256\");\n    \n    if(cnfValue == null || cnfValue.equals(\"\"))\n    \treturn true;\n    \t\n\tdef expectedThumbprint = getThumbprint(certList);\n    \n    if(expectedThumbprint != null && cnfValue.equals(expectedThumbprint))\n      return true;\n    else\n      return false;\n  }\n  \n  return true;\n}\n\nString getThumbprint(def certList)\n        throws NoSuchAlgorithmException, CertificateEncodingException {\n\n    if(certList == null || certList.isEmpty())\n          return null;\n    \n    def cert = certList.get(0);\n          \n    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n    byte[] der = cert.getEncoded();\n    md.update(der);\n    byte[] digest = md.digest();\n    String digestHex = DatatypeConverter.printHexBinary(digest);\n    return digestHex.toLowerCase();\n\n}\n\nString getAccessTokenClaim(String accessToken, String claim)\n{\n    def accessTokenSplit = accessToken.split(\"\\\\.\");\n    def accessTokenBodyEncoded = accessTokenSplit[1];\n    def accessTokenBody = new String(Base64.getDecoder().decode(accessTokenBodyEncoded));\n  \n    return getClaimValue(accessTokenBody, claim);\n}\n\nString getClaimValue(String responseStr, String jsonPath)\n{\n    ObjectMapper mapper = new ObjectMapper();       \n    JsonNode resultObject = mapper.readTree(responseStr);\n\n    String [] splitJsonPath = jsonPath.split(\"\\\\.\");\n\n    for(String path : splitJsonPath)\n    {\n        resultObject = resultObject.findPath(path);\n    }\n\n    return resultObject.textValue();\n\n}"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":3,"name":"MTLS-RequireClientAuth","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"5","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\ndef host = exc?.request?.header?.host;\n\nif(host.equals(\"pingaccess:3000\"))\n{\n  pass();\n}\nelse\n{\n  def CDR_CLIENTID_PREFIX = \"dcr-\";\n\n  def token = exc?.request?.header?.getFirstValue(\"Authorization\");\n  def isPass = true;\n\n  def clientId = null;\n  \n  if(token)\n  \tclientId = getAccessTokenClaim(token, \"client_id\");\n\n  if(clientId == null)\n  {\n    def clientAssertion = getRequestParameter(exc?.request, \"client_assertion\");\n    if(clientAssertion != null)\n    \tclientId = getAccessTokenClaim(clientAssertion, \"sub\");\n  }\n\n  if(clientId == null)\n    clientId = getRequestParameter(exc?.request, \"client_id\");\n  \n  if(clientId == null)\n    clientId = \"\";\n\n  if(clientId.startsWith(CDR_CLIENTID_PREFIX))\n  {\n    def certChain = exc?.sslData?.clientCertificateChain;\n    if(!certChain || certChain.isEmpty())\n    isPass = false;\n  }\n\n  if(isPass)\n  pass();\n  else\n    fail();\n}\n\nString getRequestParameter(def request, def paramName)\n{\n  def postParams = request?.getPostParams();\n  if(postParams == null)\n    return null;\n  \n  if(!postParams.containsKey(paramName))\n    return null;\n  \n  return postParams.get(paramName)[0];\n}\n\nString getAccessTokenClaim(String accessToken, String claim)\n{\n    def accessTokenSplit = accessToken.split(\"\\\\.\");\n    if(accessTokenSplit.length != 3)\n      return null;\n  \n    def accessTokenBodyEncoded = accessTokenSplit[1];\n    def accessTokenBody = new String(Base64.getDecoder().decode(accessTokenBodyEncoded));\n  \n    return getClaimValue(accessTokenBody, claim);\n}\n\nString getClaimValue(String responseStr, String jsonPath)\n{\n    ObjectMapper mapper = new ObjectMapper();       \n    JsonNode resultObject = mapper.readTree(responseStr);\n\n    String [] splitJsonPath = jsonPath.split(\"\\\\.\");\n\n    for(String path : splitJsonPath)\n    {\n        resultObject = resultObject.findPath(path);\n    }\n\n    return resultObject.textValue();\n\n}"}},{"className":"com.pingidentity.pa.policy.cors.CrossOriginRequestPolicyInterceptor","id":4,"name":"CORS - Allow All","supportedDestinations":["Site","Agent"],"configuration":{"allowedOrigins":["*"],"allowCredentials":false,"allowedReqHeaders":["Authorization","Content-Type","Accept"],"exposedRespHeaders":[],"overriddenReqMethods":null,"cacheMaxAge":600}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":5,"name":"PingFederate-RestrictIntrospectRefreshToken","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"6","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"def request = exc?.request;\n\nif(\"post\".equalsIgnoreCase(request?.method?.methodName))\n{\n  def postParams = request?.getPostParams();\n  \n  if(postParams.containsKey(\"token\"))\n  {\n    def tokenValues = postParams?.get(\"token\");\n    \n    if(tokenValues.length != 1)\n    \tfail();\n    else\n    {\n      def tokenValue = tokenValues[0];\n\n      //assuming access token is a JWT\n      if(tokenValue.indexOf(\".\") > 0)\n        fail();\n      else\n      {\n        if(!postParams.containsKey(\"token_type_hint\"))\n        {\n          def bodyStr = new String(request?.body?.content);\n          bodyStr = bodyStr + \"&token_type_hint=refresh_token\";\n          request?.setBodyContent(bodyStr.getBytes());\n          pass();\n        }\n        pass();\n      }\n    }\n  }\n  else\n    anything();\n}\nelse\n  anything();"}},{"className":"com.pingidentity.pa.cdr.CDRRefreshTokenProcessor","id":6,"name":"CDR AU - Refresh Token Processor","supportedDestinations":["Site","Agent"],"configuration":{"issuer":"anybank","encryptionJWK":"{\"kty\":\"oct\",\"k\":\"Fdh9u8rINxfivbrianbbVT1u232VQBZYKx1HGAGPt2I\"}","retainAttributeList":["cdr_arrangement_id"],"tokenEndpoint":"/as/token.oauth2","introspectionEndpoint":"/as/introspect.oauth2","revocationEndpoint":"/as/revoke_token.oauth2"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":7,"name":"FAPI Conformance - Fix PKCE","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"1","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\n\nif(!exc?.response && getRequestParameter(exc?.request, \"request\") != null)\n{\n  def requestJwt = getRequestParameter(exc?.request, \"request\");\n  \n  copyRequestObjectParameters(exc?.request, requestJwt, \"code_challenge\");\n  copyRequestObjectParameters(exc?.request, requestJwt, \"code_challenge_method\");\n  \n}\n\nanything();\n\nvoid copyRequestObjectParameters(def request, def requestJwt, def paramName)\n{\n  def delimiter = '?';\n  if(request?.uri.contains('?'))\n  \tdelimiter = '&';\n  \n  if(getJwtTokenClaim(requestJwt, paramName) != null)\n  {\n    def newUri = request?.uri.replaceAll(paramName + \"=\", paramName + \"_old=\");    \n    request?.setUri(newUri + delimiter + paramName + \"=\" + getJwtTokenClaim(requestJwt, paramName));\n  }\n}\n\nString getRequestParameter(def request, def paramName)\n{\n  def paramValue = getQueryParameter(request, paramName);\n  \n  if(!paramValue)\n  \tparamValue = getPostParameter(request, paramName);\n  \n  return paramValue;\n}\n\nString getQueryParameter(def request, def paramName)\n{\n  def params = request?.getQueryStringParams();\n  \n  if(params == null)\n    return null;\n  \n  if(!params.containsKey(paramName))\n    return null;\n  \n  return params.get(paramName)[0];\n}\n\nString getPostParameter(def request, def paramName)\n{\n  def params = request?.getQueryStringParams();\n  \n  if(params == null)\n    return null;\n  \n  if(!params.containsKey(paramName))\n    return null;\n  \n  return params.get(paramName)[0];\n}\n\nString getJwtTokenClaim(String jwt, String claim)\n{\n    def jwtSplit = jwt.split(\"\\\\.\");\n    if(jwtSplit.length != 3)\n      return null;\n  \n    def jwtBodyEncoded = jwtSplit[1];\n    def jwtBody = new String(Base64.getDecoder().decode(jwtBodyEncoded));\n  \n    return getClaimValue(jwtBody, claim);\n}\n\nString getClaimValue(String responseStr, String jsonPath)\n{\n    ObjectMapper mapper = new ObjectMapper();       \n    JsonNode resultObject = mapper.readTree(responseStr);\n\n    String [] splitJsonPath = jsonPath.split(\"\\\\.\");\n\n    for(String path : splitJsonPath)\n    {\n        resultObject = resultObject.findPath(path);\n    }\n\n    return resultObject.textValue();\n\n}"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":8,"name":"MTLS-RequireClientAuthAlways","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"5","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\ndef host = exc?.request?.header?.host;\n\nif(host.equals(\"pingaccess:3000\"))\n{\n  pass();\n}\nelse\n{\n  def certChain = exc?.sslData?.clientCertificateChain;\n  if(!certChain || certChain.isEmpty())\n    fail();\n  else\n    pass();\n}\n"}}],"sites":[{"id":1,"name":"pingfederate","targets":["pingfederate:9031"],"secure":true,"trustedCertificateGroupId":2,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":true,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":4,"name":"Deepthought Product Admin Service Site","targets":["deepthought-admin-service:8080"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":5,"name":"Deepthought Product Service","targets":["deepthought-product-api:8081"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":6,"name":"Deepthought Banking API","targets":["deepthought-bank-api:8081"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":7,"name":"cdr-register","targets":["cdrregister:8084"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":true,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":8,"name":"pingdirectory","targets":["pingdirectory:443"],"secure":true,"trustedCertificateGroupId":2,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":true,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false}],"tokenProvider":{"useThirdParty":false,"type":"PingFederate"},"trustedCertGroups":[{"id":3,"name":"MTLS Certificate Group","useJavaTrustStore":false,"systemGroup":false,"ignoreAllCertificateErrors":false,"skipCertificateDateCheck":true,"revocationChecking":{"crlChecking":false,"ocsp":false,"denyRevocationStatusUnknown":false},"certIds":[17]},{"id":4,"name":"PingFederate-Trust","useJavaTrustStore":false,"systemGroup":false,"ignoreAllCertificateErrors":false,"skipCertificateDateCheck":true,"revocationChecking":{"crlChecking":false,"ocsp":false,"denyRevocationStatusUnknown":false},"certIds":[3]}],"trustedCerts":[{"id":3,"alias":"pingfederate-service","fileData":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lHQVc2MU51NDFNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1Hd3hDekFKQmdOVkJBWVRBbFZUTVFzd0NRWUQNClZRUUlFd0pEVHpFUE1BMEdBMVVFQnhNR1JHVnVkbVZ5TVJVd0V3WURWUVFLRXd4UWFXNW5TV1JsYm5ScGRIa3hGREFTQmdOVkJBc1QNCkMwUmxkbVZzYjNCdFpXNTBNUkl3RUFZRFZRUURFd2xzYjJOaGJHaHZjM1F3SGhjTk1Ua3hNVEk1TURNek1UUTJXaGNOTWpreE1USTUNCk1ETXpNVFEyV2pCc01Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQk1DUTA4eER6QU5CZ05WQkFjVEJrUmxiblpsY2pFVk1CTUcNCkExVUVDaE1NVUdsdVowbGtaVzUwYVhSNU1SUXdFZ1lEVlFRTEV3dEVaWFpsYkc5d2JXVnVkREVTTUJBR0ExVUVBeE1KYkc5allXeG8NCmIzTjBNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQWx5dVV4YWR3MFltSnc4U0QyS0NyakI3aVB6bncNCnNxVkxGOFBNNHhhL0xCUVNFUmVxZFZZaGpIeGFLU2t2RXZyVmJCd1ZEbnpZTjM4QVFDNlRaOWhIaHp3eXpTc2hqSUlmd0hzcm5TQWsNCjI3V2RMY2RGNDZtZFdRZCtzWkhnRzd5MHZmZVJ6Tm9sUy8xcFlDYTlkcDc0MGJrKy82dW5DcG9jc3VFL2dvdGZqQjF0cThPL1A3VmQNCkRTQ3ZzdHRXU3lyK290N1FUNUJWdlZONWt1dDcvL2ZiREdpM2VtMDBzUXdzNnRLNE5rTkxXY0NaYXNEL1E1N2tWcnp2UmFjT1M2aUcNCitzcFFPcVhuWnVoNlVaZDgxbTFSUHFBVE9qdW0yUklNSXdEWmZTR29Yd1ZUY0RGVG1tTDBGTDFFK2d2NU5ka09SdXhVdkJ6aWlHZGENCkJRcUR0ZGFpR1FJREFRQUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJ0c295OXBVZ1JrZDd2OEEyelQ1Tmc3bFFDVlQ2bHprWEINCk10UGtFRkd6VHNkaDdvYWMwYU9qaFZvM0FiSXBiVE0yYTMxVWNEc1NkZlNNZjVNdi9ZM1ovaUQ4d1c5czBTeXhQUFhZdVhCSWgwVTMNCk1CM25GK1hsc1ZkS1g0eS8zQVVUZGdnek9CTGV2THBSNjhwa1pOcjYxR1UzNllOWHRCUzhxQW1sZHVyTXN4U2J1VllrZWdQU2d5RmwNCnNqWWpTYnM2b3M5WFpuOEFwL09jWkxmU3lGM1JtaXo2K1R3aHlleVFPKzMrMitiaDVOamtaZ0JHUW5CbDh6SVZZNEhPQjdPVGpnVEcNCnI1cTNvOW5xMzhwTjFtZ0pnV3dQS2JDeWxiWlczR0hHMVdKRXVxWG8yMG8zOGg1Qk1EaUJLeENxNTF3NjREakQyOUZqZzA5U1pmU1ENCm03OE0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ=="},{"id":17,"alias":"cdr_trustcert_default","fileData":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZmRENDQTJTZ0F3SUJBZ0lKQU5INjA1UkhEYW5yTUEwR0NTcUdTSWIzRFFFQkN3VUFNSE14Q3pBSkJnTlZCQVlUQWtGVk1Rd3cNCkNnWURWUVFJRXdOV1NVTXhFakFRQmdOVkJBY1RDVTFsYkdKdmRYSnVaVEVOTUFzR0ExVUVDaE1FUVZCQlF6RVdNQlFHQTFVRUN4TU4NClVHbHVaeUJKWkdWdWRHbDBlVEViTUJrR0ExVUVBeE1TWTJSeUxYSmxaMmx6ZEdWeUxteHZZMkZzTUI0WERUSXdNRGd3TkRJek5EZzENCk0xb1hEVE13TURnd01qSXpORGcxTTFvd2N6RUxNQWtHQTFVRUJoTUNRVlV4RERBS0JnTlZCQWdUQTFaSlF6RVNNQkFHQTFVRUJ4TUoNClRXVnNZbTkxY201bE1RMHdDd1lEVlFRS0V3UkJVRUZETVJZd0ZBWURWUVFMRXcxUWFXNW5JRWxrWlc1MGFYUjVNUnN3R1FZRFZRUUQNCkV4SmpaSEl0Y21WbmFYTjBaWEl1Ykc5allXd3dnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFDcEpPTmwNCkRzeHVSbUJaY0FUR1RpUnFqa1JqV0xOa3psTTluamZjU3ZJSTBJNWhXemtDOEF5dEx4WHRYQnEyOEpSSzdRbXRHK0J0MEpqdFZ4bjMNClgyUWc2T3B1d2tidXlUVUw0RHMxNElSRFNPLzFrVW5xem9Uck1uUkJ1VmdiWVBHc3JYWnM0Qys5MkNZekhxVVozL0ExSC9xSkxhK2kNCmd6SkZYcmVWMGxEcHlhdWNEMnZubFo1U2FtV1JVRnNnSjZneFhzSjhlY1BoNTFNOHJvRFQ4cXhMRnBrYVVEVmYzL0xmcUIzYmZzUFgNClZUTzBqR3JBbGF5eFhMRjQzMzFuRjh0RlpCLzNBdEJDK0lrQUZnWVZEMTBxU2o5SjV4M2x3UzcxQXV3ZlFLd3ptODdhWk9uWDU3RUsNCmdaakxlcm1BV0NaTzBNOGRlZGJaSlN6NWs1U1Rja2tKWUcyaUtwbFZKdFVEMStmVVpGOHBqeDRxSGZuUFozVWhlUzNNV05SdjJPaVYNCm56RWFkZE01eUEyNkowb043WlEvR2JyZnlYelk5R2dZcUY1eUZQR0o5dTNhR3g2SlZTSWFjNDcrUnhtMEhnaEJJRm16a0JLTVVxelUNCjRwMGE2bWYvWlNTdVJweHIrZlRQUHNxa3B4anRJZkIyWXRIZHZ2Z2c0QUMyMTFHQUo0Q3Rjb0RyTGlGMjloRTQyWW9lbGRLcDB3REUNCjNoYUs2YitBODhnalhDRjRWQWRGb2c1MTFCWURXSGwxSm1SRVo1SDJLdHIzQTFuRXgxQk9SRzhvZWFxS0xxVGJ0WkcvTTlhYXZIZzYNCklhdlY0Q0M0MG5qSFFWWUpCL1hUSVNNdmZ0dG9wUldsc29tQkJIRmhTZjNuRmcrVWM1eDUrd1g3UktxUGo3RUM1SWJWNndJREFRQUINCm94TXdFVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUI5N0FTWmwwYkxudXpsR2o4dFBtRnkNCm1RZFdGSmovUS9MWlNIa2t5UVg4TCtUZndYU0ZTVjdDMHc3b0ZSY2t1bkkzTFJPQUg2dkJUcnE2V2MxL1pSWlo1SnhYVmwzelhiTksNClVMaCtoMlBUTmM2OUFtOHFwcUZrNTk5dmd2QTljTEM3VUpYK1YxWkFhM2pUNG9xL1hxdEp5ZURXbzVDOUY2K2Y2Z2sraTlGRHIzYkINClQyNWVwanRHN2tzUkRoeEF4T1JLbm9MS1FqTmhVM1U5Y3Q2RjB0VmFpTWtMQzNoejFUSHk1U1pPU294ZitpaUdXcThpOGU4MjRGcTcNCmFIckdMa1A5aUlrTzQzZXlNMk85ZHpqMXIrVEZYSnkwUVVNWFNkbUlrYjVjS1hzL3k2cDBEZFZzSmFxRGdiUnVrNmFCekhvdFU3KzENCk1EelN0ZVJJd25OdFl3MTFaRTNkbndwakhPbTk0eWpjOWFTbHRSR0tDNmo4SFByMEUxWWpzRVBaM2lnYm5PWlVCNzVXblRvTDdNOVoNClA4UjhieXd4UFk5QTlqVnRVb28yZkZaNzRJQlVvUkRUUFdyYzh3SHV3T0tldGszTXhUc0k4S3NobzkxZysvb3loSm9JMkFVR0lwQzMNCnJRZmhBcVJoYzZqSFUyU2xwQmV1aWdCQ3VKa0tQREdKdHRDMEtOK0lJRXNYMTZlSGMzZDZRMGY1RVAxMUpPSjVJNGMwaXpLRy96VXgNCnFvZzBQcG5NbEhMR2xyQU4wd3oyU0J1TWt3ZDVvKzB0aUNLVGs0UCtPdGhpYkcweWhHVDIyY050NHl1ck5rM294Mi9RTThYOGZKbnANCmIxMVVSY3REd1VNb0pDTngySHhLSUJ6QzZoUWpidE1WNVVGcXVpalA1cDQ4bXZkT29KeGZrQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0="}],"unknownResources":{"errorStatusCode":403,"errorTemplateFile":"general.error.page.template.html","errorContentType":"HTML","agentDefaultMode":"DENY","agentDefaultCacheTTL":900,"auditLevel":"OFF"},"virtualHosts":[{"id":5,"host":"sso.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":3},{"id":7,"host":"sso-admin.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0},{"id":10,"host":"api.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":3},{"id":11,"host":"pingaccess","port":3000,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0},{"id":12,"host":"host.docker.internal","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":3},{"id":13,"host":"mockregister.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0},{"id":14,"host":"pd.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0}],"webSessionMgmt":{"keyRollEnabled":true,"keyRollPeriodInHours":24,"issuer":"PingAccess","signingAlgorithm":"P-256","cookieName":"PA","sessionStateCookieName":"PA_STATE","updateTokenWindowInSeconds":60,"encryptionAlgorithm":"A128CBC-HS256","nonceCookieTimeToLiveInMinutes":5}}}