apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx-public-passthrough
    nginx.ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  name: pingaccess-sso-ingress
  namespace: ping-cloud-devops-eks-ttran
spec:
  rules:
  - host: sso.pingapac.com
    http:
      paths:
      - path: /.well-known/acme-challenge/
        backend:
          serviceName: pingaccess
          servicePort: 7080
      - backend:
          serviceName: pingaccess
          servicePort: 443

---


apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx-public-passthrough
    nginx.ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  name: pingaccess-ingress
  namespace: ping-cloud-devops-eks-ttran
spec:
  rules:
  - host: api.pingapac.com
    http:
      paths:
      - path: /.well-known/acme-challenge/
        backend:
          serviceName: pingaccess
          servicePort: 7080
#      - path: /
#        backend:
#          serviceName: pingaccess
#          servicePort: 443

---


apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: pingaccess-mockregister-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    kubernetes.io/ingress.class: nginx-public-passthrough
    # Possible fix for some 502 failures on admin assets and api requests.
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  rules:
  - host: mockregister.pingapac.com
    http:
      paths:
      # This rule gives internal access to the pingaccess admin services.
      - path: /
        backend:
          serviceName: pingaccess
          servicePort: 443


